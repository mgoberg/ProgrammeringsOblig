({"theMap":"{\"version\":3,\"sources\":[\"builtin://pprint\"],\"names\":[\"builtin://pprint\",\",67,7,1787,67,22,1802\",\",68,12,1822,68,28,1838\",\",70,9,1864,70,26,1881\",\",70,30,1885,70,48,1903\",\",70,50,1905,70,78,1933\",\",71,32,1966,71,47,1981\",\",71,50,1984,71,66,2000\",\",71,32,1966,71,66,2000\",\",71,12,1946,71,74,2008\",\",77,24,2109,77,45,2130\",\",78,49,2180,78,63,2194\",\",78,44,2175,78,71,2202\",\",78,24,2155,78,72,2203\",\",79,26,2230,79,43,2247\",\",80,53,2301,80,67,2315\",\",80,48,2296,80,75,2323\",\",80,26,2274,80,76,2324\",\",81,62,2387,81,78,2403\",\",81,85,2410,81,101,2426\",\",81,80,2405,81,109,2434\",\",81,57,2382,81,110,2435\",\",81,34,2359,81,111,2436\",\",82,59,2496,82,78,2515\",\",82,85,2522,82,99,2536\",\",82,80,2517,82,107,2544\",\",82,54,2491,82,108,2545\",\",82,33,2470,82,109,2546\",\",83,65,2612,83,82,2629\",\",83,89,2636,83,106,2653\",\",83,84,2631,83,114,2661\",\",83,60,2607,83,115,2662\",\",83,37,2584,83,116,2663\",\",84,53,2717,84,67,2731\",\",84,48,2712,84,75,2739\",\",84,26,2690,84,76,2740\",\",85,53,2794,85,67,2808\",\",85,48,2789,85,75,2816\",\",85,26,2767,85,76,2817\",\",86,66,2884,86,80,2898\",\",86,61,2879,86,88,2906\",\",86,33,2851,86,89,2907\",\",76,4,2062,87,7,2915\",\",90,4,2957,90,23,2976\",\",54,0,966,92,3,2986\",\",55,2,984,55,57,1039\",\",56,2,1042,56,67,1107\",\",57,2,1110,57,59,1167\",\",58,2,1170,58,69,1237\",\",59,2,1240,59,93,1331\",\",60,2,1334,60,89,1421\",\",61,2,1424,61,96,1518\",\",62,2,1521,62,72,1591\",\",63,2,1594,63,76,1668\",\",64,2,1671,64,72,1741\",\",93,0,2987,95,3,3064\",\",94,2,3000,94,62,3060\",\",128,5,4378,128,18,4391\",\",129,26,4419,129,32,4425\",\",129,56,4449,129,62,4455\",\",129,34,4427,129,69,4462\",\",131,9,4481,131,23,4495\",\",131,4,4476,131,30,4502\",\",138,16,4636,138,33,4653\",\",141,14,4696,141,35,4717\",\",141,4,4686,141,36,4718\",\",144,14,4768,144,36,4790\",\",145,21,4812,145,42,4833\",\",145,16,4807,145,50,4841\",\",148,14,4888,148,36,4910\",\",151,8,5019,151,19,5030\",\",150,10,4971,152,9,5040\",\",153,6,5047,153,20,5061\",\",149,4,4915,154,7,5069\",\",157,7,5148,157,22,5163\",\",159,14,5197,159,25,5208\",\",160,10,5219,160,22,5231\",\",161,10,5242,161,23,5255\",\",162,23,5279,162,30,5286\",\",163,42,5336,163,52,5346\",\",164,74,5422,164,81,5429\",\",164,83,5431,164,93,5441\",\",164,52,5400,164,94,5442\",\",166,10,5489,166,22,5501\",\",167,18,5520,167,37,5539\",\",167,39,5541,167,49,5551\",\",169,10,5591,169,24,5605\",\",170,18,5624,170,28,5634\",\",170,30,5636,170,40,5646\",\",171,49,5697,171,67,5715\",\",171,69,5717,171,79,5727\",\",171,44,5692,171,80,5728\",\",172,56,5786,172,61,5791\",\",172,51,5781,172,68,5798\",\",172,70,5800,172,80,5810\",\",172,46,5776,172,81,5811\",\",175,12,5875,175,55,5918\",\",177,12,5947,177,27,5962\",\",178,23,5986,178,33,5996\",\",181,31,6082,181,68,6119\",\",181,70,6121,181,80,6131\",\",181,26,6077,181,81,6132\",\",184,28,6219,184,38,6229\",\",186,12,6259,186,26,6273\",\",187,20,6294,187,30,6304\",\",187,32,6306,187,42,6316\",\",190,37,6417,190,53,6433\",\",190,55,6435,190,65,6445\",\",190,32,6412,190,66,6446\",\",190,16,6396,190,67,6447\",\",191,53,6501,191,70,6518\",\",191,72,6520,191,82,6530\",\",191,48,6496,191,83,6531\",\",191,32,6480,191,84,6532\",\",192,19,6552,192,33,6566\",\",192,18,6551,192,48,6581\",\",196,33,6861,196,49,6877\",\",196,51,6879,196,61,6889\",\",196,28,6856,196,62,6890\",\",196,12,6840,196,63,6891\",\",198,33,6941,198,50,6958\",\",198,52,6960,198,62,6970\",\",198,28,6936,198,63,6971\",\",198,12,6920,198,64,6972\",\",162,6,5262,200,9,6996\",\",203,14,7025,203,18,7029\",\",203,46,7057,203,60,7071\",\",203,62,7073,203,78,7089\",\",203,35,7046,203,79,7090\",\",203,20,7031,203,80,7091\",\",203,2,7013,203,82,7093\",\",204,2,7096,204,14,7108\",\",207,16,7130,207,32,7146\",\",208,18,7165,208,35,7182\",\",209,32,7215,209,44,7227\",\",209,46,7229,209,60,7243\",\",209,23,7206,209,61,7244\",\",210,32,7281,210,44,7293\",\",210,46,7295,210,60,7309\",\",210,23,7272,210,61,7310\",\",211,54,7369,211,69,7384\",\",211,71,7386,211,88,7403\",\",211,34,7349,211,89,7404\",\",212,36,7445,212,48,7457\",\",212,50,7459,212,64,7473\",\",212,25,7434,212,65,7474\",\",213,31,7510,213,40,7519\",\",214,23,7547,214,41,7565\",\",215,28,7598,215,44,7614\",\",215,21,7591,215,52,7622\",\",217,29,7657,217,40,7668\",\",217,25,7653,217,41,7669\",\",218,9,7683,218,17,7691\",\",219,9,7701,219,17,7709\",\",220,9,7719,220,17,7727\",\",221,9,7737,221,17,7745\",\",222,9,7755,222,17,7763\",\",223,9,7773,223,17,7781\",\",224,9,7791,224,17,7799\",\",225,9,7809,225,17,7817\",\",226,8,7826,226,16,7834\",\",227,7,7842,227,15,7850\",\",229,23,7875,229,31,7883\",\",229,15,7867,229,42,7894\",\",230,21,7920,230,30,7929\",\",230,13,7912,230,30,7929\",\",231,19,7949,231,28,7958\",\",231,12,7942,231,28,7958\",\",235,7,8049,235,21,8063\",\",235,23,8065,235,30,8072\",\",236,28,8101,236,35,8108\",\",236,22,8095,236,35,8108\",\",236,16,8089,236,36,8109\",\",236,10,8083,236,36,8109\",\",234,2,7991,238,5,8123\",\",240,26,8154,240,35,8163\",\",240,17,8145,240,58,8186\",\",241,17,8208,241,57,8248\",\",242,21,8274,242,31,8284\",\",242,21,8274,242,40,8293\",\",242,15,8268,242,41,8294\",\",243,21,8320,243,31,8330\",\",243,21,8320,243,40,8339\",\",243,15,8314,243,41,8340\",\",244,23,8368,244,33,8378\",\",244,23,8368,244,42,8387\",\",244,17,8362,244,43,8388\",\",245,13,8406,245,21,8414\",\",246,13,8428,246,21,8436\",\",247,21,8458,247,35,8472\",\",247,21,8458,247,48,8485\",\",247,15,8452,247,49,8486\",\",248,21,8512,248,35,8526\",\",248,21,8512,248,48,8539\",\",248,15,8506,248,49,8540\",\",250,22,8568,250,32,8578\",\",250,16,8562,250,33,8579\",\",251,42,8626,251,51,8635\",\",251,42,8626,251,55,8639\",\",251,34,8618,251,56,8640\",\",251,30,8614,251,56,8640\",\",251,24,8608,251,57,8641\",\",253,20,8752,253,28,8760\",\",253,16,8748,253,28,8760\",\",253,16,8748,253,33,8765\",\",253,2,8734,253,38,8770\",\",256,24,8891,256,32,8899\",\",256,19,8886,256,32,8899\",\",256,19,8886,256,36,8903\",\",256,2,8869,256,38,8905\",\",259,5,9017,259,21,9033\",\",259,44,9056,259,53,9065\",\",259,44,9056,259,64,9076\",\",259,36,9048,259,65,9077\",\",259,29,9041,259,65,9077\",\",259,23,9035,259,66,9078\",\",260,29,9108,260,38,9117\",\",260,29,9108,260,49,9128\",\",260,21,9100,260,50,9129\",\",260,14,9093,260,50,9129\",\",260,53,9132,260,62,9141\",\",260,14,9093,260,62,9141\",\",260,14,9093,260,70,9149\",\",260,8,9087,260,71,9150\",\",264,5,9273,264,21,9289\",\",264,50,9318,264,59,9327\",\",264,50,9318,264,70,9338\",\",264,44,9312,264,71,9339\",\",264,36,9304,264,72,9340\",\",264,29,9297,264,72,9340\",\",264,23,9291,264,73,9341\",\",265,35,9377,265,44,9386\",\",265,35,9377,265,55,9397\",\",265,29,9371,265,56,9398\",\",265,21,9363,265,57,9399\",\",265,14,9356,265,57,9399\",\",265,66,9408,265,75,9417\",\",265,66,9408,265,83,9425\",\",265,60,9402,265,84,9426\",\",265,14,9356,265,84,9426\",\",265,8,9350,265,85,9427\",\",271,7,9534,271,19,9546\",\",272,12,9564,272,26,9578\",\",273,10,9592,273,19,9601\",\",273,10,9592,273,23,9605\",\",270,2,9487,275,5,9619\",\",278,5,9768,278,19,9782\",\",279,29,9818,279,48,9837\",\",279,8,9797,279,56,9845\",\",284,35,9953,284,58,9976\",\",284,29,9947,284,59,9977\",\",284,22,9940,284,59,9977\",\",284,68,9986,284,77,9995\",\",284,68,9986,284,85,10003\",\",284,62,9980,284,86,10004\",\",284,22,9940,284,86,10004\",\",284,16,9934,284,87,10005\",\",284,8,9926,284,87,10005\",\",284,2,9920,284,88,10006\"],\"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\":\"builtin://pprint\"}",
"theModule":"function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__283(R,NAMESPACE,M,$$underscore_import3,$$underscore_import3,$$included$129,$VS8) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"builtin://pprint\";\nvar D = R.undefined;\nvar L = [[M,66,2,1753,74,5,2032],\n[M,67,7,1787,67,16,1796],\n[M,68,12,1822,68,21,1831],\n[M,70,9,1864,70,26,1881],\n[M,70,50,1905,70,56,1911],\n[M,70,50,1905,70,78,1933],\n[M,71,12,1946,71,18,1952],\n[M,71,32,1966,71,47,1981],\n[M,71,50,1984,71,66,2000],\n[M,71,12,1946,71,74,2008],\n[M,71,32,1966,71,66,2000],\n[M,70,30,1885,70,48,1903],\n[M,68,12,1822,68,28,1838],\n[M,67,7,1787,67,22,1802],\n[M,75,2,2036,88,5,2921],\n[M,77,24,2109,77,45,2130],\n[M,77,6,2091,77,45,2130],\n[M,76,4,2062,87,7,2915],\n[M,78,24,2155,78,72,2203],\n[M,78,49,2180,78,63,2194],\n[M,78,6,2137,78,72,2203],\n[M,79,26,2230,79,43,2247],\n[M,79,6,2210,79,43,2247],\n[M,80,26,2274,80,76,2324],\n[M,80,53,2301,80,67,2315],\n[M,80,6,2254,80,76,2324],\n[M,81,34,2359,81,111,2436],\n[M,81,85,2410,81,101,2426],\n[M,81,62,2387,81,78,2403],\n[M,81,6,2331,81,111,2436],\n[M,82,33,2470,82,109,2546],\n[M,82,85,2522,82,99,2536],\n[M,82,59,2496,82,78,2515],\n[M,82,6,2443,82,109,2546],\n[M,83,37,2584,83,116,2663],\n[M,83,89,2636,83,106,2653],\n[M,83,65,2612,83,82,2629],\n[M,83,6,2553,83,116,2663],\n[M,84,26,2690,84,76,2740],\n[M,84,53,2717,84,67,2731],\n[M,84,6,2670,84,76,2740],\n[M,85,26,2767,85,76,2817],\n[M,85,53,2794,85,67,2808],\n[M,85,6,2747,85,76,2817],\n[M,86,33,2851,86,89,2907],\n[M,86,66,2884,86,80,2898],\n[M,86,6,2824,86,89,2907],\n[M,76,10,2068,76,19,2077],\n[M,89,2,2925,91,5,2982],\n[M,90,4,2957,90,10,2963],\n[M,90,4,2957,90,23,2976],\n[M,55,2,984,55,57,1039],\n[M,55,25,1007,55,31,1013],\n[M,55,49,1031,55,56,1038],\n[M,56,2,1042,56,67,1107],\n[M,56,13,1053,56,19,1059],\n[M,56,35,1075,56,41,1081],\n[M,56,59,1099,56,66,1106],\n[M,57,2,1110,57,59,1167],\n[M,57,27,1135,57,33,1141],\n[M,57,51,1159,57,58,1166],\n[M,58,2,1170,58,69,1237],\n[M,58,15,1183,58,21,1189],\n[M,58,37,1205,58,43,1211],\n[M,58,61,1229,58,68,1236],\n[M,59,2,1240,59,93,1331],\n[M,59,18,1256,59,27,1265],\n[M,59,36,1274,59,45,1283],\n[M,59,61,1299,59,67,1305],\n[M,59,85,1323,59,92,1330],\n[M,60,2,1334,60,89,1421],\n[M,60,19,1351,60,25,1357],\n[M,60,32,1364,60,41,1373],\n[M,60,57,1389,60,63,1395],\n[M,60,81,1413,60,88,1420],\n[M,61,2,1424,61,96,1518],\n[M,61,20,1442,61,29,1451],\n[M,61,39,1461,61,48,1470],\n[M,61,64,1486,61,70,1492],\n[M,61,88,1510,61,95,1517],\n[M,62,2,1521,62,72,1591],\n[M,62,15,1534,62,24,1543],\n[M,62,40,1559,62,46,1565],\n[M,62,64,1583,62,71,1590],\n[M,63,2,1594,63,76,1668],\n[M,63,22,1614,63,28,1620],\n[M,63,44,1636,63,50,1642],\n[M,63,68,1660,63,75,1667],\n[M,64,2,1671,64,72,1741],\n[M,64,15,1684,64,24,1693],\n[M,64,40,1709,64,46,1715],\n[M,64,64,1733,64,71,1740],\n[M,54,0,966,92,3,2986],\n[M,94,2,3000,94,62,3060],\n[M,94,19,3017,94,25,3023],\n[M,94,38,3036,94,45,3043],\n[M,94,52,3050,94,61,3059],\n[M,93,0,2987,95,3,3064],\n[M,127,0,4336,133,3,4512],\n[M,129,26,4419,129,32,4425],\n[M,129,56,4449,129,62,4455],\n[M,129,34,4427,129,69,4462],\n[M,134,0,4513,205,3,7112],\n[M,137,2,4602,139,5,4659],\n[M,140,2,4662,142,5,4724],\n[M,143,2,4727,146,5,4847],\n[M,147,2,4850,155,5,5075],\n[M,149,4,4915,154,7,5069],\n[M,150,10,4971,152,9,5040],\n[M,151,8,5019,151,19,5030],\n[M,156,2,5078,202,5,7010],\n[M,156,56,5132,156,63,5139],\n[M,159,14,5197,159,25,5208],\n[M,160,10,5219,160,22,5231],\n[M,161,10,5242,161,23,5255],\n[M,162,23,5279,162,30,5286],\n[M,163,42,5336,163,52,5346],\n[M,163,8,5302,163,53,5347],\n[M,162,6,5262,200,9,6996],\n[M,164,74,5422,164,81,5429],\n[M,164,83,5431,164,93,5441],\n[M,164,52,5400,164,94,5442],\n[M,164,8,5356,164,95,5443],\n[M,167,39,5541,167,49,5551],\n[M,167,18,5520,167,37,5539],\n[M,165,8,5452,167,50,5552],\n[M,170,30,5636,170,40,5646],\n[M,170,18,5624,170,28,5634],\n[M,168,8,5561,170,41,5647],\n[M,171,69,5717,171,79,5727],\n[M,171,8,5656,171,81,5729],\n[M,172,70,5800,172,80,5810],\n[M,172,56,5786,172,61,5791],\n[M,172,8,5738,172,82,5812],\n[M,175,12,5875,175,55,5918],\n[M,178,23,5986,178,33,5996],\n[M,173,8,5821,179,13,6011],\n[M,181,70,6121,181,80,6131],\n[M,180,8,6020,181,82,6133],\n[M,184,28,6219,184,38,6229],\n[M,187,32,6306,187,42,6316],\n[M,187,20,6294,187,30,6304],\n[M,182,8,6142,188,13,6331],\n[M,190,55,6435,190,65,6445],\n[M,191,72,6520,191,82,6530],\n[M,196,51,6879,196,61,6889],\n[M,198,52,6960,198,62,6970],\n[M,192,18,6551,192,48,6581],\n[M,192,19,6552,192,33,6566],\n[M,190,16,6396,190,67,6447],\n[M,191,32,6480,191,84,6532],\n[M,196,12,6840,196,63,6891],\n[M,198,12,6920,198,64,6972],\n[M,190,10,6390,199,13,6986],\n[M,189,8,6340,199,13,6986],\n[M,162,12,5268,162,21,5277],\n[M,156,24,5100,156,30,5106],\n[M,156,41,5117,156,51,5127],\n[M,203,13,7024,203,81,7092],\n[M,203,14,7025,203,18,7029],\n[M,203,46,7057,203,60,7071],\n[M,203,62,7073,203,78,7089],\n[M,204,2,7096,204,14,7108],\n[M,203,2,7013,203,82,7093],\n[M,134,25,4538,134,34,4547],\n[M,209,15,7198,209,65,7248],\n[M,209,32,7215,209,44,7227],\n[M,209,46,7229,209,60,7243],\n[M,210,15,7264,210,65,7314],\n[M,210,32,7281,210,44,7293],\n[M,210,46,7295,210,60,7309],\n[M,211,17,7332,211,93,7408],\n[M,211,54,7369,211,69,7384],\n[M,211,71,7386,211,88,7403],\n[M,212,14,7423,212,69,7478],\n[M,212,36,7445,212,48,7457],\n[M,212,50,7459,212,64,7473],\n[M,213,16,7495,213,44,7523],\n[M,213,31,7510,213,40,7519],\n[M,214,15,7539,214,45,7569],\n[M,215,13,7583,215,56,7626],\n[M,217,0,7628,217,45,7673],\n[M,217,29,7657,217,40,7668],\n[M,217,16,7644,217,22,7650],\n[M,229,0,7852,229,46,7898],\n[M,233,0,7960,239,3,8127],\n[M,234,2,7991,238,5,8123],\n[M,235,23,8065,235,30,8072],\n[M,236,10,8083,236,36,8109],\n[M,236,22,8095,236,35,8108],\n[M,236,28,8101,236,35,8108],\n[M,240,0,8128,240,62,8190],\n[M,240,37,8165,240,50,8178],\n[M,240,17,8145,240,58,8186],\n[M,241,0,8191,241,61,8252],\n[M,241,36,8227,241,49,8240],\n[M,241,17,8208,241,57,8248],\n[M,242,0,8253,242,45,8298],\n[M,242,21,8274,242,40,8293],\n[M,242,21,8274,242,31,8284],\n[M,243,0,8299,243,45,8344],\n[M,243,21,8320,243,40,8339],\n[M,243,21,8320,243,31,8330],\n[M,244,0,8345,244,47,8392],\n[M,244,23,8368,244,42,8387],\n[M,244,23,8368,244,33,8378],\n[M,247,0,8437,247,53,8490],\n[M,247,21,8458,247,48,8485],\n[M,247,21,8458,247,35,8472],\n[M,248,0,8491,248,53,8544],\n[M,248,21,8512,248,48,8539],\n[M,248,21,8512,248,35,8526],\n[M,250,0,8546,250,37,8583],\n[M,251,0,8584,251,61,8645],\n[M,251,30,8614,251,56,8640],\n[M,251,42,8626,251,55,8639],\n[M,252,0,8646,254,3,8774],\n[M,253,2,8734,253,38,8770],\n[M,253,16,8748,253,33,8765],\n[M,253,16,8748,253,28,8760],\n[M,252,15,8661,252,21,8667],\n[M,252,28,8674,252,34,8680],\n[M,252,42,8688,252,51,8697],\n[M,252,58,8704,252,67,8713],\n[M,252,74,8720,252,83,8729],\n[M,255,0,8775,257,3,8909],\n[M,256,2,8869,256,38,8905],\n[M,256,19,8886,256,36,8903],\n[M,256,19,8886,256,32,8899],\n[M,255,21,8796,255,27,8802],\n[M,255,34,8809,255,40,8815],\n[M,255,48,8823,255,57,8832],\n[M,255,64,8839,255,73,8848],\n[M,255,80,8855,255,89,8864],\n[M,258,0,8910,262,3,9160],\n[M,259,29,9041,259,65,9077],\n[M,259,44,9056,259,64,9076],\n[M,260,14,9093,260,70,9149],\n[M,260,14,9093,260,62,9141],\n[M,260,14,9093,260,50,9129],\n[M,260,29,9108,260,49,9128],\n[M,258,18,8928,258,24,8934],\n[M,258,31,8941,258,37,8947],\n[M,258,47,8957,258,56,8966],\n[M,258,70,8980,258,79,8989],\n[M,258,90,9000,258,99,9009],\n[M,263,0,9161,267,3,9437],\n[M,264,29,9297,264,72,9340],\n[M,264,50,9318,264,70,9338],\n[M,265,14,9356,265,84,9426],\n[M,265,66,9408,265,83,9425],\n[M,265,14,9356,265,57,9399],\n[M,265,35,9377,265,55,9397],\n[M,263,23,9184,263,29,9190],\n[M,263,36,9197,263,42,9203],\n[M,263,52,9213,263,61,9222],\n[M,263,75,9236,263,84,9245],\n[M,263,95,9256,263,104,9265],\n[M,269,0,9439,276,3,9623],\n[M,270,2,9487,275,5,9619],\n[M,273,10,9592,273,23,9605],\n[M,273,10,9592,273,19,9601],\n[M,269,20,9459,269,29,9468],\n[M,269,39,9478,269,43,9482],\n[M,277,0,9624,281,3,9855],\n[M,279,8,9797,279,56,9845],\n[M,279,29,9818,279,48,9837],\n[M,277,27,9651,277,33,9657],\n[M,277,40,9664,277,46,9670],\n[M,277,56,9680,277,65,9689],\n[M,277,75,9699,277,84,9708],\n[M,277,93,9717,277,102,9726],\n[M,277,113,9737,277,122,9746],\n[M,277,132,9756,277,136,9760],\n[M,283,0,9857,285,3,10010],\n[M,284,8,9926,284,87,10005],\n[M,284,22,9940,284,86,10004],\n[M,284,68,9986,284,85,10003],\n[M,284,22,9940,284,59,9977],\n[M,284,35,9953,284,58,9976],\n[\"dummy location\"],\n[M,231,12,7942,231,28,7958],\n[M,230,13,7912,230,30,7929],\n[M,3,0,13,342,3,11598]];\nvar $type$Nothing1 = R.getModuleField(\"builtin://global\",\"types\",\"Nothing\");\nvar string$length1 = R.getModuleField(\"builtin://global\",\"values\",\"string-length\");\nvar raise1 = R.getModuleField(\"builtin://global\",\"values\",\"raise\");\nvar tostring1 = R.getModuleField(\"builtin://global\",\"values\",\"tostring\");\nvar nothing5 = R.getModuleField(\"builtin://global\",\"values\",\"nothing\");\nvar _minus10 = R.getModuleField(\"builtin://global\",\"values\",\"_minus\");\nvar $type$Number3 = R.getModuleField(\"builtin://global\",\"types\",\"Number\");\nvar string$repeat1 = R.getModuleField(\"builtin://global\",\"values\",\"string-repeat\");\nvar _greaterequal2 = R.getModuleField(\"builtin://global\",\"values\",\"_greaterequal\");\nvar _plus5 = R.getModuleField(\"builtin://global\",\"values\",\"_plus\");\nvar $type$Boolean6 = R.getModuleField(\"builtin://global\",\"types\",\"Boolean\");\nvar $type$String8 = R.getModuleField(\"builtin://global\",\"types\",\"String\");\nvar $underscore_import9 = $$underscore_import3;\nvar $underscore_import13 = $$underscore_import3;\nvar $included$110 = $$included$129;\nvar VS12 = $VS8;\nvar $cases_dispatch945 = {\"mt-doc\":6,\n\"concat\":7,\n\"str\":9,\n\"blank\":11,\n\"align\":13,\n\"nest\":14,\n\"hardline\":16,\n\"if-flat\":19,\n\"align-spaces\":23,\n\"group\":27};\nvar $cases_dispatch230 = {\"mt-doc\":2,\n\"str\":3,\n\"hardline\":5,\n\"blank\":6,\n\"concat\":8,\n\"nest\":11,\n\"if-flat\":14,\n\"group\":17,\n\"align\":19,\n\"align-spaces\":21};\nvar empty2 = R.getModuleField(\"builtin://lists\",\"values\",\"empty\");\nvar is$empty3 = R.getModuleField(\"builtin://lists\",\"values\",\"is-empty\");\nvar List4 = R.getModuleField(\"builtin://lists\",\"types\",\"List\");\nvar fold5 = R.getModuleField(\"builtin://lists\",\"values\",\"fold\");\nvar link6 = R.getModuleField(\"builtin://lists\",\"values\",\"link\");\nvar list7 = R.getModuleField(\"builtin://lists\",\"values\",\"list\");\nvar $toplevel23 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__283($$resumer11) {\nvar $step22 = 0;\nvar $elidedFrames92 = 0;\nvar $ans89 = D;\nvar $al90 = L[283];\nif(R.isAR($$resumer11)) {\n$step22 = $$resumer11.step;\n$al90 = $$resumer11.from;\n$ans89 = $$resumer11.ans;\n$elidedFrames92 = $$resumer11.elidedFrames;\n$resumer11 = $$resumer11.args[0];\nis$PPrintDoc341 = $$resumer11.vars[0];\nlbrack1360 = $$resumer11.vars[1];\nis$align$spaces373 = $$resumer11.vars[2];\nsurround1608 = $$resumer11.vars[3];\nhang1487 = $$resumer11.vars[4];\nrparen1329 = $$resumer11.vars[5];\nsbreak1240 = $$resumer11.vars[6];\nvert1311 = $$resumer11.vars[7];\ndquote1418 = $$resumer11.vars[8];\nstr$dquote1372 = $$resumer11.vars[9];\nnumber1194 = $$resumer11.vars[10];\nprefix1533 = $$resumer11.vars[11];\nblank1202 = $$resumer11.vars[12];\nis$Item392 = $$resumer11.vars[13];\nsemi1244 = $$resumer11.vars[14];\nsoft$surround1648 = $$resumer11.vars[15];\nbrackets1364 = $$resumer11.vars[16];\nis$item394 = $$resumer11.vars[17];\nis$group377 = $$resumer11.vars[18];\nrbrack1361 = $$resumer11.vars[19];\nis$if$flat365 = $$resumer11.vars[20];\nsquote1474 = $$resumer11.vars[21];\nflow$map1273 = $$resumer11.vars[22];\nlbrace1341 = $$resumer11.vars[23];\nparens1333 = $$resumer11.vars[24];\nlabel$align$surround1701 = $$resumer11.vars[25];\nItem1707 = $$resumer11.vars[26];\nconcat1708 = $$resumer11.vars[27];\nsemibreak1712 = $$resumer11.vars[28];\nis$nest361 = $$resumer11.vars[29];\nalign$spaces375 = $$resumer11.vars[30];\nseparate1670 = $$resumer11.vars[31];\ncommabreak1711 = $$resumer11.vars[32];\ncollect$concats409 = $$resumer11.vars[33];\ninfix1549 = $$resumer11.vars[34];\nis$concat358 = $$resumer11.vars[35];\nalign1484 = $$resumer11.vars[36];\ninfix$break1568 = $$resumer11.vars[37];\nrbrace1342 = $$resumer11.vars[38];\nis$align369 = $$resumer11.vars[39];\nmt$doc1270 = $$resumer11.vars[40];\nsurround$separate1687 = $$resumer11.vars[41];\nitem396 = $$resumer11.vars[42];\nis$hardline350 = $$resumer11.vars[43];\nbraces1346 = $$resumer11.vars[44];\nrangle1710 = $$resumer11.vars[45];\nPPrintDoc231 = $$resumer11.vars[46];\nformat242 = $$resumer11.vars[47];\ngroup1265 = $$resumer11.vars[48];\nnest1483 = $$resumer11.vars[49];\nhardline1237 = $$resumer11.vars[50];\nlangle1709 = $$resumer11.vars[51];\nif$flat1203 = $$resumer11.vars[52];\nis$mt$doc108 = $$resumer11.vars[53];\nanswer1713 = $$resumer11.vars[54];\nis$blank354 = $$resumer11.vars[55];\nis$str346 = $$resumer11.vars[56];\nstr$squote1426 = $$resumer11.vars[57];\nstr1191 = $$resumer11.vars[58];\nlparen1319 = $$resumer11.vars[59];\nflow1293 = $$resumer11.vars[60];\ncomma1241 = $$resumer11.vars[61];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans89 = R.mC();\n}\nwhile(!R.isContinuation($ans89)) {\nswitch($step22) {\ncase 0: var PPrintDoc93 = R.nB(\"PPrintDoc\",L[92]);\nvar PPrintDoc231 = R.mBA(PPrintDoc93,\"PPrintDoc\");\nvar Item94 = R.nB(\"Item\",L[97]);\nvar Item1707 = R.mBA(Item94,\"Item\");\nvar PPrintDoc339 = {\"$var\":D};\nvar is$PPrintDoc341 = {\"$var\":D};\nvar is$mt$doc108 = {\"$var\":D};\nvar mt$doc344 = {\"$var\":D};\nvar is$str346 = {\"$var\":D};\nvar str348 = {\"$var\":D};\nvar is$hardline350 = {\"$var\":D};\nvar hardline352 = {\"$var\":D};\nvar is$blank354 = {\"$var\":D};\nvar blank356 = {\"$var\":D};\nvar is$concat358 = {\"$var\":D};\nvar concat110 = {\"$var\":D};\nvar is$nest361 = {\"$var\":D};\nvar nest363 = {\"$var\":D};\nvar is$if$flat365 = {\"$var\":D};\nvar if$flat367 = {\"$var\":D};\nvar is$align369 = {\"$var\":D};\nvar align371 = {\"$var\":D};\nvar is$align$spaces373 = {\"$var\":D};\nvar align$spaces375 = {\"$var\":D};\nvar is$group377 = {\"$var\":D};\nvar group379 = {\"$var\":D};\nvar Item390 = {\"$var\":D};\nvar is$Item392 = {\"$var\":D};\nvar is$item394 = {\"$var\":D};\nvar item396 = {\"$var\":D};\nvar collect$concats409 = {\"$var\":D};\nvar format242 = {\"$var\":D};\nvar $temp_full101 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__0($self189,$other102) {\nvar $step100 = 0;\nvar $elidedFrames107 = 0;\nvar $ans104 = D;\nvar $al105 = L[0];\nif(R.isAR($self189)) {\n$step100 = $self189.step;\n$al105 = $self189.from;\n$ans104 = $self189.ans;\n$elidedFrames107 = $self189.elidedFrames;\nself189 = $self189.args[0];\nother102 = $self189.args[1];\nanf_fun114 = $self189.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[0],2,$t,true);\n}\nvar self189 = $self189;\nvar other102 = $other102;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans104 = R.mC();\n}\nwhile(!R.isContinuation($ans104)) {\nswitch($step100) {\ncase 0: var anf_fun626 = is$mt$doc108.$var === D?U(L[1],\"is-mt-doc\"):is$mt$doc108.$var;\n$step100 = 1;\n$al105 = L[13];\nif(typeof(anf_fun626.app) !== \"function\") {\nR.ffi.throwNonFunApp($al105,anf_fun626);\n}\n$ans104 = anf_fun626.app(self189);\nbreak;\ncase 1: var anf_if142 = $ans104;\n$step100 = R.checkPyretTrue(anf_if142)?2:3;\nbreak;\ncase 2: $step100 = 13;\n$ans104 = other102;\nbreak;\ncase 3: var anf_fun109 = is$mt$doc108.$var === D?U(L[2],\"is-mt-doc\"):is$mt$doc108.$var;\n$step100 = 4;\n$al105 = L[12];\nif(typeof(anf_fun109.app) !== \"function\") {\nR.ffi.throwNonFunApp($al105,anf_fun109);\n}\n$ans104 = anf_fun109.app(other102);\nbreak;\ncase 4: var anf_if141 = $ans104;\n$step100 = R.checkPyretTrue(anf_if141)?5:6;\nbreak;\ncase 5: $step100 = 13;\n$ans104 = self189;\nbreak;\ncase 6: $al105 = L[3];\nvar anf_if140 = G(self189,\"has-hardline\",L[3]);\n$step100 = R.checkPyretTrue(anf_if140)?7:8;\nbreak;\ncase 7: $step100 = 9;\n$ans104 = (true);\nbreak;\ncase 8: $al105 = L[11];\nvar anf_arg139 = G(other102,\"has-hardline\",L[11]);\n$ans104 = R.checkWrapBoolean(anf_arg139);\n$step100 = 9;\nbreak;\ncase 9: var anf_if115 = $ans104;\n$step100 = R.checkPyretTrue(anf_if115)?10:11;\nbreak;\ncase 10: var anf_fun111 = concat110.$var === D?U(L[4],\"concat\"):concat110.$var;\n$step100 = 13;\n$al105 = L[5];\nif(typeof(anf_fun111.app) !== \"function\") {\nR.ffi.throwNonFunApp($al105,anf_fun111);\n}\n$ans104 = anf_fun111.app(self189,other102,(0),(true));\nbreak;\ncase 11: var anf_fun114 = concat110.$var === D?U(L[6],\"concat\"):concat110.$var;\n$al105 = L[7];\nvar anf_arg112 = G(self189,\"flat-width\",L[7]);\n$al105 = L[8];\nvar anf_arg113 = G(other102,\"flat-width\",L[8]);\n$step100 = 12;\n$al105 = L[10];\n// omitting isFunction check;\n$ans104 = _plus5.app(anf_arg112,anf_arg113);\nbreak;\ncase 12: var anf_arg664 = $ans104;\n$step100 = 13;\n$al105 = L[9];\nif(typeof(anf_fun114.app) !== \"function\") {\nR.ffi.throwNonFunApp($al105,anf_fun114);\n}\n$ans104 = anf_fun114.app(self189,other102,anf_arg664,(false));\nbreak;\ncase 13: ++R.GAS;\nreturn $ans104;\ndefault: R.ffi.throwSpinnakerError(L[0],$step100);\n}\n}\nif($step100 !== 13) {\n$ans104.stack[R.EXN_STACKHEIGHT++] = R.mAR($al105,$temp_full101,$step100,[self189,other102],[anf_fun114],$elidedFrames107);\n}\nreturn $ans104;\n};\nvar anf_shared246 = R.makeMethod1($temp_full101,\"_plus\");\nvar $temp_full150 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__14($self97) {\nvar $step149 = 0;\nvar $elidedFrames155 = 0;\nvar $ans152 = D;\nvar $al153 = L[14];\nif(R.isAR($self97)) {\n$step149 = $self97.step;\n$al153 = $self97.from;\n$ans152 = $self97.ans;\n$elidedFrames155 = $self97.elidedFrames;\nself97 = $self97.args[0];\ncases156 = $self97.vars[0];\nsnd177 = $self97.vars[1];\nanf_arg186 = $self97.vars[2];\nvert194 = $self97.vars[3];\nanf_arg202 = $self97.vars[4];\nanf_arg207 = $self97.vars[5];\nd184 = $self97.vars[6];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[14],1,$t,true);\n}\nvar self97 = $self97;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans152 = R.mC();\n}\nwhile(!R.isContinuation($ans152)) {\nswitch($step149) {\ncase 0: var cases156 = self97;\n$step149 = 1;\n$al153 = L[47];\nvar $ann$check232 = R._cA(L[47],PPrintDoc231,cases156);\nif(R.isContinuation($ann$check232)) {\n$ans152 = $ann$check232;\n}\nbreak;\ncase 1: $al153 = L[17];\n$step149 = $cases_dispatch230[cases156.$name] || 23;\nbreak;\ncase 2: if(cases156.$arity !== 2) {\nif(cases156.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[16],2,cases156.$arity,L[17],cases156.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[16],true,L[17],cases156.$loc);\n}\n}\nvar $fn158 = cases156.$constructor.$fieldNames;\nR.dF(cases156.dict[$fn158[0]],cases156.$mut_fields_mask[0],false);\nR.dF(cases156.dict[$fn158[1]],cases156.$mut_fields_mask[1],false);\n$step149 = 24;\n$al153 = L[15];\nif(typeof(VS12.dict.values.dict[\"vs-str\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-str\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-str\"].app((\"EmptyDoc\"));\nbreak;\ncase 3: if(cases156.$arity !== 3) {\nif(cases156.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[20],3,cases156.$arity,L[17],cases156.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[20],true,L[17],cases156.$loc);\n}\n}\nvar $fn163 = cases156.$constructor.$fieldNames;\nvar s161 = R.dF(cases156.dict[$fn163[0]],cases156.$mut_fields_mask[0],false);\nR.dF(cases156.dict[$fn163[1]],cases156.$mut_fields_mask[1],false);\nR.dF(cases156.dict[$fn163[2]],cases156.$mut_fields_mask[2],false);\n$step149 = 4;\n$al153 = L[19];\nif(typeof(VS12.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-value\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-value\"].app(s161);\nbreak;\ncase 4: var anf_arg205 = $ans152;\n// caller optimization;\n$ans152 = link6.app(anf_arg205,empty2);\nvar anf_arg206 = $ans152;\n$step149 = 24;\n$al153 = L[18];\nif(typeof(VS12.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-constr\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-constr\"].app((\"Str\"),anf_arg206);\nbreak;\ncase 5: if(cases156.$arity !== 2) {\nif(cases156.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[22],2,cases156.$arity,L[17],cases156.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[22],true,L[17],cases156.$loc);\n}\n}\nvar $fn167 = cases156.$constructor.$fieldNames;\nR.dF(cases156.dict[$fn167[0]],cases156.$mut_fields_mask[0],false);\nR.dF(cases156.dict[$fn167[1]],cases156.$mut_fields_mask[1],false);\n$step149 = 24;\n$al153 = L[21];\nif(typeof(VS12.dict.values.dict[\"vs-str\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-str\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-str\"].app((\"CRLF\"));\nbreak;\ncase 6: if(cases156.$arity !== 3) {\nif(cases156.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[25],3,cases156.$arity,L[17],cases156.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[25],true,L[17],cases156.$loc);\n}\n}\nvar $fn173 = cases156.$constructor.$fieldNames;\nvar n170 = R.dF(cases156.dict[$fn173[0]],cases156.$mut_fields_mask[0],false);\nR.dF(cases156.dict[$fn173[1]],cases156.$mut_fields_mask[1],false);\nR.dF(cases156.dict[$fn173[2]],cases156.$mut_fields_mask[2],false);\n$step149 = 7;\n$al153 = L[24];\nif(typeof(VS12.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-value\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-value\"].app(n170);\nbreak;\ncase 7: var anf_arg676 = $ans152;\n// caller optimization;\n$ans152 = link6.app(anf_arg676,empty2);\nvar anf_arg677 = $ans152;\n$step149 = 24;\n$al153 = L[23];\nif(typeof(VS12.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-constr\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-constr\"].app((\"Blank\"),anf_arg677);\nbreak;\ncase 8: if(cases156.$arity !== 4) {\nif(cases156.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[29],4,cases156.$arity,L[17],cases156.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[29],true,L[17],cases156.$loc);\n}\n}\nvar $fn180 = cases156.$constructor.$fieldNames;\nvar fst176 = R.dF(cases156.dict[$fn180[0]],cases156.$mut_fields_mask[0],false);\nvar snd177 = R.dF(cases156.dict[$fn180[1]],cases156.$mut_fields_mask[1],false);\nR.dF(cases156.dict[$fn180[2]],cases156.$mut_fields_mask[2],false);\nR.dF(cases156.dict[$fn180[3]],cases156.$mut_fields_mask[3],false);\n$step149 = 9;\n$al153 = L[28];\nif(typeof(VS12.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-value\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-value\"].app(fst176);\nbreak;\ncase 9: var anf_arg207 = $ans152;\n$step149 = 10;\n$al153 = L[27];\nif(typeof(VS12.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-value\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-value\"].app(snd177);\nbreak;\ncase 10: var anf_arg209 = $ans152;\n// caller optimization;\n$ans152 = link6.app(anf_arg209,empty2);\nvar anf_arg689 = $ans152;\n// caller optimization;\n$ans152 = link6.app(anf_arg207,anf_arg689);\nvar anf_arg690 = $ans152;\n$step149 = 24;\n$al153 = L[26];\nif(typeof(VS12.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-constr\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-constr\"].app((\"Concat\"),anf_arg690);\nbreak;\ncase 11: if(cases156.$arity !== 4) {\nif(cases156.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[33],4,cases156.$arity,L[17],cases156.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[33],true,L[17],cases156.$loc);\n}\n}\nvar $fn190 = cases156.$constructor.$fieldNames;\nvar indent183 = R.dF(cases156.dict[$fn190[0]],cases156.$mut_fields_mask[0],false);\nvar d184 = R.dF(cases156.dict[$fn190[1]],cases156.$mut_fields_mask[1],false);\nR.dF(cases156.dict[$fn190[2]],cases156.$mut_fields_mask[2],false);\nR.dF(cases156.dict[$fn190[3]],cases156.$mut_fields_mask[3],false);\n$step149 = 12;\n$al153 = L[32];\nif(typeof(VS12.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-value\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-value\"].app(indent183);\nbreak;\ncase 12: var anf_arg186 = $ans152;\n$step149 = 13;\n$al153 = L[31];\nif(typeof(VS12.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-value\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-value\"].app(d184);\nbreak;\ncase 13: var anf_arg185 = $ans152;\n// caller optimization;\n$ans152 = link6.app(anf_arg185,empty2);\nvar anf_arg703 = $ans152;\n// caller optimization;\n$ans152 = link6.app(anf_arg186,anf_arg703);\nvar anf_arg704 = $ans152;\n$step149 = 24;\n$al153 = L[30];\nif(typeof(VS12.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-constr\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-constr\"].app((\"Nest\"),anf_arg704);\nbreak;\ncase 14: if(cases156.$arity !== 4) {\nif(cases156.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[37],4,cases156.$arity,L[17],cases156.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[37],true,L[17],cases156.$loc);\n}\n}\nvar $fn208 = cases156.$constructor.$fieldNames;\nvar flat193 = R.dF(cases156.dict[$fn208[0]],cases156.$mut_fields_mask[0],false);\nvar vert194 = R.dF(cases156.dict[$fn208[1]],cases156.$mut_fields_mask[1],false);\nR.dF(cases156.dict[$fn208[2]],cases156.$mut_fields_mask[2],false);\nR.dF(cases156.dict[$fn208[3]],cases156.$mut_fields_mask[3],false);\n$step149 = 15;\n$al153 = L[36];\nif(typeof(VS12.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-value\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-value\"].app(flat193);\nbreak;\ncase 15: var anf_arg202 = $ans152;\n$step149 = 16;\n$al153 = L[35];\nif(typeof(VS12.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-value\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-value\"].app(vert194);\nbreak;\ncase 16: var anf_arg201 = $ans152;\n// caller optimization;\n$ans152 = link6.app(anf_arg201,empty2);\nvar anf_arg718 = $ans152;\n// caller optimization;\n$ans152 = link6.app(anf_arg202,anf_arg718);\nvar anf_arg719 = $ans152;\n$step149 = 24;\n$al153 = L[34];\nif(typeof(VS12.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-constr\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-constr\"].app((\"IfFlat\"),anf_arg719);\nbreak;\ncase 17: if(cases156.$arity !== 3) {\nif(cases156.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[40],3,cases156.$arity,L[17],cases156.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[40],true,L[17],cases156.$loc);\n}\n}\nvar $fn215 = cases156.$constructor.$fieldNames;\nvar d211 = R.dF(cases156.dict[$fn215[0]],cases156.$mut_fields_mask[0],false);\nR.dF(cases156.dict[$fn215[1]],cases156.$mut_fields_mask[1],false);\nR.dF(cases156.dict[$fn215[2]],cases156.$mut_fields_mask[2],false);\n$step149 = 18;\n$al153 = L[39];\nif(typeof(VS12.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-value\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-value\"].app(d211);\nbreak;\ncase 18: var anf_arg302 = $ans152;\n// caller optimization;\n$ans152 = link6.app(anf_arg302,empty2);\nvar anf_arg735 = $ans152;\n$step149 = 24;\n$al153 = L[38];\nif(typeof(VS12.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-constr\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-constr\"].app((\"Group\"),anf_arg735);\nbreak;\ncase 19: if(cases156.$arity !== 3) {\nif(cases156.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[43],3,cases156.$arity,L[17],cases156.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[43],true,L[17],cases156.$loc);\n}\n}\nvar $fn221 = cases156.$constructor.$fieldNames;\nvar d218 = R.dF(cases156.dict[$fn221[0]],cases156.$mut_fields_mask[0],false);\nR.dF(cases156.dict[$fn221[1]],cases156.$mut_fields_mask[1],false);\nR.dF(cases156.dict[$fn221[2]],cases156.$mut_fields_mask[2],false);\n$step149 = 20;\n$al153 = L[42];\nif(typeof(VS12.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-value\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-value\"].app(d218);\nbreak;\ncase 20: var anf_arg736 = $ans152;\n// caller optimization;\n$ans152 = link6.app(anf_arg736,empty2);\nvar anf_arg219 = $ans152;\n$step149 = 24;\n$al153 = L[41];\nif(typeof(VS12.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-constr\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-constr\"].app((\"Align\"),anf_arg219);\nbreak;\ncase 21: if(cases156.$arity !== 3) {\nif(cases156.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[46],3,cases156.$arity,L[17],cases156.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[46],true,L[17],cases156.$loc);\n}\n}\nvar $fn227 = cases156.$constructor.$fieldNames;\nvar n163 = R.dF(cases156.dict[$fn227[0]],cases156.$mut_fields_mask[0],false);\nR.dF(cases156.dict[$fn227[1]],cases156.$mut_fields_mask[1],false);\nR.dF(cases156.dict[$fn227[2]],cases156.$mut_fields_mask[2],false);\n$step149 = 22;\n$al153 = L[45];\nif(typeof(VS12.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-value\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-value\"].app(n163);\nbreak;\ncase 22: var anf_arg225 = $ans152;\n// caller optimization;\n$ans152 = link6.app(anf_arg225,empty2);\nvar anf_arg745 = $ans152;\n$step149 = 24;\n$al153 = L[44];\nif(typeof(VS12.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al153,VS12.dict.values.dict[\"vs-constr\"]);\n}\n$ans152 = VS12.dict.values.dict[\"vs-constr\"].app((\"AlignSpaces\"),anf_arg745);\nbreak;\ncase 23: $ans152 = R.throwNoCasesMatched(L[17],cases156);\n$step149 = 24;\nbreak;\ncase 24: ++R.GAS;\nreturn $ans152;\ndefault: R.ffi.throwSpinnakerError(L[14],$step149);\n}\n}\nif($step149 !== 24) {\n$ans152.stack[R.EXN_STACKHEIGHT++] = R.mAR($al153,$temp_full150,$step149,[self97],[cases156,snd177,anf_arg186,vert194,anf_arg202,anf_arg207,d184],$elidedFrames155);\n}\nreturn $ans152;\n};\nvar anf_shared247 = R.makeMethod0($temp_full150,\"_output\");\nvar $temp_full236 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__48($self188,$width237) {\nvar $step235 = 0;\nvar $elidedFrames241 = 0;\nvar $ans238 = D;\nvar $al239 = L[48];\nif(R.isAR($self188)) {\n$step235 = $self188.step;\n$al239 = $self188.from;\n$ans238 = $self188.ans;\n$elidedFrames241 = $self188.elidedFrames;\nself188 = $self188.args[0];\nwidth237 = $self188.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[48],2,$t,true);\n}\nvar self188 = $self188;\nvar width237 = $width237;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans238 = R.mC();\n}\nwhile(!R.isContinuation($ans238)) {\nswitch($step235) {\ncase 0: var anf_fun269 = format242.$var === D?U(L[49],\"format\"):format242.$var;\n$step235 = 1;\n$al239 = L[50];\nif(typeof(anf_fun269.app) !== \"function\") {\nR.ffi.throwNonFunApp($al239,anf_fun269);\n}\n$ans238 = anf_fun269.app(width237,self188);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans238;\ndefault: R.ffi.throwSpinnakerError(L[48],$step235);\n}\n}\nif($step235 !== 1) {\n$ans238.stack[R.EXN_STACKHEIGHT++] = R.mAR($al239,$temp_full236,$step235,[self188,width237],[],$elidedFrames241);\n}\nreturn $ans238;\n};\nvar anf_shared248 = R.makeMethod1($temp_full236,\"pretty\");\nvar $mt$doc_getfields253 = function singleton_variant(f) {\nreturn f(this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $mt$doc_mutablemask252 = [false,false];\nvar $mt$doc$base249 = {\"$fieldNames\":[\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared246,\n\"_output\":anf_shared247,\n\"pretty\":anf_shared248,\n\"_match\":R.mM(\"mt-doc\",2)};\nvar $mt$doc$brander250 = R.nB(\"mt-doc\",L[51]);\nvar $mt$doc$brands251 = {};\n$mt$doc$brands251[PPrintDoc93._brand] = true;\n$mt$doc$brands251[$mt$doc$brander250._brand] = true;\nvar mt$doc254 = R.mVC(L[51],function $synthesizedConstructor_$mt$doc$base() {\nreturn [$type$Number3,$type$Boolean6];\n},[\"flat$width255\",\"has$hardline256\"],[L[52],L[53]],[false,false],[\"flat$width255\",\"has$hardline256\"],$mt$doc_mutablemask252,$mt$doc$base249,$mt$doc$brands251,\"mt-doc\",$mt$doc_getfields253,$mt$doc$base249);\nvar $str_getfields261 = function singleton_variant(f) {\nreturn f(this.dict[\"s\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $str_mutablemask260 = [false,false,false];\nvar $str$base257 = {\"$fieldNames\":[\"s\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared246,\n\"_output\":anf_shared247,\n\"pretty\":anf_shared248,\n\"_match\":R.mM(\"str\",3)};\nvar $str$brander258 = R.nB(\"str\",L[54]);\nvar $str$brands259 = {};\n$str$brands259[PPrintDoc93._brand] = true;\n$str$brands259[$str$brander258._brand] = true;\nvar str262 = R.mVC(L[54],function $synthesizedConstructor_$str$base() {\nreturn [$type$String8,$type$Number3,$type$Boolean6];\n},[\"s263\",\"flat$width264\",\"has$hardline265\"],[L[55],L[56],L[57]],[false,false,false],[\"s263\",\"flat$width264\",\"has$hardline265\"],$str_mutablemask260,$str$base257,$str$brands259,\"str\",$str_getfields261,$str$base257);\nvar $hardline_getfields270 = function singleton_variant(f) {\nreturn f(this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $hardline_mutablemask269 = [false,false];\nvar $hardline$base266 = {\"$fieldNames\":[\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared246,\n\"_output\":anf_shared247,\n\"pretty\":anf_shared248,\n\"_match\":R.mM(\"hardline\",2)};\nvar $hardline$brander267 = R.nB(\"hardline\",L[58]);\nvar $hardline$brands268 = {};\n$hardline$brands268[PPrintDoc93._brand] = true;\n$hardline$brands268[$hardline$brander267._brand] = true;\nvar hardline271 = R.mVC(L[58],function $synthesizedConstructor_$hardline$base() {\nreturn [$type$Number3,$type$Boolean6];\n},[\"flat$width272\",\"has$hardline273\"],[L[59],L[60]],[false,false],[\"flat$width272\",\"has$hardline273\"],$hardline_mutablemask269,$hardline$base266,$hardline$brands268,\"hardline\",$hardline_getfields270,$hardline$base266);\nvar $blank_getfields278 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $blank_mutablemask277 = [false,false,false];\nvar $blank$base274 = {\"$fieldNames\":[\"n\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared246,\n\"_output\":anf_shared247,\n\"pretty\":anf_shared248,\n\"_match\":R.mM(\"blank\",3)};\nvar $blank$brander275 = R.nB(\"blank\",L[61]);\nvar $blank$brands276 = {};\n$blank$brands276[PPrintDoc93._brand] = true;\n$blank$brands276[$blank$brander275._brand] = true;\nvar blank279 = R.mVC(L[61],function $synthesizedConstructor_$blank$base() {\nreturn [$type$Number3,$type$Number3,$type$Boolean6];\n},[\"n280\",\"flat$width281\",\"has$hardline282\"],[L[62],L[63],L[64]],[false,false,false],[\"n280\",\"flat$width281\",\"has$hardline282\"],$blank_mutablemask277,$blank$base274,$blank$brands276,\"blank\",$blank_getfields278,$blank$base274);\nvar $concat_getfields287 = function singleton_variant(f) {\nreturn f(this.dict[\"fst\"],this.dict[\"snd\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $concat_mutablemask286 = [false,false,false,false];\nvar $concat$base283 = {\"$fieldNames\":[\"fst\",\"snd\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared246,\n\"_output\":anf_shared247,\n\"pretty\":anf_shared248,\n\"_match\":R.mM(\"concat\",4)};\nvar $concat$brander284 = R.nB(\"concat\",L[65]);\nvar $concat$brands285 = {};\n$concat$brands285[PPrintDoc93._brand] = true;\n$concat$brands285[$concat$brander284._brand] = true;\nvar concat288 = R.mVC(L[65],function $synthesizedConstructor_$concat$base() {\nreturn [PPrintDoc231,PPrintDoc231,$type$Number3,$type$Boolean6];\n},[\"fst289\",\"snd290\",\"flat$width291\",\"has$hardline292\"],[L[66],L[67],L[68],L[69]],[false,false,false,false],[\"fst289\",\"snd290\",\"flat$width291\",\"has$hardline292\"],$concat_mutablemask286,$concat$base283,$concat$brands285,\"concat\",$concat_getfields287,$concat$base283);\nvar $nest_getfields297 = function singleton_variant(f) {\nreturn f(this.dict[\"indent\"],this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $nest_mutablemask296 = [false,false,false,false];\nvar $nest$base293 = {\"$fieldNames\":[\"indent\",\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared246,\n\"_output\":anf_shared247,\n\"pretty\":anf_shared248,\n\"_match\":R.mM(\"nest\",4)};\nvar $nest$brander294 = R.nB(\"nest\",L[70]);\nvar $nest$brands295 = {};\n$nest$brands295[PPrintDoc93._brand] = true;\n$nest$brands295[$nest$brander294._brand] = true;\nvar nest298 = R.mVC(L[70],function $synthesizedConstructor_$nest$base() {\nreturn [$type$Number3,PPrintDoc231,$type$Number3,$type$Boolean6];\n},[\"indent299\",\"d528\",\"flat$width300\",\"has$hardline301\"],[L[71],L[72],L[73],L[74]],[false,false,false,false],[\"indent299\",\"d528\",\"flat$width300\",\"has$hardline301\"],$nest_mutablemask296,$nest$base293,$nest$brands295,\"nest\",$nest_getfields297,$nest$base293);\nvar $if$flat_getfields306 = function singleton_variant(f) {\nreturn f(this.dict[\"flat\"],this.dict[\"vert\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $if$flat_mutablemask305 = [false,false,false,false];\nvar $if$flat$base302 = {\"$fieldNames\":[\"flat\",\"vert\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared246,\n\"_output\":anf_shared247,\n\"pretty\":anf_shared248,\n\"_match\":R.mM(\"if-flat\",4)};\nvar $if$flat$brander303 = R.nB(\"if-flat\",L[75]);\nvar $if$flat$brands304 = {};\n$if$flat$brands304[PPrintDoc93._brand] = true;\n$if$flat$brands304[$if$flat$brander303._brand] = true;\nvar if$flat307 = R.mVC(L[75],function $synthesizedConstructor_$if$flat$base() {\nreturn [PPrintDoc231,PPrintDoc231,$type$Number3,$type$Boolean6];\n},[\"flat308\",\"vert309\",\"flat$width310\",\"has$hardline311\"],[L[76],L[77],L[78],L[79]],[false,false,false,false],[\"flat308\",\"vert309\",\"flat$width310\",\"has$hardline311\"],$if$flat_mutablemask305,$if$flat$base302,$if$flat$brands304,\"if-flat\",$if$flat_getfields306,$if$flat$base302);\nvar $align_getfields316 = function singleton_variant(f) {\nreturn f(this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $align_mutablemask315 = [false,false,false];\nvar $align$base312 = {\"$fieldNames\":[\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared246,\n\"_output\":anf_shared247,\n\"pretty\":anf_shared248,\n\"_match\":R.mM(\"align\",3)};\nvar $align$brander313 = R.nB(\"align\",L[80]);\nvar $align$brands314 = {};\n$align$brands314[PPrintDoc93._brand] = true;\n$align$brands314[$align$brander313._brand] = true;\nvar align317 = R.mVC(L[80],function $synthesizedConstructor_$align$base() {\nreturn [PPrintDoc231,$type$Number3,$type$Boolean6];\n},[\"d318\",\"flat$width319\",\"has$hardline320\"],[L[81],L[82],L[83]],[false,false,false],[\"d318\",\"flat$width319\",\"has$hardline320\"],$align_mutablemask315,$align$base312,$align$brands314,\"align\",$align_getfields316,$align$base312);\nvar $align$spaces_getfields325 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $align$spaces_mutablemask324 = [false,false,false];\nvar $align$spaces$base321 = {\"$fieldNames\":[\"n\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared246,\n\"_output\":anf_shared247,\n\"pretty\":anf_shared248,\n\"_match\":R.mM(\"align-spaces\",3)};\nvar $align$spaces$brander322 = R.nB(\"align-spaces\",L[84]);\nvar $align$spaces$brands323 = {};\n$align$spaces$brands323[PPrintDoc93._brand] = true;\n$align$spaces$brands323[$align$spaces$brander322._brand] = true;\nvar align$spaces326 = R.mVC(L[84],function $synthesizedConstructor_$align$spaces$base() {\nreturn [$type$Number3,$type$Number3,$type$Boolean6];\n},[\"n327\",\"flat$width328\",\"has$hardline329\"],[L[85],L[86],L[87]],[false,false,false],[\"n327\",\"flat$width328\",\"has$hardline329\"],$align$spaces_mutablemask324,$align$spaces$base321,$align$spaces$brands323,\"align-spaces\",$align$spaces_getfields325,$align$spaces$base321);\nvar $group_getfields334 = function singleton_variant(f) {\nreturn f(this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $group_mutablemask333 = [false,false,false];\nvar $group$base330 = {\"$fieldNames\":[\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared246,\n\"_output\":anf_shared247,\n\"pretty\":anf_shared248,\n\"_match\":R.mM(\"group\",3)};\nvar $group$brander331 = R.nB(\"group\",L[88]);\nvar $group$brands332 = {};\n$group$brands332[PPrintDoc93._brand] = true;\n$group$brands332[$group$brander331._brand] = true;\nvar group335 = R.mVC(L[88],function $synthesizedConstructor_$group$base() {\nreturn [PPrintDoc231,$type$Number3,$type$Boolean6];\n},[\"d297\",\"flat$width336\",\"has$hardline337\"],[L[89],L[90],L[91]],[false,false,false],[\"d297\",\"flat$width336\",\"has$hardline337\"],$group_mutablemask333,$group$base330,$group$brands332,\"group\",$group_getfields334,$group$base330);\nvar anf_assign338 = R.mO({\"PPrintDoc\":G(PPrintDoc93,\"test\",L[92]),\n\"is-mt-doc\":G($mt$doc$brander250,\"test\",L[51]),\n\"mt-doc\":mt$doc254,\n\"is-str\":G($str$brander258,\"test\",L[54]),\n\"str\":str262,\n\"is-hardline\":G($hardline$brander267,\"test\",L[58]),\n\"hardline\":hardline271,\n\"is-blank\":G($blank$brander275,\"test\",L[61]),\n\"blank\":blank279,\n\"is-concat\":G($concat$brander284,\"test\",L[65]),\n\"concat\":concat288,\n\"is-nest\":G($nest$brander294,\"test\",L[70]),\n\"nest\":nest298,\n\"is-if-flat\":G($if$flat$brander303,\"test\",L[75]),\n\"if-flat\":if$flat307,\n\"is-align\":G($align$brander313,\"test\",L[80]),\n\"align\":align317,\n\"is-align-spaces\":G($align$spaces$brander322,\"test\",L[84]),\n\"align-spaces\":align$spaces326,\n\"is-group\":G($group$brander331,\"test\",L[88]),\n\"group\":group335});\nPPrintDoc339.$var = anf_assign338;\nR.nothing;\n$al90 = L[92];\nvar anf_assign340 = G(PPrintDoc339.$var,\"PPrintDoc\",L[92]);\nis$PPrintDoc341.$var = anf_assign340;\nR.nothing;\n$al90 = L[51];\nvar anf_assign342 = G(PPrintDoc339.$var,\"is-mt-doc\",L[51]);\nis$mt$doc108.$var = anf_assign342;\nR.nothing;\n$al90 = L[51];\nvar anf_assign343 = G(PPrintDoc339.$var,\"mt-doc\",L[51]);\nmt$doc344.$var = anf_assign343;\nR.nothing;\n$al90 = L[54];\nvar anf_assign345 = G(PPrintDoc339.$var,\"is-str\",L[54]);\nis$str346.$var = anf_assign345;\nR.nothing;\n$al90 = L[54];\nvar anf_assign347 = G(PPrintDoc339.$var,\"str\",L[54]);\nstr348.$var = anf_assign347;\nR.nothing;\n$al90 = L[58];\nvar anf_assign349 = G(PPrintDoc339.$var,\"is-hardline\",L[58]);\nis$hardline350.$var = anf_assign349;\nR.nothing;\n$al90 = L[58];\nvar anf_assign351 = G(PPrintDoc339.$var,\"hardline\",L[58]);\nhardline352.$var = anf_assign351;\nR.nothing;\n$al90 = L[61];\nvar anf_assign353 = G(PPrintDoc339.$var,\"is-blank\",L[61]);\nis$blank354.$var = anf_assign353;\nR.nothing;\n$al90 = L[61];\nvar anf_assign355 = G(PPrintDoc339.$var,\"blank\",L[61]);\nblank356.$var = anf_assign355;\nR.nothing;\n$al90 = L[65];\nvar anf_assign357 = G(PPrintDoc339.$var,\"is-concat\",L[65]);\nis$concat358.$var = anf_assign357;\nR.nothing;\n$al90 = L[65];\nvar anf_assign359 = G(PPrintDoc339.$var,\"concat\",L[65]);\nconcat110.$var = anf_assign359;\nR.nothing;\n$al90 = L[70];\nvar anf_assign360 = G(PPrintDoc339.$var,\"is-nest\",L[70]);\nis$nest361.$var = anf_assign360;\nR.nothing;\n$al90 = L[70];\nvar anf_assign362 = G(PPrintDoc339.$var,\"nest\",L[70]);\nnest363.$var = anf_assign362;\nR.nothing;\n$al90 = L[75];\nvar anf_assign364 = G(PPrintDoc339.$var,\"is-if-flat\",L[75]);\nis$if$flat365.$var = anf_assign364;\nR.nothing;\n$al90 = L[75];\nvar anf_assign366 = G(PPrintDoc339.$var,\"if-flat\",L[75]);\nif$flat367.$var = anf_assign366;\nR.nothing;\n$al90 = L[80];\nvar anf_assign368 = G(PPrintDoc339.$var,\"is-align\",L[80]);\nis$align369.$var = anf_assign368;\nR.nothing;\n$al90 = L[80];\nvar anf_assign370 = G(PPrintDoc339.$var,\"align\",L[80]);\nalign371.$var = anf_assign370;\nR.nothing;\n$al90 = L[84];\nvar anf_assign372 = G(PPrintDoc339.$var,\"is-align-spaces\",L[84]);\nis$align$spaces373.$var = anf_assign372;\nR.nothing;\n$al90 = L[84];\nvar anf_assign374 = G(PPrintDoc339.$var,\"align-spaces\",L[84]);\nalign$spaces375.$var = anf_assign374;\nR.nothing;\n$al90 = L[88];\nvar anf_assign376 = G(PPrintDoc339.$var,\"is-group\",L[88]);\nis$group377.$var = anf_assign376;\nR.nothing;\n$al90 = L[88];\nvar anf_assign378 = G(PPrintDoc339.$var,\"group\",L[88]);\ngroup379.$var = anf_assign378;\nR.nothing;\nvar $item_getfields384 = function singleton_variant(f) {\nreturn f(this.dict[\"indent\"],this.dict[\"is-flat\"],this.dict[\"d\"]);\n};\nvar $item_mutablemask383 = [false,false,false];\nvar $item$base380 = {\"$fieldNames\":[\"indent\",\"is-flat\",\"d\"],\n\"_match\":R.mM(\"item\",3)};\nvar $item$brander381 = R.nB(\"item\",L[93]);\nvar $item$brands382 = {};\n$item$brands382[Item94._brand] = true;\n$item$brands382[$item$brander381._brand] = true;\nvar item385 = R.mVC(L[93],function $synthesizedConstructor_$item$base() {\nreturn [$type$Number3,$type$Boolean6,PPrintDoc231];\n},[\"indent386\",\"is$flat387\",\"d388\"],[L[94],L[95],L[96]],[false,false,false],[\"indent386\",\"is$flat387\",\"d388\"],$item_mutablemask383,$item$base380,$item$brands382,\"item\",$item_getfields384,$item$base380);\nvar anf_assign389 = R.mO({\"Item\":G(Item94,\"test\",L[97]),\n\"is-item\":G($item$brander381,\"test\",L[93]),\n\"item\":item385});\nItem390.$var = anf_assign389;\nR.nothing;\n$al90 = L[97];\nvar anf_assign391 = G(Item390.$var,\"Item\",L[97]);\nis$Item392.$var = anf_assign391;\nR.nothing;\n$al90 = L[93];\nvar anf_assign393 = G(Item390.$var,\"is-item\",L[93]);\nis$item394.$var = anf_assign393;\nR.nothing;\n$al90 = L[93];\nvar anf_assign395 = G(Item390.$var,\"item\",L[93]);\nitem396.$var = anf_assign395;\nR.nothing;\nvar $temp_lam399 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__98($i400,$m401,$it402,$rest403) {\nvar $step398 = 0;\nvar $elidedFrames408 = 0;\nvar $ans405 = D;\nvar $al406 = L[98];\nif(R.isAR($i400)) {\n$step398 = $i400.step;\n$al406 = $i400.from;\n$ans405 = $i400.ans;\n$elidedFrames408 = $i400.elidedFrames;\ni400 = $i400.args[0];\nm401 = $i400.args[1];\nit402 = $i400.args[2];\nrest403 = $i400.args[3];\nanf_arg336 = $i400.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[98],4,$t,false);\n}\nvar i400 = $i400;\nvar m401 = $m401;\nvar it402 = $it402;\nvar rest403 = $rest403;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans405 = R.mC();\n}\nwhile(!R.isContinuation($ans405)) {\nswitch($step398) {\ncase 0: // caller optimization;\n$ans405 = is$concat358.$var.app(it402);\nvar anf_if410 = $ans405;\n$step398 = R.checkPyretTrue(anf_if410)?1:3;\nbreak;\ncase 1: $al406 = L[99];\nvar anf_arg336 = G(it402,\"fst\",L[99]);\n$al406 = L[100];\nvar anf_arg833 = G(it402,\"snd\",L[100]);\n$step398 = 2;\n$al406 = L[101];\n// omitting isFunction check;\n$ans405 = collect$concats409.$var.app(i400,m401,anf_arg833,rest403);\nbreak;\ncase 2: var anf_arg836 = $ans405;\n$step398 = 0;\n++$elidedFrames408;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans405 = R.mC();\n}\ni400 = i400;\nm401 = m401;\nit402 = anf_arg336;\nrest403 = anf_arg836;\ncontinue;\ncase 3: // caller optimization;\n$ans405 = item396.$var.app(i400,m401,it402);\nvar anf_arg334 = $ans405;\n// caller optimization;\n$ans405 = link6.app(anf_arg334,rest403);\n$step398 = 4;\nbreak;\ncase 4: ++R.GAS;\nreturn $ans405;\ndefault: R.ffi.throwSpinnakerError(L[98],$step398);\n}\n}\nif($step398 !== 4) {\n$ans405.stack[R.EXN_STACKHEIGHT++] = R.mAR($al406,$temp_lam399,$step398,[i400,m401,it402,rest403],[anf_arg336],$elidedFrames408);\n}\nreturn $ans405;\n};\nvar anf_assign412 = R.mF($temp_lam399,\"collect-concats\");\ncollect$concats409.$var = anf_assign412;\nR.nothing;\nvar $temp_lam416 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__102($width417,$doc418) {\nvar $step415 = 0;\nvar $elidedFrames422 = 0;\nvar $ans419 = D;\nvar $al420 = L[102];\nif(R.isAR($width417)) {\n$step415 = $width417.step;\n$al420 = $width417.from;\n$ans419 = $width417.ans;\n$elidedFrames422 = $width417.elidedFrames;\nwidth417 = $width417.args[0];\ndoc418 = $width417.args[1];\nprocess526 = $width417.vars[0];\ngen$output513 = $width417.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[102],2,$t,false);\n}\nvar width417 = $width417;\nvar doc418 = $doc418;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans419 = R.mC();\n}\nwhile(!R.isContinuation($ans419)) {\nswitch($step415) {\ncase 0: $step415 = 1;\n$al420 = L[164];\nR._cA(L[164],PPrintDoc231,doc418);\nbreak;\ncase 1: var cur$line434 = {\"$var\":empty2};\nvar output459 = {\"$var\":empty2};\nvar emit$text438 = {\"$var\":D};\nvar emit$spaces451 = {\"$var\":D};\nvar emit$newline479 = {\"$var\":D};\nvar gen$output513 = {\"$var\":D};\nvar process526 = {\"$var\":D};\nvar $temp_lam425 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__103($s426) {\nvar $step424 = 0;\nvar $elidedFrames433 = 0;\nvar $ans430 = D;\nvar $al431 = L[103];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[103],1,$t,false);\n}\nvar s426 = $s426;\n// callee optimization;\nwhile(!R.isContinuation($ans430)) {\nswitch($step424) {\ncase 0: var anf_arg850 = cur$line434.$var;\n// caller optimization;\n$ans430 = link6.app(s426,anf_arg850);\nvar anf_assign435 = $ans430;\n$step424 = 1;\ncur$line434.$var = anf_assign435;\n$ans430 = R.nothing;\nbreak;\ncase 1: return $ans430;\ndefault: R.ffi.throwSpinnakerError(L[103],$step424);\n}\n}\nreturn $ans430;\n};\nvar anf_assign437 = R.mF($temp_lam425,\"emit-text\");\nemit$text438.$var = anf_assign437;\nR.nothing;\nvar $temp_lam442 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__104($n903) {\nvar $step441 = 0;\nvar $elidedFrames446 = 0;\nvar $ans443 = D;\nvar $al444 = L[104];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[104],1,$t,false);\n}\nvar n903 = $n903;\n// callee optimization;\nwhile(!R.isContinuation($ans443)) {\nswitch($step441) {\ncase 0: // caller optimization;\n$ans443 = string$repeat1.app((\" \"),n903);\nvar anf_arg851 = $ans443;\n// caller optimization;\n$ans443 = emit$text438.$var.app(anf_arg851);\n$step441 = 1;\nbreak;\ncase 1: return $ans443;\ndefault: R.ffi.throwSpinnakerError(L[104],$step441);\n}\n}\nreturn $ans443;\n};\nvar anf_assign854 = R.mF($temp_lam442,\"emit-spaces\");\nemit$spaces451.$var = anf_assign854;\nR.nothing;\nvar $temp_lam453 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__105($i454) {\nvar $step452 = 0;\nvar $elidedFrames458 = 0;\nvar $ans455 = D;\nvar $al456 = L[105];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[105],1,$t,false);\n}\nvar i454 = $i454;\n// callee optimization;\nwhile(!R.isContinuation($ans455)) {\nswitch($step452) {\ncase 0: var anf_arg475 = cur$line434.$var;\nvar anf_arg865 = output459.$var;\n// caller optimization;\n$ans455 = link6.app(anf_arg475,anf_arg865);\nvar anf_assign476 = $ans455;\noutput459.$var = anf_assign476;\nR.nothing;\n// caller optimization;\n$ans455 = string$repeat1.app((\" \"),i454);\nvar anf_arg863 = $ans455;\n// caller optimization;\n$ans455 = link6.app(anf_arg863,empty2);\nvar anf_assign477 = $ans455;\n$step452 = 1;\ncur$line434.$var = anf_assign477;\n$ans455 = R.nothing;\nbreak;\ncase 1: return $ans455;\ndefault: R.ffi.throwSpinnakerError(L[105],$step452);\n}\n}\nreturn $ans455;\n};\nvar anf_assign869 = R.mF($temp_lam453,\"emit-newline\");\nemit$newline479.$var = anf_assign869;\nR.nothing;\nvar $temp_lam481 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__106($$resumer11) {\nvar $step480 = 0;\nvar $elidedFrames485 = 0;\nvar $ans482 = D;\nvar $al483 = L[106];\nif(R.isAR($$resumer11)) {\n$step480 = $$resumer11.step;\n$al483 = $$resumer11.from;\n$ans482 = $$resumer11.ans;\n$elidedFrames485 = $$resumer11.elidedFrames;\n$resumer11 = $$resumer11.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[106],0,$t,false);\n}\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans482 = R.mC();\n}\nwhile(!R.isContinuation($ans482)) {\nswitch($step480) {\ncase 0: var anf_arg361 = cur$line434.$var;\nvar anf_arg880 = output459.$var;\n// caller optimization;\n$ans482 = link6.app(anf_arg361,anf_arg880);\nvar anf_assign486 = $ans482;\noutput459.$var = anf_assign486;\nR.nothing;\nvar $temp_lam488 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__107($lines489,$line490) {\nvar $step487 = 0;\nvar $elidedFrames494 = 0;\nvar $ans491 = D;\nvar $al492 = L[107];\nif(R.isAR($lines489)) {\n$step487 = $lines489.step;\n$al492 = $lines489.from;\n$ans491 = $lines489.ans;\n$elidedFrames494 = $lines489.elidedFrames;\nlines489 = $lines489.args[0];\nline490 = $lines489.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[107],2,$t,false);\n}\nvar lines489 = $lines489;\nvar line490 = $line490;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans491 = R.mC();\n}\nwhile(!R.isContinuation($ans491)) {\nswitch($step487) {\ncase 0: var $temp_lam498 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__108($acc499,$piece500) {\nvar $step497 = 0;\nvar $elidedFrames505 = 0;\nvar $ans502 = D;\nvar $al503 = L[108];\nif(R.isAR($acc499)) {\n$step497 = $acc499.step;\n$al503 = $acc499.from;\n$ans502 = $acc499.ans;\n$elidedFrames505 = $acc499.elidedFrames;\nacc499 = $acc499.args[0];\npiece500 = $acc499.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[108],2,$t,false);\n}\nvar acc499 = $acc499;\nvar piece500 = $piece500;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans502 = R.mC();\n}\nwhile(!R.isContinuation($ans502)) {\nswitch($step497) {\ncase 0: $step497 = 1;\n$al503 = L[109];\n// omitting isFunction check;\n$ans502 = _plus5.app(piece500,acc499);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans502;\ndefault: R.ffi.throwSpinnakerError(L[108],$step497);\n}\n}\nif($step497 !== 1) {\n$ans502.stack[R.EXN_STACKHEIGHT++] = R.mAR($al503,$temp_lam498,$step497,[acc499,piece500],[],$elidedFrames505);\n}\nreturn $ans502;\n};\nvar anf_arg878 = R.mF($temp_lam498,\"for-body<line 150, column 10>\");\n$step487 = 1;\n$al492 = L[108];\n// omitting isFunction check;\n$ans491 = fold5.app(anf_arg878,(\"\"),line490);\nbreak;\ncase 1: var l507 = $ans491;\n// caller optimization;\n$ans491 = link6.app(l507,lines489);\n$step487 = 2;\nbreak;\ncase 2: ++R.GAS;\nreturn $ans491;\ndefault: R.ffi.throwSpinnakerError(L[107],$step487);\n}\n}\nif($step487 !== 2) {\n$ans491.stack[R.EXN_STACKHEIGHT++] = R.mAR($al492,$temp_lam488,$step487,[lines489,line490],[],$elidedFrames494);\n}\nreturn $ans491;\n};\nvar anf_arg881 = R.mF($temp_lam488,\"for-body<line 149, column 4>\");\nvar anf_arg384 = output459.$var;\n$step480 = 1;\n$al483 = L[107];\n// omitting isFunction check;\n$ans482 = fold5.app(anf_arg881,empty2,anf_arg384);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans482;\ndefault: R.ffi.throwSpinnakerError(L[106],$step480);\n}\n}\nif($step480 !== 1) {\n$ans482.stack[R.EXN_STACKHEIGHT++] = R.mAR($al483,$temp_lam481,$step480,[],[],$elidedFrames485);\n}\nreturn $ans482;\n};\nvar anf_assign512 = R.mF($temp_lam481,\"gen-output\");\ngen$output513.$var = anf_assign512;\nR.nothing;\nvar $temp_lam515 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__110($column516,$items517) {\nvar $step514 = 0;\nvar $elidedFrames521 = 0;\nvar $ans518 = D;\nvar $al519 = L[110];\nif(R.isAR($column516)) {\n$step514 = $column516.step;\n$al519 = $column516.from;\n$ans518 = $column516.ans;\n$elidedFrames521 = $column516.elidedFrames;\ncolumn516 = $column516.args[0];\nitems517 = $column516.args[1];\nd555 = $column516.vars[0];\ni530 = $column516.vars[1];\ncases525 = $column516.vars[2];\nn780 = $column516.vars[3];\nm531 = $column516.vars[4];\nann_check_temp522 = $column516.vars[5];\nfirst524 = $column516.vars[6];\nvert776 = $column516.vars[7];\nflat775 = $column516.vars[8];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[110],2,$t,false);\n}\nvar column516 = $column516;\nvar items517 = $items517;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans518 = R.mC();\n}\nwhile(!R.isContinuation($ans518)) {\nswitch($step514) {\ncase 0: $step514 = 1;\n$al519 = L[156];\nR._cA(L[156],$type$Number3,column516);\nbreak;\ncase 1: $step514 = 2;\n$al519 = L[157];\nR._cA(L[157],List4,items517);\nbreak;\ncase 2: // caller optimization;\n$ans518 = is$empty3.app(items517);\nvar anf_if897 = $ans518;\n$step514 = R.checkPyretTrue(anf_if897)?3:4;\nbreak;\ncase 3: $step514 = 29;\n$ans518 = nothing5;\nbreak;\ncase 4: $al519 = L[112];\nvar first524 = G(items517,\"first\",L[112]);\n$al519 = L[113];\nvar i530 = G(first524,\"indent\",L[113]);\n$al519 = L[114];\nvar m531 = G(first524,\"is-flat\",L[114]);\n$al519 = L[115];\nvar cases525 = G(first524,\"d\",L[115]);\n$step514 = 5;\n$al519 = L[155];\nvar $ann$check947 = R._cA(L[155],PPrintDoc231,cases525);\nif(R.isContinuation($ann$check947)) {\n$ans518 = $ann$check947;\n}\nbreak;\ncase 5: $al519 = L[118];\n$step514 = $cases_dispatch945[cases525.$name] || 28;\nbreak;\ncase 6: if(cases525.$arity !== 2) {\nif(cases525.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[117],2,cases525.$arity,L[118],cases525.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[117],true,L[118],cases525.$loc);\n}\n}\nvar $fn528 = cases525.$constructor.$fieldNames;\nR.dF(cases525.dict[$fn528[0]],cases525.$mut_fields_mask[0],false);\nR.dF(cases525.dict[$fn528[1]],cases525.$mut_fields_mask[1],false);\n$al519 = L[116];\nvar anf_arg893 = G(items517,\"rest\",L[116]);\n$step514 = 0;\n++$elidedFrames521;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans518 = R.mC();\n}\ncolumn516 = column516;\nitems517 = anf_arg893;\ncontinue;\ncase 7: if(cases525.$arity !== 4) {\nif(cases525.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[122],4,cases525.$arity,L[118],cases525.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[122],true,L[118],cases525.$loc);\n}\n}\nvar $fn533 = cases525.$constructor.$fieldNames;\nR.dF(cases525.dict[$fn533[0]],cases525.$mut_fields_mask[0],false);\nR.dF(cases525.dict[$fn533[1]],cases525.$mut_fields_mask[1],false);\nR.dF(cases525.dict[$fn533[2]],cases525.$mut_fields_mask[2],false);\nR.dF(cases525.dict[$fn533[3]],cases525.$mut_fields_mask[3],false);\n$al519 = L[119];\nvar anf_arg896 = G(first524,\"d\",L[119]);\n$al519 = L[120];\nvar anf_arg362 = G(items517,\"rest\",L[120]);\n$step514 = 8;\n$al519 = L[121];\n// omitting isFunction check;\n$ans518 = collect$concats409.$var.app(i530,m531,anf_arg896,anf_arg362);\nbreak;\ncase 8: var anf_arg364 = $ans518;\n$step514 = 0;\n++$elidedFrames521;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans518 = R.mC();\n}\ncolumn516 = column516;\nitems517 = anf_arg364;\ncontinue;\ncase 9: if(cases525.$arity !== 3) {\nif(cases525.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[125],3,cases525.$arity,L[118],cases525.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[125],true,L[118],cases525.$loc);\n}\n}\nvar $fn542 = cases525.$constructor.$fieldNames;\nvar s537 = R.dF(cases525.dict[$fn542[0]],cases525.$mut_fields_mask[0],false);\nvar flat$width538 = R.dF(cases525.dict[$fn542[1]],cases525.$mut_fields_mask[1],false);\nR.dF(cases525.dict[$fn542[2]],cases525.$mut_fields_mask[2],false);\n// caller optimization;\n$ans518 = emit$text438.$var.app(s537);\n$step514 = 10;\n$al519 = L[124];\n// omitting isFunction check;\n$ans518 = _plus5.app(column516,flat$width538);\nbreak;\ncase 10: var anf_arg910 = $ans518;\n$al519 = L[123];\nvar anf_arg369 = G(items517,\"rest\",L[123]);\n$step514 = 0;\n++$elidedFrames521;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans518 = R.mC();\n}\ncolumn516 = anf_arg910;\nitems517 = anf_arg369;\ncontinue;\ncase 11: if(cases525.$arity !== 3) {\nif(cases525.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[128],3,cases525.$arity,L[118],cases525.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[128],true,L[118],cases525.$loc);\n}\n}\nvar $fn546 = cases525.$constructor.$fieldNames;\nvar n544 = R.dF(cases525.dict[$fn546[0]],cases525.$mut_fields_mask[0],false);\nR.dF(cases525.dict[$fn546[1]],cases525.$mut_fields_mask[1],false);\nR.dF(cases525.dict[$fn546[2]],cases525.$mut_fields_mask[2],false);\n// caller optimization;\n$ans518 = emit$spaces451.$var.app(n544);\n$step514 = 12;\n$al519 = L[127];\n// omitting isFunction check;\n$ans518 = _plus5.app(column516,n544);\nbreak;\ncase 12: var anf_arg908 = $ans518;\n$al519 = L[126];\nvar anf_arg911 = G(items517,\"rest\",L[126]);\n$step514 = 0;\n++$elidedFrames521;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans518 = R.mC();\n}\ncolumn516 = anf_arg908;\nitems517 = anf_arg911;\ncontinue;\ncase 13: if(cases525.$arity !== 3) {\nif(cases525.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[130],3,cases525.$arity,L[118],cases525.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[130],true,L[118],cases525.$loc);\n}\n}\nvar $fn551 = cases525.$constructor.$fieldNames;\nvar d549 = R.dF(cases525.dict[$fn551[0]],cases525.$mut_fields_mask[0],false);\nR.dF(cases525.dict[$fn551[1]],cases525.$mut_fields_mask[1],false);\nR.dF(cases525.dict[$fn551[2]],cases525.$mut_fields_mask[2],false);\n// caller optimization;\n$ans518 = item396.$var.app(column516,m531,d549);\nvar anf_arg372 = $ans518;\n$al519 = L[129];\nvar anf_arg381 = G(items517,\"rest\",L[129]);\n// caller optimization;\n$ans518 = link6.app(anf_arg372,anf_arg381);\nvar anf_arg925 = $ans518;\n$step514 = 0;\n++$elidedFrames521;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans518 = R.mC();\n}\ncolumn516 = column516;\nitems517 = anf_arg925;\ncontinue;\ncase 14: if(cases525.$arity !== 4) {\nif(cases525.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[133],4,cases525.$arity,L[118],cases525.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[133],true,L[118],cases525.$loc);\n}\n}\nvar $fn742 = cases525.$constructor.$fieldNames;\nvar n554 = R.dF(cases525.dict[$fn742[0]],cases525.$mut_fields_mask[0],false);\nvar d555 = R.dF(cases525.dict[$fn742[1]],cases525.$mut_fields_mask[1],false);\nR.dF(cases525.dict[$fn742[2]],cases525.$mut_fields_mask[2],false);\nR.dF(cases525.dict[$fn742[3]],cases525.$mut_fields_mask[3],false);\n$step514 = 15;\n$al519 = L[132];\n// omitting isFunction check;\n$ans518 = _plus5.app(i530,n554);\nbreak;\ncase 15: var anf_arg386 = $ans518;\n// caller optimization;\n$ans518 = item396.$var.app(anf_arg386,m531,d555);\nvar anf_arg923 = $ans518;\n$al519 = L[131];\nvar anf_arg926 = G(items517,\"rest\",L[131]);\n// caller optimization;\n$ans518 = link6.app(anf_arg923,anf_arg926);\nvar anf_arg740 = $ans518;\n$step514 = 0;\n++$elidedFrames521;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans518 = R.mC();\n}\ncolumn516 = column516;\nitems517 = anf_arg740;\ncontinue;\ncase 16: if(cases525.$arity !== 2) {\nif(cases525.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[136],2,cases525.$arity,L[118],cases525.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[136],true,L[118],cases525.$loc);\n}\n}\nvar $fn772 = cases525.$constructor.$fieldNames;\nR.dF(cases525.dict[$fn772[0]],cases525.$mut_fields_mask[0],false);\nR.dF(cases525.dict[$fn772[1]],cases525.$mut_fields_mask[1],false);\n$step514 = R.checkPyretTrue(m531)?17:18;\nbreak;\ncase 17: $step514 = 29;\n$al519 = L[134];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al519,raise1);\n}\n$ans518 = raise1.app((\"Impossible for HardLine to be flat\"));\nbreak;\ncase 18: // caller optimization;\n$ans518 = emit$newline479.$var.app(i530);\n$al519 = L[135];\nvar anf_arg768 = G(items517,\"rest\",L[135]);\n$step514 = 0;\n++$elidedFrames521;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans518 = R.mC();\n}\ncolumn516 = i530;\nitems517 = anf_arg768;\ncontinue;\ncase 19: if(cases525.$arity !== 4) {\nif(cases525.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[138],4,cases525.$arity,L[118],cases525.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[138],true,L[118],cases525.$loc);\n}\n}\nvar $fn778 = cases525.$constructor.$fieldNames;\nvar flat775 = R.dF(cases525.dict[$fn778[0]],cases525.$mut_fields_mask[0],false);\nvar vert776 = R.dF(cases525.dict[$fn778[1]],cases525.$mut_fields_mask[1],false);\nR.dF(cases525.dict[$fn778[2]],cases525.$mut_fields_mask[2],false);\nR.dF(cases525.dict[$fn778[3]],cases525.$mut_fields_mask[3],false);\n$step514 = R.checkPyretTrue(m531)?20:21;\nbreak;\ncase 20: $step514 = 22;\n$ans518 = flat775;\nbreak;\ncase 21: $step514 = 22;\n$ans518 = vert776;\nbreak;\ncase 22: var anf_arg940 = $ans518;\n// caller optimization;\n$ans518 = item396.$var.app(i530,m531,anf_arg940);\nvar anf_arg404 = $ans518;\n$al519 = L[137];\nvar anf_arg938 = G(items517,\"rest\",L[137]);\n// caller optimization;\n$ans518 = link6.app(anf_arg404,anf_arg938);\nvar anf_arg941 = $ans518;\n$step514 = 0;\n++$elidedFrames521;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans518 = R.mC();\n}\ncolumn516 = column516;\nitems517 = anf_arg941;\ncontinue;\ncase 23: if(cases525.$arity !== 3) {\nif(cases525.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[142],3,cases525.$arity,L[118],cases525.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[142],true,L[118],cases525.$loc);\n}\n}\nvar $fn782 = cases525.$constructor.$fieldNames;\nvar n780 = R.dF(cases525.dict[$fn782[0]],cases525.$mut_fields_mask[0],false);\nR.dF(cases525.dict[$fn782[1]],cases525.$mut_fields_mask[1],false);\nR.dF(cases525.dict[$fn782[2]],cases525.$mut_fields_mask[2],false);\n$step514 = R.checkPyretTrue(m531)?24:25;\nbreak;\ncase 24: $al519 = L[139];\nvar anf_arg405 = G(items517,\"rest\",L[139]);\n$step514 = 0;\n++$elidedFrames521;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans518 = R.mC();\n}\ncolumn516 = column516;\nitems517 = anf_arg405;\ncontinue;\ncase 25: // caller optimization;\n$ans518 = emit$spaces451.$var.app(n780);\n$step514 = 26;\n$al519 = L[141];\n// omitting isFunction check;\n$ans518 = _plus5.app(column516,n780);\nbreak;\ncase 26: var anf_arg410 = $ans518;\n$al519 = L[140];\nvar anf_arg955 = G(items517,\"rest\",L[140]);\n$step514 = 0;\n++$elidedFrames521;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans518 = R.mC();\n}\ncolumn516 = anf_arg410;\nitems517 = anf_arg955;\ncontinue;\ncase 27: if(cases525.$arity !== 3) {\nif(cases525.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[154],3,cases525.$arity,L[118],cases525.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[154],true,L[118],cases525.$loc);\n}\n}\n$step514 = 29;\n$al519 = L[154];\nvar $temp_branch936 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__118($d785,$flat$width808,$has$hardline935) {\nvar $step937 = 0;\nvar $elidedFrames942 = 0;\nvar $ans939 = D;\nvar $al940 = L[153];\nif(R.isAR($d785)) {\n$step937 = $d785.step;\n$al940 = $d785.from;\n$ans939 = $d785.ans;\n$elidedFrames942 = $d785.elidedFrames;\nd785 = $d785.args[0];\nflat$width808 = $d785.args[1];\nhas$hardline935 = $d785.args[2];\n} else {\nvar d785 = $d785;\nvar flat$width808 = $flat$width808;\nvar has$hardline935 = $has$hardline935;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans939 = R.mC();\n}\nwhile(!R.isContinuation($ans939)) {\nswitch($step937) {\ncase 0: $step937 = R.checkPyretTrue(m531)?1:2;\nbreak;\ncase 1: // caller optimization;\n$ans939 = item396.$var.app(i530,(true),d785);\nvar anf_arg807 = $ans939;\n$al940 = L[143];\nvar anf_arg953 = G(items517,\"rest\",L[143]);\n// caller optimization;\n$ans939 = link6.app(anf_arg807,anf_arg953);\nvar anf_arg956 = $ans939;\n$step937 = 9;\n$al940 = L[149];\n// omitting isFunction check;\n$ans939 = process526.$var.app(column516,anf_arg956);\nbreak;\ncase 2: $step937 = R.checkPyretTrue(has$hardline935)?3:4;\nbreak;\ncase 3: // caller optimization;\n$ans939 = item396.$var.app(i530,(false),d785);\nvar anf_arg406 = $ans939;\n$al940 = L[144];\nvar anf_arg969 = G(items517,\"rest\",L[144]);\n// caller optimization;\n$ans939 = link6.app(anf_arg406,anf_arg969);\nvar anf_arg54 = $ans939;\n$step937 = 9;\n$al940 = L[150];\n// omitting isFunction check;\n$ans939 = process526.$var.app(column516,anf_arg54);\nbreak;\ncase 4: $step937 = 5;\n$al940 = L[148];\n// omitting isFunction check;\n$ans939 = _minus10.app(width417,column516);\nbreak;\ncase 5: var anf_arg411 = $ans939;\n$step937 = 6;\n$al940 = L[147];\n// omitting isFunction check;\n$ans939 = _greaterequal2.app(anf_arg411,flat$width808);\nbreak;\ncase 6: var anf_if972 = $ans939;\n$step937 = R.checkPyretTrue(anf_if972)?7:8;\nbreak;\ncase 7: // caller optimization;\n$ans939 = item396.$var.app(i530,(true),d785);\nvar anf_arg970 = $ans939;\n$al940 = L[145];\nvar anf_arg971 = G(items517,\"rest\",L[145]);\n// caller optimization;\n$ans939 = link6.app(anf_arg970,anf_arg971);\nvar anf_arg934 = $ans939;\n$step937 = 9;\n$al940 = L[151];\n// omitting isFunction check;\n$ans939 = process526.$var.app(column516,anf_arg934);\nbreak;\ncase 8: // caller optimization;\n$ans939 = item396.$var.app(i530,(false),d785);\nvar anf_arg441 = $ans939;\n$al940 = L[146];\nvar anf_arg448 = G(items517,\"rest\",L[146]);\n// caller optimization;\n$ans939 = link6.app(anf_arg441,anf_arg448);\nvar anf_arg92 = $ans939;\n$step937 = 9;\n$al940 = L[152];\n// omitting isFunction check;\n$ans939 = process526.$var.app(column516,anf_arg92);\nbreak;\ncase 9: ++R.GAS;\nreturn $ans939;\ndefault: R.ffi.throwSpinnakerError(L[153],$step937);\n}\n}\nif($step937 !== 9) {\n$ans939.stack[R.EXN_STACKHEIGHT++] = R.mAR($al940,$temp_branch936,$step937,[d785,flat$width808,has$hardline935],[],$elidedFrames942);\n}\nreturn $ans939;\n};\n$ans518 = cases525.$app_fields($temp_branch936,[false,false,false]);\nbreak;\ncase 28: $ans518 = R.throwNoCasesMatched(L[118],cases525);\n$step514 = 29;\nbreak;\ncase 29: var ann_check_temp522 = $ans518;\n$step514 = 30;\n$al519 = L[111];\nvar $ann$check523 = R._cA(L[111],$type$Nothing1,ann_check_temp522);\nif(R.isContinuation($ann$check523)) {\n$ans518 = $ann$check523;\n}\nbreak;\ncase 30: $step514 = 31;\n$ans518 = ann_check_temp522;\nbreak;\ncase 31: ++R.GAS;\nreturn $ans518;\ndefault: R.ffi.throwSpinnakerError(L[110],$step514);\n}\n}\nif($step514 !== 31) {\n$ans518.stack[R.EXN_STACKHEIGHT++] = R.mAR($al519,$temp_lam515,$step514,[column516,items517],[d555,i530,cases525,n780,m531,ann_check_temp522,first524,vert776,flat775],$elidedFrames521);\n}\nreturn $ans518;\n};\nvar anf_assign949 = R.mF($temp_lam515,\"process\");\nprocess526.$var = anf_assign949;\nR.nothing;\n$ans419 = R.getMaker1(list7,(\"make1\"),L[158],L[159]);\nvar anf_fun950 = $ans419;\n$al420 = L[160];\nvar anf_arg451 = G(doc418,\"flat-width\",L[160]);\n$al420 = L[161];\nvar anf_arg452 = G(doc418,\"has-hardline\",L[161]);\n// caller optimization;\n$ans419 = group379.$var.app(doc418,anf_arg451,anf_arg452);\nvar anf_arg455 = $ans419;\n// caller optimization;\n$ans419 = item396.$var.app((0),(false),anf_arg455);\nvar anf_arg1068 = $ans419;\n$step415 = 2;\n$al420 = L[159];\nif(typeof(anf_fun950.app) !== \"function\") {\nR.ffi.throwNonFunApp($al420,anf_fun950);\n}\n$ans419 = anf_fun950.app(anf_arg1068);\nbreak;\ncase 2: var anf_arg456 = $ans419;\n$step415 = 3;\n$al420 = L[163];\n// omitting isFunction check;\n$ans419 = process526.$var.app((0),anf_arg456);\nbreak;\ncase 3: $step415 = 4;\n$al420 = L[162];\n// omitting isFunction check;\n$ans419 = gen$output513.$var.app();\nbreak;\ncase 4: ++R.GAS;\nreturn $ans419;\ndefault: R.ffi.throwSpinnakerError(L[102],$step415);\n}\n}\nif($step415 !== 4) {\n$ans419.stack[R.EXN_STACKHEIGHT++] = R.mAR($al420,$temp_lam416,$step415,[width417,doc418],[process526,gen$output513],$elidedFrames422);\n}\nreturn $ans419;\n};\nvar anf_assign1070 = R.mF($temp_lam416,\"format\");\nformat242.$var = anf_assign1070;\nR.nothing;\n// caller optimization;\n$ans89 = mt$doc344.$var.app((0),(false));\nvar mt$doc1270 = $ans89;\n// caller optimization;\n$ans89 = hardline352.$var.app((0),(true));\nvar hardline1237 = $ans89;\nvar $temp_lam1073 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__165($d1074) {\nvar $step1072 = 0;\nvar $elidedFrames1078 = 0;\nvar $ans1075 = D;\nvar $al1076 = L[165];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[165],1,$t,false);\n}\nvar d1074 = $d1074;\n// callee optimization;\nwhile(!R.isContinuation($ans1075)) {\nswitch($step1072) {\ncase 0: $al1076 = L[166];\nvar anf_arg1122 = G(d1074,\"flat-width\",L[166]);\n$al1076 = L[167];\nvar anf_arg540 = G(d1074,\"has-hardline\",L[167]);\n// caller optimization;\n$ans1075 = align371.$var.app(d1074,anf_arg1122,anf_arg540);\n$step1072 = 1;\nbreak;\ncase 1: return $ans1075;\ndefault: R.ffi.throwSpinnakerError(L[165],$step1072);\n}\n}\nreturn $ans1075;\n};\nvar align1484 = R.mF($temp_lam1073,\"\");\nvar $temp_lam1127 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__168($d1128) {\nvar $step1126 = 0;\nvar $elidedFrames1132 = 0;\nvar $ans1129 = D;\nvar $al1130 = L[168];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[168],1,$t,false);\n}\nvar d1128 = $d1128;\n// callee optimization;\nwhile(!R.isContinuation($ans1129)) {\nswitch($step1126) {\ncase 0: $al1130 = L[169];\nvar anf_arg502 = G(d1128,\"flat-width\",L[169]);\n$al1130 = L[170];\nvar anf_arg534 = G(d1128,\"has-hardline\",L[170]);\n// caller optimization;\n$ans1129 = group379.$var.app(d1128,anf_arg502,anf_arg534);\n$step1126 = 1;\nbreak;\ncase 1: return $ans1129;\ndefault: R.ffi.throwSpinnakerError(L[168],$step1126);\n}\n}\nreturn $ans1129;\n};\nvar group1265 = R.mF($temp_lam1127,\"\");\nvar $temp_lam1135 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__171($flat1136,$vert1137) {\nvar $step1134 = 0;\nvar $elidedFrames1141 = 0;\nvar $ans1138 = D;\nvar $al1139 = L[171];\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[171],2,$t,false);\n}\nvar flat1136 = $flat1136;\nvar vert1137 = $vert1137;\n// callee optimization;\nwhile(!R.isContinuation($ans1138)) {\nswitch($step1134) {\ncase 0: $al1139 = L[172];\nvar anf_arg544 = G(flat1136,\"flat-width\",L[172]);\n$al1139 = L[173];\nvar anf_arg556 = G(flat1136,\"has-hardline\",L[173]);\n// caller optimization;\n$ans1138 = if$flat367.$var.app(flat1136,vert1137,anf_arg544,anf_arg556);\n$step1134 = 1;\nbreak;\ncase 1: return $ans1138;\ndefault: R.ffi.throwSpinnakerError(L[171],$step1134);\n}\n}\nreturn $ans1138;\n};\nvar if$flat1203 = R.mF($temp_lam1135,\"\");\nvar $temp_lam1144 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__174($n1145,$d1146) {\nvar $step1143 = 0;\nvar $elidedFrames1151 = 0;\nvar $ans1148 = D;\nvar $al1149 = L[174];\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[174],2,$t,false);\n}\nvar n1145 = $n1145;\nvar d1146 = $d1146;\n// callee optimization;\nwhile(!R.isContinuation($ans1148)) {\nswitch($step1143) {\ncase 0: $al1149 = L[175];\nvar anf_arg537 = G(d1146,\"flat-width\",L[175]);\n$al1149 = L[176];\nvar anf_arg538 = G(d1146,\"has-hardline\",L[176]);\n// caller optimization;\n$ans1148 = nest363.$var.app(n1145,d1146,anf_arg537,anf_arg538);\n$step1143 = 1;\nbreak;\ncase 1: return $ans1148;\ndefault: R.ffi.throwSpinnakerError(L[174],$step1143);\n}\n}\nreturn $ans1148;\n};\nvar nest1483 = R.mF($temp_lam1144,\"\");\nvar $temp_lam1156 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__177($fst1157,$snd1158) {\nvar $step1155 = 0;\nvar $elidedFrames1162 = 0;\nvar $ans1159 = D;\nvar $al1160 = L[177];\nif(R.isAR($fst1157)) {\n$step1155 = $fst1157.step;\n$al1160 = $fst1157.from;\n$ans1159 = $fst1157.ans;\n$elidedFrames1162 = $fst1157.elidedFrames;\nfst1157 = $fst1157.args[0];\nsnd1158 = $fst1157.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[177],2,$t,false);\n}\nvar fst1157 = $fst1157;\nvar snd1158 = $snd1158;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1159 = R.mC();\n}\nwhile(!R.isContinuation($ans1159)) {\nswitch($step1155) {\ncase 0: $step1155 = 1;\n$al1160 = L[178];\n// omitting isFunction check;\n$ans1159 = _plus5.app(fst1157,snd1158);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1159;\ndefault: R.ffi.throwSpinnakerError(L[177],$step1155);\n}\n}\nif($step1155 !== 1) {\n$ans1159.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1160,$temp_lam1156,$step1155,[fst1157,snd1158],[],$elidedFrames1162);\n}\nreturn $ans1159;\n};\nvar concat1708 = R.mF($temp_lam1156,\"\");\nvar $temp_lam1165 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__179($n1166) {\nvar $step1164 = 0;\nvar $elidedFrames1170 = 0;\nvar $ans1167 = D;\nvar $al1168 = L[179];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[179],1,$t,false);\n}\nvar n1166 = $n1166;\n// callee optimization;\nwhile(!R.isContinuation($ans1167)) {\nswitch($step1164) {\ncase 0: // caller optimization;\n$ans1167 = blank356.$var.app(n1166,n1166,(false));\n$step1164 = 1;\nbreak;\ncase 1: return $ans1167;\ndefault: R.ffi.throwSpinnakerError(L[179],$step1164);\n}\n}\nreturn $ans1167;\n};\nvar blank1202 = R.mF($temp_lam1165,\"\");\nvar $temp_lam1174 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__180($s1175) {\nvar $step1173 = 0;\nvar $elidedFrames1180 = 0;\nvar $ans1177 = D;\nvar $al1178 = L[180];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[180],1,$t,false);\n}\nvar s1175 = $s1175;\n// callee optimization;\nwhile(!R.isContinuation($ans1177)) {\nswitch($step1173) {\ncase 0: // caller optimization;\n$ans1177 = string$length1.app(s1175);\nvar anf_arg558 = $ans1177;\n// caller optimization;\n$ans1177 = str348.$var.app(s1175,anf_arg558,(false));\n$step1173 = 1;\nbreak;\ncase 1: return $ans1177;\ndefault: R.ffi.throwSpinnakerError(L[180],$step1173);\n}\n}\nreturn $ans1177;\n};\nvar str1191 = R.mF($temp_lam1174,\"\");\nvar number1194 = {\"$var\":D};\nvar $temp_lam1185 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__181($n1186) {\nvar $step1184 = 0;\nvar $elidedFrames1190 = 0;\nvar $ans1187 = D;\nvar $al1188 = L[181];\nif(R.isAR($n1186)) {\n$step1184 = $n1186.step;\n$al1188 = $n1186.from;\n$ans1187 = $n1186.ans;\n$elidedFrames1190 = $n1186.elidedFrames;\nn1186 = $n1186.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[181],1,$t,false);\n}\nvar n1186 = $n1186;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1187 = R.mC();\n}\nwhile(!R.isContinuation($ans1187)) {\nswitch($step1184) {\ncase 0: $step1184 = 1;\n$al1188 = L[183];\nR._cA(L[183],$type$Number3,n1186);\nbreak;\ncase 1: $step1184 = 2;\n$al1188 = L[182];\nif(typeof(tostring1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1188,tostring1);\n}\n$ans1187 = tostring1.app(n1186);\nbreak;\ncase 2: var anf_arg559 = $ans1187;\n// caller optimization;\n$ans1187 = str1191.app(anf_arg559);\n$step1184 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1187;\ndefault: R.ffi.throwSpinnakerError(L[181],$step1184);\n}\n}\nif($step1184 !== 3) {\n$ans1187.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1188,$temp_lam1185,$step1184,[n1186],[],$elidedFrames1190);\n}\nreturn $ans1187;\n};\nvar anf_assign1193 = R.mF($temp_lam1185,\"number\");\nnumber1194.$var = anf_assign1193;\nR.nothing;\n// caller optimization;\n$ans89 = str1191.app((\"(\"));\nvar lparen1319 = $ans89;\n// caller optimization;\n$ans89 = str1191.app((\")\"));\nvar rparen1329 = $ans89;\n// caller optimization;\n$ans89 = str1191.app((\"{\"));\nvar lbrace1341 = $ans89;\n// caller optimization;\n$ans89 = str1191.app((\"}\"));\nvar rbrace1342 = $ans89;\n// caller optimization;\n$ans89 = str1191.app((\"[\"));\nvar lbrack1360 = $ans89;\n// caller optimization;\n$ans89 = str1191.app((\"]\"));\nvar rbrack1361 = $ans89;\n// caller optimization;\n$ans89 = str1191.app((\"<\"));\nvar langle1709 = $ans89;\n// caller optimization;\n$ans89 = str1191.app((\">\"));\nvar rangle1710 = $ans89;\n// caller optimization;\n$ans89 = str1191.app((\",\"));\nvar comma1241 = $ans89;\n// caller optimization;\n$ans89 = str1191.app((\";\"));\nvar semi1244 = $ans89;\nvar sbreak1240 = {\"$var\":D};\nvar $temp_lam1196 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__184($n1197) {\nvar $step1195 = 0;\nvar $elidedFrames1201 = 0;\nvar $ans1198 = D;\nvar $al1199 = L[184];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[184],1,$t,false);\n}\nvar n1197 = $n1197;\n// callee optimization;\nwhile(!R.isContinuation($ans1198)) {\nswitch($step1195) {\ncase 0: // caller optimization;\n$ans1198 = blank1202.app(n1197);\nvar anf_arg1236 = $ans1198;\n// caller optimization;\n$ans1198 = if$flat1203.app(anf_arg1236,hardline1237);\n$step1195 = 1;\nbreak;\ncase 1: return $ans1198;\ndefault: R.ffi.throwSpinnakerError(L[184],$step1195);\n}\n}\nreturn $ans1198;\n};\nvar anf_assign1239 = R.mF($temp_lam1196,\"sbreak\");\nsbreak1240.$var = anf_assign1239;\nR.nothing;\n// caller optimization;\n$ans89 = sbreak1240.$var.app((1));\nvar anf_arg1243 = $ans89;\n$step22 = 1;\n$al90 = L[282];\n// omitting isFunction check;\n$ans89 = _plus5.app(comma1241,anf_arg1243);\nbreak;\ncase 1: var commabreak1711 = $ans89;\n// caller optimization;\n$ans89 = sbreak1240.$var.app((1));\nvar anf_arg1247 = $ans89;\n$step22 = 2;\n$al90 = L[281];\n// omitting isFunction check;\n$ans89 = _plus5.app(semi1244,anf_arg1247);\nbreak;\ncase 2: var semibreak1712 = $ans89;\nvar flow$map1273 = {\"$var\":D};\nvar flow1293 = {\"$var\":D};\nvar vert1311 = {\"$var\":D};\nvar parens1333 = {\"$var\":D};\nvar braces1346 = {\"$var\":D};\nvar brackets1364 = {\"$var\":D};\nvar $temp_lam1249 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__185($sep1250,$f1251,$items1252) {\nvar $step1248 = 0;\nvar $elidedFrames1256 = 0;\nvar $ans1253 = D;\nvar $al1254 = L[185];\nif(R.isAR($sep1250)) {\n$step1248 = $sep1250.step;\n$al1254 = $sep1250.from;\n$ans1253 = $sep1250.ans;\n$elidedFrames1256 = $sep1250.elidedFrames;\nsep1250 = $sep1250.args[0];\nf1251 = $sep1250.args[1];\nitems1252 = $sep1250.args[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[185],3,$t,false);\n}\nvar sep1250 = $sep1250;\nvar f1251 = $f1251;\nvar items1252 = $items1252;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1253 = R.mC();\n}\nwhile(!R.isContinuation($ans1253)) {\nswitch($step1248) {\ncase 0: var $temp_lam1258 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__186($acc1259,$item1260) {\nvar $step1257 = 0;\nvar $elidedFrames1264 = 0;\nvar $ans1261 = D;\nvar $al1262 = L[186];\nif(R.isAR($acc1259)) {\n$step1257 = $acc1259.step;\n$al1262 = $acc1259.from;\n$ans1261 = $acc1259.ans;\n$elidedFrames1264 = $acc1259.elidedFrames;\nacc1259 = $acc1259.args[0];\nitem1260 = $acc1259.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[186],2,$t,false);\n}\nvar acc1259 = $acc1259;\nvar item1260 = $item1260;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1261 = R.mC();\n}\nwhile(!R.isContinuation($ans1261)) {\nswitch($step1257) {\ncase 0: // caller optimization;\n$ans1261 = is$mt$doc108.$var.app(acc1259);\nvar anf_if1266 = $ans1261;\n$step1257 = R.checkPyretTrue(anf_if1266)?1:2;\nbreak;\ncase 1: $step1257 = 5;\n$al1262 = L[187];\nif(typeof(f1251.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1262,f1251);\n}\n$ans1261 = f1251.app(item1260);\nbreak;\ncase 2: $step1257 = 3;\n$al1262 = L[190];\nif(typeof(f1251.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1262,f1251);\n}\n$ans1261 = f1251.app(item1260);\nbreak;\ncase 3: var anf_arg642 = $ans1261;\n$step1257 = 4;\n$al1262 = L[189];\n// omitting isFunction check;\n$ans1261 = _plus5.app(sep1250,anf_arg642);\nbreak;\ncase 4: var anf_arg645 = $ans1261;\n// caller optimization;\n$ans1261 = group1265.app(anf_arg645);\nvar anf_arg651 = $ans1261;\n$step1257 = 5;\n$al1262 = L[188];\n// omitting isFunction check;\n$ans1261 = _plus5.app(acc1259,anf_arg651);\nbreak;\ncase 5: ++R.GAS;\nreturn $ans1261;\ndefault: R.ffi.throwSpinnakerError(L[186],$step1257);\n}\n}\nif($step1257 !== 5) {\n$ans1261.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1262,$temp_lam1258,$step1257,[acc1259,item1260],[],$elidedFrames1264);\n}\nreturn $ans1261;\n};\nvar anf_arg646 = R.mF($temp_lam1258,\"for-body<line 234, column 2>\");\n$step1248 = 1;\n$al1254 = L[186];\n// omitting isFunction check;\n$ans1253 = fold5.app(anf_arg646,mt$doc1270,items1252);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1253;\ndefault: R.ffi.throwSpinnakerError(L[185],$step1248);\n}\n}\nif($step1248 !== 1) {\n$ans1253.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1254,$temp_lam1249,$step1248,[sep1250,f1251,items1252],[],$elidedFrames1256);\n}\nreturn $ans1253;\n};\nvar anf_assign1272 = R.mF($temp_lam1249,\"flow-map\");\nflow$map1273.$var = anf_assign1272;\nR.nothing;\nvar $temp_lam1275 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__191($items1276) {\nvar $step1274 = 0;\nvar $elidedFrames1280 = 0;\nvar $ans1277 = D;\nvar $al1278 = L[191];\nif(R.isAR($items1276)) {\n$step1274 = $items1276.step;\n$al1278 = $items1276.from;\n$ans1277 = $items1276.ans;\n$elidedFrames1280 = $items1276.elidedFrames;\nitems1276 = $items1276.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[191],1,$t,false);\n}\nvar items1276 = $items1276;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1277 = R.mC();\n}\nwhile(!R.isContinuation($ans1277)) {\nswitch($step1274) {\ncase 0: // caller optimization;\n$ans1277 = sbreak1240.$var.app((1));\nvar anf_arg649 = $ans1277;\nvar $temp_lam1282 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__192($x1283) {\nvar $step1281 = 0;\nvar $elidedFrames1288 = 0;\nvar $ans1285 = D;\nvar $al1286 = L[192];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[192],1,$t,false);\n}\nvar x1283 = $x1283;\n// callee optimization;\nwhile(!R.isContinuation($ans1285)) {\nswitch($step1281) {\ncase 0: $step1281 = 1;\n$ans1285 = x1283;\nbreak;\ncase 1: return $ans1285;\ndefault: R.ffi.throwSpinnakerError(L[192],$step1281);\n}\n}\nreturn $ans1285;\n};\nvar anf_arg301 = R.mF($temp_lam1282,\"\");\n$step1274 = 1;\n$al1278 = L[193];\n// omitting isFunction check;\n$ans1277 = flow$map1273.$var.app(anf_arg649,anf_arg301,items1276);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1277;\ndefault: R.ffi.throwSpinnakerError(L[191],$step1274);\n}\n}\nif($step1274 !== 1) {\n$ans1277.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1278,$temp_lam1275,$step1274,[items1276],[],$elidedFrames1280);\n}\nreturn $ans1277;\n};\nvar anf_assign1292 = R.mF($temp_lam1275,\"flow\");\nflow1293.$var = anf_assign1292;\nR.nothing;\nvar $temp_lam1295 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__194($items1296) {\nvar $step1294 = 0;\nvar $elidedFrames1300 = 0;\nvar $ans1297 = D;\nvar $al1298 = L[194];\nif(R.isAR($items1296)) {\n$step1294 = $items1296.step;\n$al1298 = $items1296.from;\n$ans1297 = $items1296.ans;\n$elidedFrames1300 = $items1296.elidedFrames;\nitems1296 = $items1296.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[194],1,$t,false);\n}\nvar items1296 = $items1296;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1297 = R.mC();\n}\nwhile(!R.isContinuation($ans1297)) {\nswitch($step1294) {\ncase 0: var $temp_lam1302 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__195($x1303) {\nvar $step1301 = 0;\nvar $elidedFrames1307 = 0;\nvar $ans1304 = D;\nvar $al1305 = L[195];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[195],1,$t,false);\n}\nvar x1303 = $x1303;\n// callee optimization;\nwhile(!R.isContinuation($ans1304)) {\nswitch($step1301) {\ncase 0: $step1301 = 1;\n$ans1304 = x1303;\nbreak;\ncase 1: return $ans1304;\ndefault: R.ffi.throwSpinnakerError(L[195],$step1301);\n}\n}\nreturn $ans1304;\n};\nvar anf_arg674 = R.mF($temp_lam1302,\"\");\n$step1294 = 1;\n$al1298 = L[196];\n// omitting isFunction check;\n$ans1297 = flow$map1273.$var.app(hardline1237,anf_arg674,items1296);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1297;\ndefault: R.ffi.throwSpinnakerError(L[194],$step1294);\n}\n}\nif($step1294 !== 1) {\n$ans1297.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1298,$temp_lam1295,$step1294,[items1296],[],$elidedFrames1300);\n}\nreturn $ans1297;\n};\nvar anf_assign1310 = R.mF($temp_lam1295,\"vert\");\nvert1311.$var = anf_assign1310;\nR.nothing;\nvar $temp_lam1313 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__197($d1314) {\nvar $step1312 = 0;\nvar $elidedFrames1318 = 0;\nvar $ans1315 = D;\nvar $al1316 = L[197];\nif(R.isAR($d1314)) {\n$step1312 = $d1314.step;\n$al1316 = $d1314.from;\n$ans1315 = $d1314.ans;\n$elidedFrames1318 = $d1314.elidedFrames;\nd1314 = $d1314.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[197],1,$t,false);\n}\nvar d1314 = $d1314;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1315 = R.mC();\n}\nwhile(!R.isContinuation($ans1315)) {\nswitch($step1312) {\ncase 0: $step1312 = 1;\n$al1316 = L[199];\n// omitting isFunction check;\n$ans1315 = _plus5.app(lparen1319,d1314);\nbreak;\ncase 1: var anf_arg1328 = $ans1315;\n$step1312 = 2;\n$al1316 = L[198];\n// omitting isFunction check;\n$ans1315 = _plus5.app(anf_arg1328,rparen1329);\nbreak;\ncase 2: var anf_arg712 = $ans1315;\n// caller optimization;\n$ans1315 = group1265.app(anf_arg712);\n$step1312 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1315;\ndefault: R.ffi.throwSpinnakerError(L[197],$step1312);\n}\n}\nif($step1312 !== 3) {\n$ans1315.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1316,$temp_lam1313,$step1312,[d1314],[],$elidedFrames1318);\n}\nreturn $ans1315;\n};\nvar anf_assign1332 = R.mF($temp_lam1313,\"parens\");\nparens1333.$var = anf_assign1332;\nR.nothing;\nvar $temp_lam1335 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__200($d1336) {\nvar $step1334 = 0;\nvar $elidedFrames1340 = 0;\nvar $ans1337 = D;\nvar $al1338 = L[200];\nif(R.isAR($d1336)) {\n$step1334 = $d1336.step;\n$al1338 = $d1336.from;\n$ans1337 = $d1336.ans;\n$elidedFrames1340 = $d1336.elidedFrames;\nd1336 = $d1336.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[200],1,$t,false);\n}\nvar d1336 = $d1336;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1337 = R.mC();\n}\nwhile(!R.isContinuation($ans1337)) {\nswitch($step1334) {\ncase 0: $step1334 = 1;\n$al1338 = L[202];\n// omitting isFunction check;\n$ans1337 = _plus5.app(lbrace1341,d1336);\nbreak;\ncase 1: var anf_arg707 = $ans1337;\n$step1334 = 2;\n$al1338 = L[201];\n// omitting isFunction check;\n$ans1337 = _plus5.app(anf_arg707,rbrace1342);\nbreak;\ncase 2: var anf_arg714 = $ans1337;\n// caller optimization;\n$ans1337 = group1265.app(anf_arg714);\n$step1334 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1337;\ndefault: R.ffi.throwSpinnakerError(L[200],$step1334);\n}\n}\nif($step1334 !== 3) {\n$ans1337.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1338,$temp_lam1335,$step1334,[d1336],[],$elidedFrames1340);\n}\nreturn $ans1337;\n};\nvar anf_assign1345 = R.mF($temp_lam1335,\"braces\");\nbraces1346.$var = anf_assign1345;\nR.nothing;\nvar $temp_lam1350 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__203($d1351) {\nvar $step1349 = 0;\nvar $elidedFrames1359 = 0;\nvar $ans1356 = D;\nvar $al1357 = L[203];\nif(R.isAR($d1351)) {\n$step1349 = $d1351.step;\n$al1357 = $d1351.from;\n$ans1356 = $d1351.ans;\n$elidedFrames1359 = $d1351.elidedFrames;\nd1351 = $d1351.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[203],1,$t,false);\n}\nvar d1351 = $d1351;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1356 = R.mC();\n}\nwhile(!R.isContinuation($ans1356)) {\nswitch($step1349) {\ncase 0: $step1349 = 1;\n$al1357 = L[205];\n// omitting isFunction check;\n$ans1356 = _plus5.app(lbrack1360,d1351);\nbreak;\ncase 1: var anf_arg323 = $ans1356;\n$step1349 = 2;\n$al1357 = L[204];\n// omitting isFunction check;\n$ans1356 = _plus5.app(anf_arg323,rbrack1361);\nbreak;\ncase 2: var anf_arg326 = $ans1356;\n// caller optimization;\n$ans1356 = group1265.app(anf_arg326);\n$step1349 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1356;\ndefault: R.ffi.throwSpinnakerError(L[203],$step1349);\n}\n}\nif($step1349 !== 3) {\n$ans1356.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1357,$temp_lam1350,$step1349,[d1351],[],$elidedFrames1359);\n}\nreturn $ans1356;\n};\nvar anf_assign1363 = R.mF($temp_lam1350,\"brackets\");\nbrackets1364.$var = anf_assign1363;\nR.nothing;\n// caller optimization;\n$ans89 = str1191.app((\"'\"));\nvar str$squote1426 = $ans89;\n// caller optimization;\n$ans89 = str1191.app((\"\\\"\"));\nvar str$dquote1372 = $ans89;\nvar dquote1418 = {\"$var\":D};\nvar squote1474 = {\"$var\":D};\nvar hang1487 = {\"$var\":D};\nvar prefix1533 = {\"$var\":D};\nvar infix1549 = {\"$var\":D};\nvar infix$break1568 = {\"$var\":D};\nvar surround1608 = {\"$var\":D};\nvar soft$surround1648 = {\"$var\":D};\nvar separate1670 = {\"$var\":D};\nvar surround$separate1687 = {\"$var\":D};\nvar label$align$surround1701 = {\"$var\":D};\nvar $temp_lam1366 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__206($s1367) {\nvar $step1365 = 0;\nvar $elidedFrames1371 = 0;\nvar $ans1368 = D;\nvar $al1369 = L[206];\nif(R.isAR($s1367)) {\n$step1365 = $s1367.step;\n$al1369 = $s1367.from;\n$ans1368 = $s1367.ans;\n$elidedFrames1371 = $s1367.elidedFrames;\ns1367 = $s1367.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[206],1,$t,false);\n}\nvar s1367 = $s1367;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1368 = R.mC();\n}\nwhile(!R.isContinuation($ans1368)) {\nswitch($step1365) {\ncase 0: $step1365 = 1;\n$al1369 = L[208];\n// omitting isFunction check;\n$ans1368 = _plus5.app(str$dquote1372,s1367);\nbreak;\ncase 1: var anf_arg715 = $ans1368;\n$step1365 = 2;\n$al1369 = L[207];\n// omitting isFunction check;\n$ans1368 = _plus5.app(anf_arg715,str$dquote1372);\nbreak;\ncase 2: var anf_arg1415 = $ans1368;\n// caller optimization;\n$ans1368 = group1265.app(anf_arg1415);\n$step1365 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1368;\ndefault: R.ffi.throwSpinnakerError(L[206],$step1365);\n}\n}\nif($step1365 !== 3) {\n$ans1368.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1369,$temp_lam1366,$step1365,[s1367],[],$elidedFrames1371);\n}\nreturn $ans1368;\n};\nvar anf_assign1417 = R.mF($temp_lam1366,\"dquote\");\ndquote1418.$var = anf_assign1417;\nR.nothing;\nvar $temp_lam1420 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__209($s1421) {\nvar $step1419 = 0;\nvar $elidedFrames1425 = 0;\nvar $ans1422 = D;\nvar $al1423 = L[209];\nif(R.isAR($s1421)) {\n$step1419 = $s1421.step;\n$al1423 = $s1421.from;\n$ans1422 = $s1421.ans;\n$elidedFrames1425 = $s1421.elidedFrames;\ns1421 = $s1421.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[209],1,$t,false);\n}\nvar s1421 = $s1421;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1422 = R.mC();\n}\nwhile(!R.isContinuation($ans1422)) {\nswitch($step1419) {\ncase 0: $step1419 = 1;\n$al1423 = L[211];\n// omitting isFunction check;\n$ans1422 = _plus5.app(str$squote1426,s1421);\nbreak;\ncase 1: var anf_arg1471 = $ans1422;\n$step1419 = 2;\n$al1423 = L[210];\n// omitting isFunction check;\n$ans1422 = _plus5.app(anf_arg1471,str$squote1426);\nbreak;\ncase 2: var anf_arg332 = $ans1422;\n// caller optimization;\n$ans1422 = group1265.app(anf_arg332);\n$step1419 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1422;\ndefault: R.ffi.throwSpinnakerError(L[209],$step1419);\n}\n}\nif($step1419 !== 3) {\n$ans1422.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1423,$temp_lam1420,$step1419,[s1421],[],$elidedFrames1425);\n}\nreturn $ans1422;\n};\nvar anf_assign1473 = R.mF($temp_lam1420,\"squote\");\nsquote1474.$var = anf_assign1473;\nR.nothing;\nvar $temp_lam1476 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__212($i1477,$d1478) {\nvar $step1475 = 0;\nvar $elidedFrames1482 = 0;\nvar $ans1479 = D;\nvar $al1480 = L[212];\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[212],2,$t,false);\n}\nvar i1477 = $i1477;\nvar d1478 = $d1478;\n// callee optimization;\nwhile(!R.isContinuation($ans1479)) {\nswitch($step1475) {\ncase 0: // caller optimization;\n$ans1479 = nest1483.app(i1477,d1478);\nvar anf_arg335 = $ans1479;\n// caller optimization;\n$ans1479 = align1484.app(anf_arg335);\n$step1475 = 1;\nbreak;\ncase 1: return $ans1479;\ndefault: R.ffi.throwSpinnakerError(L[212],$step1475);\n}\n}\nreturn $ans1479;\n};\nvar anf_assign1486 = R.mF($temp_lam1476,\"hang\");\nhang1487.$var = anf_assign1486;\nR.nothing;\nvar $temp_lam1490 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__213($n1491,$b1492,$x1493,$y1494) {\nvar $step1489 = 0;\nvar $elidedFrames1498 = 0;\nvar $ans1495 = D;\nvar $al1496 = L[213];\nif(R.isAR($n1491)) {\n$step1489 = $n1491.step;\n$al1496 = $n1491.from;\n$ans1495 = $n1491.ans;\n$elidedFrames1498 = $n1491.elidedFrames;\nn1491 = $n1491.args[0];\nb1492 = $n1491.args[1];\nx1493 = $n1491.args[2];\ny1494 = $n1491.args[3];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[213],4,$t,false);\n}\nvar n1491 = $n1491;\nvar b1492 = $b1492;\nvar x1493 = $x1493;\nvar y1494 = $y1494;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1495 = R.mC();\n}\nwhile(!R.isContinuation($ans1495)) {\nswitch($step1489) {\ncase 0: // caller optimization;\n$ans1495 = sbreak1240.$var.app(b1492);\nvar anf_arg732 = $ans1495;\n$step1489 = 1;\n$al1496 = L[215];\n// omitting isFunction check;\n$ans1495 = _plus5.app(anf_arg732,y1494);\nbreak;\ncase 1: var anf_arg341 = $ans1495;\n// caller optimization;\n$ans1495 = nest1483.app(n1491,anf_arg341);\nvar anf_arg342 = $ans1495;\n$step1489 = 2;\n$al1496 = L[214];\n// omitting isFunction check;\n$ans1495 = _plus5.app(x1493,anf_arg342);\nbreak;\ncase 2: var anf_arg1528 = $ans1495;\n// caller optimization;\n$ans1495 = group1265.app(anf_arg1528);\n$step1489 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1495;\ndefault: R.ffi.throwSpinnakerError(L[213],$step1489);\n}\n}\nif($step1489 !== 3) {\n$ans1495.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1496,$temp_lam1490,$step1489,[n1491,b1492,x1493,y1494],[],$elidedFrames1498);\n}\nreturn $ans1495;\n};\nvar anf_assign1532 = R.mF($temp_lam1490,\"prefix\");\nprefix1533.$var = anf_assign1532;\nR.nothing;\nvar $temp_lam1535 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__216($n1536,$b1537,$op1538,$x1539,$y1540) {\nvar $step1534 = 0;\nvar $elidedFrames1546 = 0;\nvar $ans1543 = D;\nvar $al1544 = L[216];\nif(R.isAR($n1536)) {\n$step1534 = $n1536.step;\n$al1544 = $n1536.from;\n$ans1543 = $n1536.ans;\n$elidedFrames1546 = $n1536.elidedFrames;\nn1536 = $n1536.args[0];\nb1537 = $n1536.args[1];\nop1538 = $n1536.args[2];\nx1539 = $n1536.args[3];\ny1540 = $n1536.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[216],5,$t,false);\n}\nvar n1536 = $n1536;\nvar b1537 = $b1537;\nvar op1538 = $op1538;\nvar x1539 = $x1539;\nvar y1540 = $y1540;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1543 = R.mC();\n}\nwhile(!R.isContinuation($ans1543)) {\nswitch($step1534) {\ncase 0: $step1534 = 1;\n$al1544 = L[220];\nR._cA(L[220],$type$Number3,n1536);\nbreak;\ncase 1: $step1534 = 2;\n$al1544 = L[221];\nR._cA(L[221],$type$Number3,b1537);\nbreak;\ncase 2: $step1534 = 3;\n$al1544 = L[222];\nR._cA(L[222],PPrintDoc231,op1538);\nbreak;\ncase 3: $step1534 = 4;\n$al1544 = L[223];\nR._cA(L[223],PPrintDoc231,x1539);\nbreak;\ncase 4: $step1534 = 5;\n$al1544 = L[224];\nR._cA(L[224],PPrintDoc231,y1540);\nbreak;\ncase 5: // caller optimization;\n$ans1543 = blank1202.app(b1537);\nvar anf_arg345 = $ans1543;\n$step1534 = 6;\n$al1544 = L[219];\n// omitting isFunction check;\n$ans1543 = _plus5.app(x1539,anf_arg345);\nbreak;\ncase 6: var anf_arg755 = $ans1543;\n$step1534 = 7;\n$al1544 = L[218];\n// omitting isFunction check;\n$ans1543 = _plus5.app(anf_arg755,op1538);\nbreak;\ncase 7: var anf_arg761 = $ans1543;\n$step1534 = 8;\n$al1544 = L[217];\n// omitting isFunction check;\n$ans1543 = prefix1533.$var.app(n1536,b1537,anf_arg761,y1540);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1543;\ndefault: R.ffi.throwSpinnakerError(L[216],$step1534);\n}\n}\nif($step1534 !== 8) {\n$ans1543.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1544,$temp_lam1535,$step1534,[n1536,b1537,op1538,x1539,y1540],[],$elidedFrames1546);\n}\nreturn $ans1543;\n};\nvar anf_assign1548 = R.mF($temp_lam1535,\"infix\");\ninfix1549.$var = anf_assign1548;\nR.nothing;\nvar $temp_lam1551 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__225($n1552,$b1553,$op1554,$x1555,$y1556) {\nvar $step1550 = 0;\nvar $elidedFrames1560 = 0;\nvar $ans1557 = D;\nvar $al1558 = L[225];\nif(R.isAR($n1552)) {\n$step1550 = $n1552.step;\n$al1558 = $n1552.from;\n$ans1557 = $n1552.ans;\n$elidedFrames1560 = $n1552.elidedFrames;\nn1552 = $n1552.args[0];\nb1553 = $n1552.args[1];\nop1554 = $n1552.args[2];\nx1555 = $n1552.args[3];\ny1556 = $n1552.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[225],5,$t,false);\n}\nvar n1552 = $n1552;\nvar b1553 = $b1553;\nvar op1554 = $op1554;\nvar x1555 = $x1555;\nvar y1556 = $y1556;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1557 = R.mC();\n}\nwhile(!R.isContinuation($ans1557)) {\nswitch($step1550) {\ncase 0: $step1550 = 1;\n$al1558 = L[229];\nR._cA(L[229],$type$Number3,n1552);\nbreak;\ncase 1: $step1550 = 2;\n$al1558 = L[230];\nR._cA(L[230],$type$Number3,b1553);\nbreak;\ncase 2: $step1550 = 3;\n$al1558 = L[231];\nR._cA(L[231],PPrintDoc231,op1554);\nbreak;\ncase 3: $step1550 = 4;\n$al1558 = L[232];\nR._cA(L[232],PPrintDoc231,x1555);\nbreak;\ncase 4: $step1550 = 5;\n$al1558 = L[233];\nR._cA(L[233],PPrintDoc231,y1556);\nbreak;\ncase 5: // caller optimization;\n$ans1557 = blank1202.app(b1553);\nvar anf_arg1565 = $ans1557;\n$step1550 = 6;\n$al1558 = L[228];\n// omitting isFunction check;\n$ans1557 = _plus5.app(op1554,anf_arg1565);\nbreak;\ncase 6: var anf_arg764 = $ans1557;\n$step1550 = 7;\n$al1558 = L[227];\n// omitting isFunction check;\n$ans1557 = _plus5.app(anf_arg764,y1556);\nbreak;\ncase 7: var anf_arg363 = $ans1557;\n$step1550 = 8;\n$al1558 = L[226];\n// omitting isFunction check;\n$ans1557 = prefix1533.$var.app(n1552,b1553,x1555,anf_arg363);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1557;\ndefault: R.ffi.throwSpinnakerError(L[225],$step1550);\n}\n}\nif($step1550 !== 8) {\n$ans1557.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1558,$temp_lam1551,$step1550,[n1552,b1553,op1554,x1555,y1556],[],$elidedFrames1560);\n}\nreturn $ans1557;\n};\nvar anf_assign1567 = R.mF($temp_lam1551,\"infix-break\");\ninfix$break1568.$var = anf_assign1567;\nR.nothing;\nvar $temp_lam1570 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__234($n1571,$b1572,$open1573,$contents1574,$close1575) {\nvar $step1569 = 0;\nvar $elidedFrames1579 = 0;\nvar $ans1576 = D;\nvar $al1577 = L[234];\nif(R.isAR($n1571)) {\n$step1569 = $n1571.step;\n$al1577 = $n1571.from;\n$ans1576 = $n1571.ans;\n$elidedFrames1579 = $n1571.elidedFrames;\nn1571 = $n1571.args[0];\nb1572 = $n1571.args[1];\nopen1573 = $n1571.args[2];\ncontents1574 = $n1571.args[3];\nclose1575 = $n1571.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[234],5,$t,false);\n}\nvar n1571 = $n1571;\nvar b1572 = $b1572;\nvar open1573 = $open1573;\nvar contents1574 = $contents1574;\nvar close1575 = $close1575;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1576 = R.mC();\n}\nwhile(!R.isContinuation($ans1576)) {\nswitch($step1569) {\ncase 0: $step1569 = 1;\n$al1577 = L[241];\nR._cA(L[241],$type$Number3,n1571);\nbreak;\ncase 1: $step1569 = 2;\n$al1577 = L[242];\nR._cA(L[242],$type$Number3,b1572);\nbreak;\ncase 2: $step1569 = 3;\n$al1577 = L[243];\nR._cA(L[243],PPrintDoc231,open1573);\nbreak;\ncase 3: $step1569 = 4;\n$al1577 = L[244];\nR._cA(L[244],PPrintDoc231,contents1574);\nbreak;\ncase 4: $step1569 = 5;\n$al1577 = L[245];\nR._cA(L[245],PPrintDoc231,close1575);\nbreak;\ncase 5: // caller optimization;\n$ans1576 = is$mt$doc108.$var.app(close1575);\nvar anf_if1604 = $ans1576;\n$step1569 = R.checkPyretTrue(anf_if1604)?6:9;\nbreak;\ncase 6: // caller optimization;\n$ans1576 = sbreak1240.$var.app(b1572);\nvar anf_arg766 = $ans1576;\n$step1569 = 7;\n$al1577 = L[236];\n// omitting isFunction check;\n$ans1576 = _plus5.app(anf_arg766,contents1574);\nbreak;\ncase 7: var anf_arg366 = $ans1576;\n// caller optimization;\n$ans1576 = nest1483.app(n1571,anf_arg366);\nvar anf_arg1598 = $ans1576;\n$step1569 = 8;\n$al1577 = L[235];\n// omitting isFunction check;\n$ans1576 = _plus5.app(open1573,anf_arg1598);\nbreak;\ncase 8: var anf_arg367 = $ans1576;\n// caller optimization;\n$ans1576 = group1265.app(anf_arg367);\n$step1569 = 14;\nbreak;\ncase 9: // caller optimization;\n$ans1576 = sbreak1240.$var.app(b1572);\nvar anf_arg368 = $ans1576;\n$step1569 = 10;\n$al1577 = L[240];\n// omitting isFunction check;\n$ans1576 = _plus5.app(anf_arg368,contents1574);\nbreak;\ncase 10: var anf_arg371 = $ans1576;\n// caller optimization;\n$ans1576 = nest1483.app(n1571,anf_arg371);\nvar anf_arg1599 = $ans1576;\n$step1569 = 11;\n$al1577 = L[239];\n// omitting isFunction check;\n$ans1576 = _plus5.app(open1573,anf_arg1599);\nbreak;\ncase 11: var anf_arg1603 = $ans1576;\n// caller optimization;\n$ans1576 = sbreak1240.$var.app(b1572);\nvar anf_arg374 = $ans1576;\n$step1569 = 12;\n$al1577 = L[238];\n// omitting isFunction check;\n$ans1576 = _plus5.app(anf_arg1603,anf_arg374);\nbreak;\ncase 12: var anf_arg375 = $ans1576;\n$step1569 = 13;\n$al1577 = L[237];\n// omitting isFunction check;\n$ans1576 = _plus5.app(anf_arg375,close1575);\nbreak;\ncase 13: var anf_arg827 = $ans1576;\n// caller optimization;\n$ans1576 = group1265.app(anf_arg827);\n$step1569 = 14;\nbreak;\ncase 14: ++R.GAS;\nreturn $ans1576;\ndefault: R.ffi.throwSpinnakerError(L[234],$step1569);\n}\n}\nif($step1569 !== 14) {\n$ans1576.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1577,$temp_lam1570,$step1569,[n1571,b1572,open1573,contents1574,close1575],[],$elidedFrames1579);\n}\nreturn $ans1576;\n};\nvar anf_assign1607 = R.mF($temp_lam1570,\"surround\");\nsurround1608.$var = anf_assign1607;\nR.nothing;\nvar $temp_lam1610 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__246($n1611,$b1612,$open1613,$contents1614,$close1615) {\nvar $step1609 = 0;\nvar $elidedFrames1619 = 0;\nvar $ans1616 = D;\nvar $al1617 = L[246];\nif(R.isAR($n1611)) {\n$step1609 = $n1611.step;\n$al1617 = $n1611.from;\n$ans1616 = $n1611.ans;\n$elidedFrames1619 = $n1611.elidedFrames;\nn1611 = $n1611.args[0];\nb1612 = $n1611.args[1];\nopen1613 = $n1611.args[2];\ncontents1614 = $n1611.args[3];\nclose1615 = $n1611.args[4];\nanf_arg1645 = $n1611.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[246],5,$t,false);\n}\nvar n1611 = $n1611;\nvar b1612 = $b1612;\nvar open1613 = $open1613;\nvar contents1614 = $contents1614;\nvar close1615 = $close1615;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1616 = R.mC();\n}\nwhile(!R.isContinuation($ans1616)) {\nswitch($step1609) {\ncase 0: $step1609 = 1;\n$al1617 = L[253];\nR._cA(L[253],$type$Number3,n1611);\nbreak;\ncase 1: $step1609 = 2;\n$al1617 = L[254];\nR._cA(L[254],$type$Number3,b1612);\nbreak;\ncase 2: $step1609 = 3;\n$al1617 = L[255];\nR._cA(L[255],PPrintDoc231,open1613);\nbreak;\ncase 3: $step1609 = 4;\n$al1617 = L[256];\nR._cA(L[256],PPrintDoc231,contents1614);\nbreak;\ncase 4: $step1609 = 5;\n$al1617 = L[257];\nR._cA(L[257],PPrintDoc231,close1615);\nbreak;\ncase 5: // caller optimization;\n$ans1616 = is$mt$doc108.$var.app(close1615);\nvar anf_if1646 = $ans1616;\n$step1609 = R.checkPyretTrue(anf_if1646)?6:9;\nbreak;\ncase 6: // caller optimization;\n$ans1616 = sbreak1240.$var.app(b1612);\nvar anf_arg829 = $ans1616;\n$step1609 = 7;\n$al1617 = L[248];\n// omitting isFunction check;\n$ans1616 = _plus5.app(anf_arg829,contents1614);\nbreak;\ncase 7: var anf_arg830 = $ans1616;\n// caller optimization;\n$ans1616 = group1265.app(anf_arg830);\nvar anf_arg1641 = $ans1616;\n// caller optimization;\n$ans1616 = nest1483.app(n1611,anf_arg1641);\nvar anf_arg1642 = $ans1616;\n$step1609 = 8;\n$al1617 = L[247];\n// omitting isFunction check;\n$ans1616 = _plus5.app(open1613,anf_arg1642);\nbreak;\ncase 8: var anf_arg1644 = $ans1616;\n// caller optimization;\n$ans1616 = group1265.app(anf_arg1644);\n$step1609 = 14;\nbreak;\ncase 9: // caller optimization;\n$ans1616 = sbreak1240.$var.app(b1612);\nvar anf_arg842 = $ans1616;\n$step1609 = 10;\n$al1617 = L[252];\n// omitting isFunction check;\n$ans1616 = _plus5.app(anf_arg842,contents1614);\nbreak;\ncase 10: var anf_arg831 = $ans1616;\n// caller optimization;\n$ans1616 = group1265.app(anf_arg831);\nvar anf_arg832 = $ans1616;\n// caller optimization;\n$ans1616 = nest1483.app(n1611,anf_arg832);\nvar anf_arg839 = $ans1616;\n$step1609 = 11;\n$al1617 = L[251];\n// omitting isFunction check;\n$ans1616 = _plus5.app(open1613,anf_arg839);\nbreak;\ncase 11: var anf_arg1645 = $ans1616;\n// caller optimization;\n$ans1616 = sbreak1240.$var.app(b1612);\nvar anf_arg840 = $ans1616;\n$step1609 = 12;\n$al1617 = L[250];\n// omitting isFunction check;\n$ans1616 = _plus5.app(anf_arg840,close1615);\nbreak;\ncase 12: var anf_arg843 = $ans1616;\n// caller optimization;\n$ans1616 = group1265.app(anf_arg843);\nvar anf_arg845 = $ans1616;\n$step1609 = 13;\n$al1617 = L[249];\n// omitting isFunction check;\n$ans1616 = _plus5.app(anf_arg1645,anf_arg845);\nbreak;\ncase 13: var anf_arg846 = $ans1616;\n// caller optimization;\n$ans1616 = group1265.app(anf_arg846);\n$step1609 = 14;\nbreak;\ncase 14: ++R.GAS;\nreturn $ans1616;\ndefault: R.ffi.throwSpinnakerError(L[246],$step1609);\n}\n}\nif($step1609 !== 14) {\n$ans1616.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1617,$temp_lam1610,$step1609,[n1611,b1612,open1613,contents1614,close1615],[anf_arg1645],$elidedFrames1619);\n}\nreturn $ans1616;\n};\nvar anf_assign490 = R.mF($temp_lam1610,\"soft-surround\");\nsoft$surround1648.$var = anf_assign490;\nR.nothing;\nvar $temp_lam1650 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__258($sep1651,$docs1652) {\nvar $step1649 = 0;\nvar $elidedFrames1656 = 0;\nvar $ans1653 = D;\nvar $al1654 = L[258];\nif(R.isAR($sep1651)) {\n$step1649 = $sep1651.step;\n$al1654 = $sep1651.from;\n$ans1653 = $sep1651.ans;\n$elidedFrames1656 = $sep1651.elidedFrames;\nsep1651 = $sep1651.args[0];\ndocs1652 = $sep1651.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[258],2,$t,false);\n}\nvar sep1651 = $sep1651;\nvar docs1652 = $docs1652;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1653 = R.mC();\n}\nwhile(!R.isContinuation($ans1653)) {\nswitch($step1649) {\ncase 0: $step1649 = 1;\n$al1654 = L[262];\nR._cA(L[262],PPrintDoc231,sep1651);\nbreak;\ncase 1: $step1649 = 2;\n$al1654 = L[263];\nR._cA(L[263],List4,docs1652);\nbreak;\ncase 2: var $temp_lam1658 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__259($acc1659,$d1660) {\nvar $step1657 = 0;\nvar $elidedFrames1664 = 0;\nvar $ans1661 = D;\nvar $al1662 = L[259];\nif(R.isAR($acc1659)) {\n$step1657 = $acc1659.step;\n$al1662 = $acc1659.from;\n$ans1661 = $acc1659.ans;\n$elidedFrames1664 = $acc1659.elidedFrames;\nacc1659 = $acc1659.args[0];\nd1660 = $acc1659.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[259],2,$t,false);\n}\nvar acc1659 = $acc1659;\nvar d1660 = $d1660;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1661 = R.mC();\n}\nwhile(!R.isContinuation($ans1661)) {\nswitch($step1657) {\ncase 0: // caller optimization;\n$ans1661 = is$mt$doc108.$var.app(d1660);\nvar anf_if1666 = $ans1661;\n$step1657 = R.checkPyretTrue(anf_if1666)?1:2;\nbreak;\ncase 1: $step1657 = 6;\n$ans1661 = acc1659;\nbreak;\ncase 2: // caller optimization;\n$ans1661 = is$mt$doc108.$var.app(acc1659);\nvar anf_if1665 = $ans1661;\n$step1657 = R.checkPyretTrue(anf_if1665)?3:4;\nbreak;\ncase 3: $step1657 = 6;\n$ans1661 = d1660;\nbreak;\ncase 4: $step1657 = 5;\n$al1662 = L[261];\n// omitting isFunction check;\n$ans1661 = _plus5.app(acc1659,sep1651);\nbreak;\ncase 5: var anf_arg867 = $ans1661;\n$step1657 = 6;\n$al1662 = L[260];\n// omitting isFunction check;\n$ans1661 = _plus5.app(anf_arg867,d1660);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1661;\ndefault: R.ffi.throwSpinnakerError(L[259],$step1657);\n}\n}\nif($step1657 !== 6) {\n$ans1661.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1662,$temp_lam1658,$step1657,[acc1659,d1660],[],$elidedFrames1664);\n}\nreturn $ans1661;\n};\nvar anf_arg921 = R.mF($temp_lam1658,\"for-body<line 270, column 2>\");\n$step1649 = 3;\n$al1654 = L[259];\n// omitting isFunction check;\n$ans1653 = fold5.app(anf_arg921,mt$doc1270,docs1652);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1653;\ndefault: R.ffi.throwSpinnakerError(L[258],$step1649);\n}\n}\nif($step1649 !== 3) {\n$ans1653.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1654,$temp_lam1650,$step1649,[sep1651,docs1652],[],$elidedFrames1656);\n}\nreturn $ans1653;\n};\nvar anf_assign1669 = R.mF($temp_lam1650,\"separate\");\nseparate1670.$var = anf_assign1669;\nR.nothing;\nvar $temp_lam1672 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__264($n1673,$b1674,$void1675,$open1676,$sep1677,$close1678,$docs1679) {\nvar $step1671 = 0;\nvar $elidedFrames1683 = 0;\nvar $ans1680 = D;\nvar $al1681 = L[264];\nif(R.isAR($n1673)) {\n$step1671 = $n1673.step;\n$al1681 = $n1673.from;\n$ans1680 = $n1673.ans;\n$elidedFrames1683 = $n1673.elidedFrames;\nn1673 = $n1673.args[0];\nb1674 = $n1673.args[1];\nvoid1675 = $n1673.args[2];\nopen1676 = $n1673.args[3];\nsep1677 = $n1673.args[4];\nclose1678 = $n1673.args[5];\ndocs1679 = $n1673.args[6];\n} else {\nvar $l = arguments.length;\nif($l !== 7) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[264],7,$t,false);\n}\nvar n1673 = $n1673;\nvar b1674 = $b1674;\nvar void1675 = $void1675;\nvar open1676 = $open1676;\nvar sep1677 = $sep1677;\nvar close1678 = $close1678;\nvar docs1679 = $docs1679;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1680 = R.mC();\n}\nwhile(!R.isContinuation($ans1680)) {\nswitch($step1671) {\ncase 0: $step1671 = 1;\n$al1681 = L[267];\nR._cA(L[267],$type$Number3,n1673);\nbreak;\ncase 1: $step1671 = 2;\n$al1681 = L[268];\nR._cA(L[268],$type$Number3,b1674);\nbreak;\ncase 2: $step1671 = 3;\n$al1681 = L[269];\nR._cA(L[269],PPrintDoc231,void1675);\nbreak;\ncase 3: $step1671 = 4;\n$al1681 = L[270];\nR._cA(L[270],PPrintDoc231,open1676);\nbreak;\ncase 4: $step1671 = 5;\n$al1681 = L[271];\nR._cA(L[271],PPrintDoc231,sep1677);\nbreak;\ncase 5: $step1671 = 6;\n$al1681 = L[272];\nR._cA(L[272],PPrintDoc231,close1678);\nbreak;\ncase 6: $step1671 = 7;\n$al1681 = L[273];\nR._cA(L[273],List4,docs1679);\nbreak;\ncase 7: // caller optimization;\n$ans1680 = is$empty3.app(docs1679);\nvar anf_if1684 = $ans1680;\n$step1671 = R.checkPyretTrue(anf_if1684)?8:9;\nbreak;\ncase 8: $step1671 = 11;\n$ans1680 = void1675;\nbreak;\ncase 9: $step1671 = 10;\n$al1681 = L[266];\n// omitting isFunction check;\n$ans1680 = separate1670.$var.app(sep1677,docs1679);\nbreak;\ncase 10: var anf_arg525 = $ans1680;\n$step1671 = 11;\n$al1681 = L[265];\n// omitting isFunction check;\n$ans1680 = surround1608.$var.app(n1673,b1674,open1676,anf_arg525,close1678);\nbreak;\ncase 11: ++R.GAS;\nreturn $ans1680;\ndefault: R.ffi.throwSpinnakerError(L[264],$step1671);\n}\n}\nif($step1671 !== 11) {\n$ans1680.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1681,$temp_lam1672,$step1671,[n1673,b1674,void1675,open1676,sep1677,close1678,docs1679],[],$elidedFrames1683);\n}\nreturn $ans1680;\n};\nvar anf_assign1686 = R.mF($temp_lam1672,\"surround-separate\");\nsurround$separate1687.$var = anf_assign1686;\nR.nothing;\nvar $temp_lam1689 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__274($label1690,$open1691,$sep1692,$contents1693,$close1694) {\nvar $step1688 = 0;\nvar $elidedFrames1698 = 0;\nvar $ans1695 = D;\nvar $al1696 = L[274];\nif(R.isAR($label1690)) {\n$step1688 = $label1690.step;\n$al1696 = $label1690.from;\n$ans1695 = $label1690.ans;\n$elidedFrames1698 = $label1690.elidedFrames;\nlabel1690 = $label1690.args[0];\nopen1691 = $label1690.args[1];\nsep1692 = $label1690.args[2];\ncontents1693 = $label1690.args[3];\nclose1694 = $label1690.args[4];\nanf_arg781 = $label1690.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[274],5,$t,false);\n}\nvar label1690 = $label1690;\nvar open1691 = $open1691;\nvar sep1692 = $sep1692;\nvar contents1693 = $contents1693;\nvar close1694 = $close1694;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1695 = R.mC();\n}\nwhile(!R.isContinuation($ans1695)) {\nswitch($step1688) {\ncase 0: $step1688 = 1;\n$al1696 = L[279];\n// omitting isFunction check;\n$ans1695 = separate1670.$var.app(sep1692,contents1693);\nbreak;\ncase 1: var anf_arg533 = $ans1695;\n// caller optimization;\n$ans1695 = align1484.app(anf_arg533);\nvar anf_arg797 = $ans1695;\n$step1688 = 2;\n$al1696 = L[278];\n// omitting isFunction check;\n$ans1695 = _plus5.app(open1691,anf_arg797);\nbreak;\ncase 2: var anf_arg781 = $ans1695;\n// caller optimization;\n$ans1695 = sbreak1240.$var.app((0));\nvar anf_arg798 = $ans1695;\n$step1688 = 3;\n$al1696 = L[277];\n// omitting isFunction check;\n$ans1695 = _plus5.app(anf_arg798,close1694);\nbreak;\ncase 3: var anf_arg554 = $ans1695;\n// caller optimization;\n$ans1695 = group1265.app(anf_arg554);\nvar anf_arg555 = $ans1695;\n$step1688 = 4;\n$al1696 = L[276];\n// omitting isFunction check;\n$ans1695 = _plus5.app(anf_arg781,anf_arg555);\nbreak;\ncase 4: var anf_arg557 = $ans1695;\n// caller optimization;\n$ans1695 = align1484.app(anf_arg557);\nvar anf_arg806 = $ans1695;\n$step1688 = 5;\n$al1696 = L[275];\n// omitting isFunction check;\n$ans1695 = _plus5.app(label1690,anf_arg806);\nbreak;\ncase 5: var anf_arg808 = $ans1695;\n// caller optimization;\n$ans1695 = group1265.app(anf_arg808);\n$step1688 = 6;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1695;\ndefault: R.ffi.throwSpinnakerError(L[274],$step1688);\n}\n}\nif($step1688 !== 6) {\n$ans1695.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1696,$temp_lam1689,$step1688,[label1690,open1691,sep1692,contents1693,close1694],[anf_arg781],$elidedFrames1698);\n}\nreturn $ans1695;\n};\nvar anf_assign1700 = R.mF($temp_lam1689,\"label-align-surround\");\nlabel$align$surround1701.$var = anf_assign1700;\nR.nothing;\n$step22 = 3;\n$al90 = L[280];\nvar $obj1702 = R.builtins;\nvar $field1703 = R.gCFL($obj1702,\"trace-value\",L[280]);\nif(R.isM($field1703)) {\n$ans89 = $field1703.full_meth($obj1702,L[280],R.nothing);\n} else {\nif(typeof($field1703.app) !== \"function\") {\nR.ffi.throwNonFunApp(L[280],$field1703);\n}\n$ans89 = $field1703.app(L[280],R.nothing);\n}\nbreak;\ncase 3: var answer1713 = $ans89;\n$step22 = 4;\n$al90 = L[92];\nvar $obj1704 = R.builtins;\nvar $field1705 = R.gCFL($obj1704,\"current-checker\",L[92]);\nif(R.isM($field1705)) {\n$ans89 = $field1705.full_meth($obj1704);\n} else {\nif(typeof($field1705.app) !== \"function\") {\nR.ffi.throwNonFunApp(L[92],$field1705);\n}\n$ans89 = $field1705.app();\n}\nbreak;\ncase 4: var anf_method_obj1706 = $ans89;\n$step22 = 5;\n$ans89 = R.maybeMethodCall0(anf_method_obj1706,\"results\",L[92]);\nbreak;\ncase 5: var checks1714 = $ans89;\n$step22 = 6;\n$ans89 = R.mO({\"answer\":answer1713,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-modules\":{\"VS\":VS12},\n\"defined-values\":{\"braces\":braces1346.$var,\n\"rbrace\":rbrace1342,\n\"soft-surround\":soft$surround1648.$var,\n\"rangle\":rangle1710,\n\"is-hardline\":is$hardline350.$var,\n\"is-align\":is$align369.$var,\n\"infix-break\":infix$break1568.$var,\n\"separate\":separate1670.$var,\n\"str-squote\":str$squote1426,\n\"align\":align1484,\n\"is-if-flat\":is$if$flat365.$var,\n\"rbrack\":rbrack1361,\n\"lbrace\":lbrace1341,\n\"langle\":langle1709,\n\"parens\":parens1333.$var,\n\"squote\":squote1474.$var,\n\"if-flat\":if$flat1203,\n\"number\":number1194.$var,\n\"commabreak\":commabreak1711,\n\"brackets\":brackets1364.$var,\n\"sbreak\":sbreak1240.$var,\n\"lbrack\":lbrack1360,\n\"flow\":flow1293.$var,\n\"is-str\":is$str346.$var,\n\"semi\":semi1244,\n\"infix\":infix1549.$var,\n\"vert\":vert1311.$var,\n\"str\":str1191,\n\"semibreak\":semibreak1712,\n\"is-blank\":is$blank354.$var,\n\"mt-doc\":mt$doc1270,\n\"hang\":hang1487.$var,\n\"prefix\":prefix1533.$var,\n\"surround-separate\":surround$separate1687.$var,\n\"item\":item396.$var,\n\"blank\":blank1202,\n\"concat\":concat1708,\n\"str-dquote\":str$dquote1372,\n\"is-mt-doc\":is$mt$doc108.$var,\n\"comma\":comma1241,\n\"align-spaces\":align$spaces375.$var,\n\"is-item\":is$item394.$var,\n\"is-Item\":is$Item392.$var,\n\"is-concat\":is$concat358.$var,\n\"format\":format242.$var,\n\"dquote\":dquote1418.$var,\n\"nest\":nest1483,\n\"is-PPrintDoc\":is$PPrintDoc341.$var,\n\"is-align-spaces\":is$align$spaces373.$var,\n\"rparen\":rparen1329,\n\"is-nest\":is$nest361.$var,\n\"is-group\":is$group377.$var,\n\"collect-concats\":collect$concats409.$var,\n\"flow-map\":flow$map1273.$var,\n\"lparen\":lparen1319,\n\"surround\":surround1608.$var,\n\"group\":group1265,\n\"label-align-surround\":label$align$surround1701.$var,\n\"hardline\":hardline1237},\n\"defined-types\":{\"Item\":Item1707,\n\"PPrintDoc\":PPrintDoc231},\n\"provide-plus-types\":R.mO({\"values\":R.mO({\"mt-doc\":mt$doc1270,\n\"is-mt-doc\":is$mt$doc108.$var,\n\"str\":str1191,\n\"number\":number1194.$var,\n\"hardline\":hardline1237,\n\"blank\":blank1202,\n\"sbreak\":sbreak1240.$var,\n\"concat\":concat1708,\n\"nest\":nest1483,\n\"if-flat\":if$flat1203,\n\"group\":group1265,\n\"flow\":flow1293.$var,\n\"flow-map\":flow$map1273.$var,\n\"vert\":vert1311.$var,\n\"parens\":parens1333.$var,\n\"braces\":braces1346.$var,\n\"brackets\":brackets1364.$var,\n\"dquote\":dquote1418.$var,\n\"squote\":squote1474.$var,\n\"align\":align1484,\n\"hang\":hang1487.$var,\n\"prefix\":prefix1533.$var,\n\"infix\":infix1549.$var,\n\"infix-break\":infix$break1568.$var,\n\"separate\":separate1670.$var,\n\"surround\":surround1608.$var,\n\"soft-surround\":soft$surround1648.$var,\n\"surround-separate\":surround$separate1687.$var,\n\"label-align-surround\":label$align$surround1701.$var,\n\"lparen\":lparen1319,\n\"rparen\":rparen1329,\n\"lbrace\":lbrace1341,\n\"rbrace\":rbrace1342,\n\"lbrack\":lbrack1360,\n\"rbrack\":rbrack1361,\n\"langle\":langle1709,\n\"rangle\":rangle1710,\n\"comma\":comma1241,\n\"commabreak\":commabreak1711,\n\"semi\":semi1244,\n\"semibreak\":semibreak1712,\n\"is-PPrintDoc\":is$PPrintDoc341.$var,\n\"is-str\":is$str346.$var,\n\"is-hardline\":is$hardline350.$var,\n\"is-blank\":is$blank354.$var,\n\"is-concat\":is$concat358.$var,\n\"is-nest\":is$nest361.$var,\n\"is-if-flat\":is$if$flat365.$var,\n\"is-align\":is$align369.$var,\n\"align-spaces\":align$spaces375.$var,\n\"is-align-spaces\":is$align$spaces373.$var,\n\"is-group\":is$group377.$var,\n\"is-Item\":is$Item392.$var,\n\"item\":item396.$var,\n\"is-item\":is$item394.$var}),\n\"types\":{\"PPrintDoc\":PPrintDoc231,\n\"Item\":Item1707},\n\"modules\":{}}),\n\"checks\":checks1714});\nbreak;\ncase 6: ++R.GAS;\nreturn $ans89;\ndefault: R.ffi.throwSpinnakerError(L[283],$step22);\n}\n}\nif($step22 !== 6) {\n$ans89.stack[R.EXN_STACKHEIGHT++] = R.mAR($al90,$toplevel23,$step22,[],[is$PPrintDoc341,lbrack1360,is$align$spaces373,surround1608,hang1487,rparen1329,sbreak1240,vert1311,dquote1418,str$dquote1372,number1194,prefix1533,blank1202,is$Item392,semi1244,soft$surround1648,brackets1364,is$item394,is$group377,rbrack1361,is$if$flat365,squote1474,flow$map1273,lbrace1341,parens1333,label$align$surround1701,Item1707,concat1708,semibreak1712,is$nest361,align$spaces375,separate1670,commabreak1711,collect$concats409,infix1549,is$concat358,align1484,infix$break1568,rbrace1342,is$align369,mt$doc1270,surround$separate1687,item396,is$hardline350,braces1346,rangle1710,PPrintDoc231,format242,group1265,nest1483,hardline1237,langle1709,if$flat1203,is$mt$doc108,answer1713,is$blank354,is$str346,str$squote1426,str1191,lparen1319,flow1293,comma1241],$elidedFrames92);\n}\nreturn $ans89;\n};\nreturn R.safeCall($toplevel23,function module_load(moduleVal) {\nR.modules[\"$builtin://pprint13\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"modules":{},
"values":{"hardline":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
208,
0,
7147,
208,
35,
7182],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"label-align-surround":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
33,
2,
598,
33,
44,
640],
"definition-bind-site":["builtin://pprint",
283,
0,
9857,
285,
3,
10010],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"label-align-surround",
"typ":"tany"},
"group":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
210,
0,
7249,
210,
65,
7314],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"group",
"typ":"tany"},
"surround":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
30,
2,
504,
30,
20,
522],
"definition-bind-site":["builtin://pprint",
258,
0,
8910,
262,
3,
9160],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"surround",
"typ":"tany"},
"lparen":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
34,
2,
644,
34,
16,
658],
"definition-bind-site":["builtin://pprint",
218,
0,
7674,
218,
17,
7691],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"flow-map":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
17,
2,
260,
17,
20,
278],
"definition-bind-site":["builtin://pprint",
233,
0,
7960,
239,
3,
8127],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"flow-map",
"typ":"tany"},
"is-group":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
64,
2,
1671,
64,
72,
1741],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-group",
"typ":"tany"},
"is-nest":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
60,
2,
1334,
60,
89,
1421],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-nest",
"typ":"tany"},
"rparen":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
35,
2,
662,
35,
16,
676],
"definition-bind-site":["builtin://pprint",
219,
0,
7692,
219,
17,
7709],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-align-spaces":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
63,
2,
1594,
63,
76,
1668],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-align-spaces",
"typ":"tany"},
"is-PPrintDoc":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
54,
0,
966,
92,
3,
2986],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"nest":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
212,
0,
7409,
212,
69,
7478],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"nest",
"typ":"tany"},
"dquote":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
22,
2,
354,
22,
16,
368],
"definition-bind-site":["builtin://pprint",
247,
0,
8437,
247,
53,
8490],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"dquote",
"typ":"tany"},
"is-concat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
59,
2,
1240,
59,
93,
1331],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-concat",
"typ":"tany"},
"is-Item":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
93,
0,
2987,
95,
3,
3064],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-item":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
94,
2,
3000,
94,
62,
3060],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-item",
"typ":"tany"},
"align-spaces":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
63,
2,
1594,
63,
76,
1668],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"align-spaces",
"typ":"tany"},
"comma":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
42,
2,
788,
42,
14,
800],
"definition-bind-site":["builtin://pprint",
226,
0,
7818,
226,
16,
7834],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-mt-doc":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
55,
2,
984,
55,
57,
1039],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-mt-doc",
"typ":"tany"},
"concat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
213,
0,
7479,
213,
44,
7523],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"concat",
"typ":"tany"},
"blank":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
214,
0,
7524,
214,
45,
7569],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"blank",
"typ":"tany"},
"item":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
94,
2,
3000,
94,
62,
3060],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"item",
"typ":"tany"},
"surround-separate":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
32,
2,
558,
32,
38,
594],
"definition-bind-site":["builtin://pprint",
277,
0,
9624,
281,
3,
9855],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"surround-separate",
"typ":"tany"},
"prefix":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
26,
2,
420,
26,
16,
434],
"definition-bind-site":["builtin://pprint",
251,
0,
8584,
251,
61,
8645],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"prefix",
"typ":"tany"},
"hang":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
25,
2,
406,
25,
12,
416],
"definition-bind-site":["builtin://pprint",
250,
0,
8546,
250,
37,
8583],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":2,
"name":"hang",
"typ":"tany"},
"mt-doc":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
207,
0,
7114,
207,
32,
7146],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-blank":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
58,
2,
1170,
58,
69,
1237],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-blank",
"typ":"tany"},
"semibreak":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
45,
2,
844,
45,
22,
864],
"definition-bind-site":["builtin://pprint",
231,
0,
7930,
231,
28,
7958],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
215,
0,
7570,
215,
56,
7626],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"str",
"typ":"tany"},
"vert":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
18,
2,
282,
18,
12,
292],
"definition-bind-site":["builtin://pprint",
241,
0,
8191,
241,
61,
8252],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"vert",
"typ":"tany"},
"infix":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
27,
2,
438,
27,
14,
450],
"definition-bind-site":["builtin://pprint",
252,
0,
8646,
254,
3,
8774],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"infix",
"typ":"tany"},
"semi":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
44,
2,
830,
44,
12,
840],
"definition-bind-site":["builtin://pprint",
227,
0,
7835,
227,
15,
7850],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
56,
2,
1042,
56,
67,
1107],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-str",
"typ":"tany"},
"flow":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
16,
2,
246,
16,
12,
256],
"definition-bind-site":["builtin://pprint",
240,
0,
8128,
240,
62,
8190],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"flow",
"typ":"tany"},
"lbrack":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
38,
2,
716,
38,
16,
730],
"definition-bind-site":["builtin://pprint",
222,
0,
7746,
222,
17,
7763],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"sbreak":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
11,
2,
160,
11,
16,
174],
"definition-bind-site":["builtin://pprint",
229,
0,
7852,
229,
46,
7898],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":2,
"name":"sbreak",
"typ":"tany"},
"brackets":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
21,
2,
332,
21,
20,
350],
"definition-bind-site":["builtin://pprint",
244,
0,
8345,
244,
47,
8392],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"brackets",
"typ":"tany"},
"commabreak":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
43,
2,
804,
43,
24,
826],
"definition-bind-site":["builtin://pprint",
230,
0,
7899,
230,
30,
7929],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"number":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
8,
2,
104,
8,
16,
118],
"definition-bind-site":["builtin://pprint",
217,
0,
7628,
217,
45,
7673],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"number",
"typ":"tany"},
"if-flat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
211,
0,
7315,
211,
93,
7408],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"if-flat",
"typ":"tany"},
"squote":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
23,
2,
372,
23,
16,
386],
"definition-bind-site":["builtin://pprint",
248,
0,
8491,
248,
53,
8544],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"squote",
"typ":"tany"},
"parens":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
19,
2,
296,
19,
16,
310],
"definition-bind-site":["builtin://pprint",
242,
0,
8253,
242,
45,
8298],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"parens",
"typ":"tany"},
"langle":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
40,
2,
752,
40,
16,
766],
"definition-bind-site":["builtin://pprint",
224,
0,
7782,
224,
17,
7799],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"lbrace":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
36,
2,
680,
36,
16,
694],
"definition-bind-site":["builtin://pprint",
220,
0,
7710,
220,
17,
7727],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"rbrack":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
39,
2,
734,
39,
16,
748],
"definition-bind-site":["builtin://pprint",
223,
0,
7764,
223,
17,
7781],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-if-flat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
61,
2,
1424,
61,
96,
1518],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-if-flat",
"typ":"tany"},
"align":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
209,
0,
7183,
209,
65,
7248],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"align",
"typ":"tany"},
"separate":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
29,
2,
482,
29,
20,
500],
"definition-bind-site":["builtin://pprint",
269,
0,
9439,
276,
3,
9623],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"separate",
"typ":"tany"},
"infix-break":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
28,
2,
454,
28,
26,
478],
"definition-bind-site":["builtin://pprint",
255,
0,
8775,
257,
3,
8909],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"infix-break",
"typ":"tany"},
"is-align":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
62,
2,
1521,
62,
72,
1591],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-align",
"typ":"tany"},
"is-hardline":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
57,
2,
1110,
57,
59,
1167],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-hardline",
"typ":"tany"},
"rangle":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
41,
2,
770,
41,
16,
784],
"definition-bind-site":["builtin://pprint",
225,
0,
7800,
225,
17,
7817],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"soft-surround":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
31,
2,
526,
31,
30,
554],
"definition-bind-site":["builtin://pprint",
263,
0,
9161,
267,
3,
9437],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"soft-surround",
"typ":"tany"},
"rbrace":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
37,
2,
698,
37,
16,
712],
"definition-bind-site":["builtin://pprint",
221,
0,
7728,
221,
17,
7745],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"braces":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
20,
2,
314,
20,
16,
328],
"definition-bind-site":["builtin://pprint",
243,
0,
8299,
243,
45,
8344],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"braces",
"typ":"tany"}},
"datatypes":{"Item":["data",{"local-bind-site":["builtin://pprint",
93,
0,
2987,
95,
3,
3064],
"definition-bind-site":["builtin://pprint",
93,
0,
2987,
95,
3,
3064],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},"Item",[],[["item",
[["indent",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["is-flat",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}],["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}]],
{}]],{}],
"PPrintDoc":["data",{"local-bind-site":["builtin://pprint",
54,
0,
966,
92,
3,
2986],
"definition-bind-site":["builtin://pprint",
54,
0,
966,
92,
3,
2986],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},"PPrintDoc",[],[["mt-doc",
[["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["str",
[["s",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["hardline",
[["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["blank",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["concat",
[["fst",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["snd",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["nest",
[["indent",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["if-flat",
[["flat",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["vert",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["align",
[["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["align-spaces",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["group",
[["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}]],{"pretty":["arrow",
["tany",
"tany"],
"tany"],
"_output":["arrow",
["tany"],
"tany"],
"_plus":["arrow",
["tany",
"tany"],
"tany"]}]},
"aliases":{"Item":"tany",
"PPrintDoc":"tany"}},
"requires":[{"import-type":"builtin",
"name":"base"},
{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"lists"},
{"import-type":"builtin",
"name":"valueskeleton"}]})