({"theMap":"{\"version\":3,\"sources\":[\"builtin://pprint\"],\"names\":[\"builtin://pprint\",\",67,7,1787,67,22,1802\",\",68,12,1822,68,28,1838\",\",70,9,1864,70,26,1881\",\",70,30,1885,70,48,1903\",\",70,50,1905,70,78,1933\",\",71,32,1966,71,47,1981\",\",71,50,1984,71,66,2000\",\",71,32,1966,71,66,2000\",\",71,12,1946,71,74,2008\",\",77,24,2109,77,45,2130\",\",78,49,2180,78,63,2194\",\",78,44,2175,78,71,2202\",\",78,24,2155,78,72,2203\",\",79,26,2230,79,43,2247\",\",80,53,2301,80,67,2315\",\",80,48,2296,80,75,2323\",\",80,26,2274,80,76,2324\",\",81,62,2387,81,78,2403\",\",81,85,2410,81,101,2426\",\",81,80,2405,81,109,2434\",\",81,57,2382,81,110,2435\",\",81,34,2359,81,111,2436\",\",82,59,2496,82,78,2515\",\",82,85,2522,82,99,2536\",\",82,80,2517,82,107,2544\",\",82,54,2491,82,108,2545\",\",82,33,2470,82,109,2546\",\",83,65,2612,83,82,2629\",\",83,89,2636,83,106,2653\",\",83,84,2631,83,114,2661\",\",83,60,2607,83,115,2662\",\",83,37,2584,83,116,2663\",\",84,53,2717,84,67,2731\",\",84,48,2712,84,75,2739\",\",84,26,2690,84,76,2740\",\",85,53,2794,85,67,2808\",\",85,48,2789,85,75,2816\",\",85,26,2767,85,76,2817\",\",86,66,2884,86,80,2898\",\",86,61,2879,86,88,2906\",\",86,33,2851,86,89,2907\",\",76,4,2062,87,7,2915\",\",90,4,2957,90,23,2976\",\",54,0,966,92,3,2986\",\",55,2,984,55,57,1039\",\",56,2,1042,56,67,1107\",\",57,2,1110,57,59,1167\",\",58,2,1170,58,69,1237\",\",59,2,1240,59,93,1331\",\",60,2,1334,60,89,1421\",\",61,2,1424,61,96,1518\",\",62,2,1521,62,72,1591\",\",63,2,1594,63,76,1668\",\",64,2,1671,64,72,1741\",\",93,0,2987,95,3,3064\",\",94,2,3000,94,62,3060\",\",128,5,4378,128,18,4391\",\",129,26,4419,129,32,4425\",\",129,56,4449,129,62,4455\",\",129,34,4427,129,69,4462\",\",131,9,4481,131,23,4495\",\",131,4,4476,131,30,4502\",\",138,16,4636,138,33,4653\",\",141,14,4696,141,35,4717\",\",141,4,4686,141,36,4718\",\",144,14,4768,144,36,4790\",\",145,21,4812,145,42,4833\",\",145,16,4807,145,50,4841\",\",148,14,4888,148,36,4910\",\",151,8,5019,151,19,5030\",\",150,10,4971,152,9,5040\",\",153,6,5047,153,20,5061\",\",149,4,4915,154,7,5069\",\",157,7,5148,157,22,5163\",\",159,14,5197,159,25,5208\",\",160,10,5219,160,22,5231\",\",161,10,5242,161,23,5255\",\",162,23,5279,162,30,5286\",\",163,42,5336,163,52,5346\",\",164,74,5422,164,81,5429\",\",164,83,5431,164,93,5441\",\",164,52,5400,164,94,5442\",\",166,10,5489,166,22,5501\",\",167,18,5520,167,37,5539\",\",167,39,5541,167,49,5551\",\",169,10,5591,169,24,5605\",\",170,18,5624,170,28,5634\",\",170,30,5636,170,40,5646\",\",171,49,5697,171,67,5715\",\",171,69,5717,171,79,5727\",\",171,44,5692,171,80,5728\",\",172,56,5786,172,61,5791\",\",172,51,5781,172,68,5798\",\",172,70,5800,172,80,5810\",\",172,46,5776,172,81,5811\",\",175,12,5875,175,55,5918\",\",177,12,5947,177,27,5962\",\",178,23,5986,178,33,5996\",\",181,31,6082,181,68,6119\",\",181,70,6121,181,80,6131\",\",181,26,6077,181,81,6132\",\",184,28,6219,184,38,6229\",\",186,12,6259,186,26,6273\",\",187,20,6294,187,30,6304\",\",187,32,6306,187,42,6316\",\",190,37,6417,190,53,6433\",\",190,55,6435,190,65,6445\",\",190,32,6412,190,66,6446\",\",190,16,6396,190,67,6447\",\",191,53,6501,191,70,6518\",\",191,72,6520,191,82,6530\",\",191,48,6496,191,83,6531\",\",191,32,6480,191,84,6532\",\",192,19,6552,192,33,6566\",\",192,18,6551,192,48,6581\",\",196,33,6861,196,49,6877\",\",196,51,6879,196,61,6889\",\",196,28,6856,196,62,6890\",\",196,12,6840,196,63,6891\",\",198,33,6941,198,50,6958\",\",198,52,6960,198,62,6970\",\",198,28,6936,198,63,6971\",\",198,12,6920,198,64,6972\",\",162,6,5262,200,9,6996\",\",203,14,7025,203,18,7029\",\",203,46,7057,203,60,7071\",\",203,62,7073,203,78,7089\",\",203,35,7046,203,79,7090\",\",203,20,7031,203,80,7091\",\",203,2,7013,203,82,7093\",\",204,2,7096,204,14,7108\",\",207,16,7130,207,32,7146\",\",208,18,7165,208,35,7182\",\",209,32,7215,209,44,7227\",\",209,46,7229,209,60,7243\",\",209,23,7206,209,61,7244\",\",210,32,7281,210,44,7293\",\",210,46,7295,210,60,7309\",\",210,23,7272,210,61,7310\",\",211,54,7369,211,69,7384\",\",211,71,7386,211,88,7403\",\",211,34,7349,211,89,7404\",\",212,36,7445,212,48,7457\",\",212,50,7459,212,64,7473\",\",212,25,7434,212,65,7474\",\",213,31,7510,213,40,7519\",\",214,23,7547,214,41,7565\",\",215,28,7598,215,44,7614\",\",215,21,7591,215,52,7622\",\",217,29,7657,217,40,7668\",\",217,25,7653,217,41,7669\",\",218,9,7683,218,17,7691\",\",219,9,7701,219,17,7709\",\",220,9,7719,220,17,7727\",\",221,9,7737,221,17,7745\",\",222,9,7755,222,17,7763\",\",223,9,7773,223,17,7781\",\",224,9,7791,224,17,7799\",\",225,9,7809,225,17,7817\",\",226,8,7826,226,16,7834\",\",227,7,7842,227,15,7850\",\",229,23,7875,229,31,7883\",\",229,15,7867,229,42,7894\",\",230,21,7920,230,30,7929\",\",230,13,7912,230,30,7929\",\",231,19,7949,231,28,7958\",\",231,12,7942,231,28,7958\",\",235,7,8049,235,21,8063\",\",235,23,8065,235,30,8072\",\",236,28,8101,236,35,8108\",\",236,22,8095,236,35,8108\",\",236,16,8089,236,36,8109\",\",236,10,8083,236,36,8109\",\",234,2,7991,238,5,8123\",\",240,26,8154,240,35,8163\",\",240,17,8145,240,58,8186\",\",241,17,8208,241,57,8248\",\",242,21,8274,242,31,8284\",\",242,21,8274,242,40,8293\",\",242,15,8268,242,41,8294\",\",243,21,8320,243,31,8330\",\",243,21,8320,243,40,8339\",\",243,15,8314,243,41,8340\",\",244,23,8368,244,33,8378\",\",244,23,8368,244,42,8387\",\",244,17,8362,244,43,8388\",\",245,13,8406,245,21,8414\",\",246,13,8428,246,21,8436\",\",247,21,8458,247,35,8472\",\",247,21,8458,247,48,8485\",\",247,15,8452,247,49,8486\",\",248,21,8512,248,35,8526\",\",248,21,8512,248,48,8539\",\",248,15,8506,248,49,8540\",\",250,22,8568,250,32,8578\",\",250,16,8562,250,33,8579\",\",251,42,8626,251,51,8635\",\",251,42,8626,251,55,8639\",\",251,34,8618,251,56,8640\",\",251,30,8614,251,56,8640\",\",251,24,8608,251,57,8641\",\",253,20,8752,253,28,8760\",\",253,16,8748,253,28,8760\",\",253,16,8748,253,33,8765\",\",253,2,8734,253,38,8770\",\",256,24,8891,256,32,8899\",\",256,19,8886,256,32,8899\",\",256,19,8886,256,36,8903\",\",256,2,8869,256,38,8905\",\",259,5,9017,259,21,9033\",\",259,44,9056,259,53,9065\",\",259,44,9056,259,64,9076\",\",259,36,9048,259,65,9077\",\",259,29,9041,259,65,9077\",\",259,23,9035,259,66,9078\",\",260,29,9108,260,38,9117\",\",260,29,9108,260,49,9128\",\",260,21,9100,260,50,9129\",\",260,14,9093,260,50,9129\",\",260,53,9132,260,62,9141\",\",260,14,9093,260,62,9141\",\",260,14,9093,260,70,9149\",\",260,8,9087,260,71,9150\",\",264,5,9273,264,21,9289\",\",264,50,9318,264,59,9327\",\",264,50,9318,264,70,9338\",\",264,44,9312,264,71,9339\",\",264,36,9304,264,72,9340\",\",264,29,9297,264,72,9340\",\",264,23,9291,264,73,9341\",\",265,35,9377,265,44,9386\",\",265,35,9377,265,55,9397\",\",265,29,9371,265,56,9398\",\",265,21,9363,265,57,9399\",\",265,14,9356,265,57,9399\",\",265,66,9408,265,75,9417\",\",265,66,9408,265,83,9425\",\",265,60,9402,265,84,9426\",\",265,14,9356,265,84,9426\",\",265,8,9350,265,85,9427\",\",271,7,9534,271,19,9546\",\",272,12,9564,272,26,9578\",\",273,10,9592,273,19,9601\",\",273,10,9592,273,23,9605\",\",270,2,9487,275,5,9619\",\",278,5,9768,278,19,9782\",\",279,29,9818,279,48,9837\",\",279,8,9797,279,56,9845\",\",284,35,9953,284,58,9976\",\",284,29,9947,284,59,9977\",\",284,22,9940,284,59,9977\",\",284,68,9986,284,77,9995\",\",284,68,9986,284,85,10003\",\",284,62,9980,284,86,10004\",\",284,22,9940,284,86,10004\",\",284,16,9934,284,87,10005\",\",284,8,9926,284,87,10005\",\",284,2,9920,284,88,10006\"],\"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\":\"builtin://pprint\"}",
"theModule":"function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__283(R,NAMESPACE,M,$$underscore_import5,$$underscore_import5,$$included$127,$VS8) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"builtin://pprint\";\nvar D = R.undefined;\nvar L = [[M,66,2,1753,74,5,2032],\n[M,67,7,1787,67,16,1796],\n[M,68,12,1822,68,21,1831],\n[M,70,9,1864,70,26,1881],\n[M,70,50,1905,70,56,1911],\n[M,70,50,1905,70,78,1933],\n[M,71,12,1946,71,18,1952],\n[M,71,32,1966,71,47,1981],\n[M,71,50,1984,71,66,2000],\n[M,71,12,1946,71,74,2008],\n[M,71,32,1966,71,66,2000],\n[M,70,30,1885,70,48,1903],\n[M,68,12,1822,68,28,1838],\n[M,67,7,1787,67,22,1802],\n[M,75,2,2036,88,5,2921],\n[M,77,24,2109,77,45,2130],\n[M,77,6,2091,77,45,2130],\n[M,76,4,2062,87,7,2915],\n[M,78,24,2155,78,72,2203],\n[M,78,49,2180,78,63,2194],\n[M,78,6,2137,78,72,2203],\n[M,79,26,2230,79,43,2247],\n[M,79,6,2210,79,43,2247],\n[M,80,26,2274,80,76,2324],\n[M,80,53,2301,80,67,2315],\n[M,80,6,2254,80,76,2324],\n[M,81,34,2359,81,111,2436],\n[M,81,85,2410,81,101,2426],\n[M,81,62,2387,81,78,2403],\n[M,81,6,2331,81,111,2436],\n[M,82,33,2470,82,109,2546],\n[M,82,85,2522,82,99,2536],\n[M,82,59,2496,82,78,2515],\n[M,82,6,2443,82,109,2546],\n[M,83,37,2584,83,116,2663],\n[M,83,89,2636,83,106,2653],\n[M,83,65,2612,83,82,2629],\n[M,83,6,2553,83,116,2663],\n[M,84,26,2690,84,76,2740],\n[M,84,53,2717,84,67,2731],\n[M,84,6,2670,84,76,2740],\n[M,85,26,2767,85,76,2817],\n[M,85,53,2794,85,67,2808],\n[M,85,6,2747,85,76,2817],\n[M,86,33,2851,86,89,2907],\n[M,86,66,2884,86,80,2898],\n[M,86,6,2824,86,89,2907],\n[M,76,10,2068,76,19,2077],\n[M,89,2,2925,91,5,2982],\n[M,90,4,2957,90,10,2963],\n[M,90,4,2957,90,23,2976],\n[M,55,2,984,55,57,1039],\n[M,55,25,1007,55,31,1013],\n[M,55,49,1031,55,56,1038],\n[M,56,2,1042,56,67,1107],\n[M,56,13,1053,56,19,1059],\n[M,56,35,1075,56,41,1081],\n[M,56,59,1099,56,66,1106],\n[M,57,2,1110,57,59,1167],\n[M,57,27,1135,57,33,1141],\n[M,57,51,1159,57,58,1166],\n[M,58,2,1170,58,69,1237],\n[M,58,15,1183,58,21,1189],\n[M,58,37,1205,58,43,1211],\n[M,58,61,1229,58,68,1236],\n[M,59,2,1240,59,93,1331],\n[M,59,18,1256,59,27,1265],\n[M,59,36,1274,59,45,1283],\n[M,59,61,1299,59,67,1305],\n[M,59,85,1323,59,92,1330],\n[M,60,2,1334,60,89,1421],\n[M,60,19,1351,60,25,1357],\n[M,60,32,1364,60,41,1373],\n[M,60,57,1389,60,63,1395],\n[M,60,81,1413,60,88,1420],\n[M,61,2,1424,61,96,1518],\n[M,61,20,1442,61,29,1451],\n[M,61,39,1461,61,48,1470],\n[M,61,64,1486,61,70,1492],\n[M,61,88,1510,61,95,1517],\n[M,62,2,1521,62,72,1591],\n[M,62,15,1534,62,24,1543],\n[M,62,40,1559,62,46,1565],\n[M,62,64,1583,62,71,1590],\n[M,63,2,1594,63,76,1668],\n[M,63,22,1614,63,28,1620],\n[M,63,44,1636,63,50,1642],\n[M,63,68,1660,63,75,1667],\n[M,64,2,1671,64,72,1741],\n[M,64,15,1684,64,24,1693],\n[M,64,40,1709,64,46,1715],\n[M,64,64,1733,64,71,1740],\n[M,54,0,966,92,3,2986],\n[M,94,2,3000,94,62,3060],\n[M,94,19,3017,94,25,3023],\n[M,94,38,3036,94,45,3043],\n[M,94,52,3050,94,61,3059],\n[M,93,0,2987,95,3,3064],\n[M,127,0,4336,133,3,4512],\n[M,129,26,4419,129,32,4425],\n[M,129,56,4449,129,62,4455],\n[M,129,34,4427,129,69,4462],\n[M,134,0,4513,205,3,7112],\n[M,137,2,4602,139,5,4659],\n[M,140,2,4662,142,5,4724],\n[M,143,2,4727,146,5,4847],\n[M,147,2,4850,155,5,5075],\n[M,149,4,4915,154,7,5069],\n[M,150,10,4971,152,9,5040],\n[M,151,8,5019,151,19,5030],\n[M,156,2,5078,202,5,7010],\n[M,156,56,5132,156,63,5139],\n[M,159,14,5197,159,25,5208],\n[M,160,10,5219,160,22,5231],\n[M,161,10,5242,161,23,5255],\n[M,162,23,5279,162,30,5286],\n[M,163,42,5336,163,52,5346],\n[M,163,8,5302,163,53,5347],\n[M,162,6,5262,200,9,6996],\n[M,164,74,5422,164,81,5429],\n[M,164,83,5431,164,93,5441],\n[M,164,52,5400,164,94,5442],\n[M,164,8,5356,164,95,5443],\n[M,167,39,5541,167,49,5551],\n[M,167,18,5520,167,37,5539],\n[M,165,8,5452,167,50,5552],\n[M,170,30,5636,170,40,5646],\n[M,170,18,5624,170,28,5634],\n[M,168,8,5561,170,41,5647],\n[M,171,69,5717,171,79,5727],\n[M,171,8,5656,171,81,5729],\n[M,172,70,5800,172,80,5810],\n[M,172,56,5786,172,61,5791],\n[M,172,8,5738,172,82,5812],\n[M,175,12,5875,175,55,5918],\n[M,178,23,5986,178,33,5996],\n[M,173,8,5821,179,13,6011],\n[M,181,70,6121,181,80,6131],\n[M,180,8,6020,181,82,6133],\n[M,184,28,6219,184,38,6229],\n[M,187,32,6306,187,42,6316],\n[M,187,20,6294,187,30,6304],\n[M,182,8,6142,188,13,6331],\n[M,190,55,6435,190,65,6445],\n[M,191,72,6520,191,82,6530],\n[M,196,51,6879,196,61,6889],\n[M,198,52,6960,198,62,6970],\n[M,192,18,6551,192,48,6581],\n[M,192,19,6552,192,33,6566],\n[M,190,16,6396,190,67,6447],\n[M,191,32,6480,191,84,6532],\n[M,196,12,6840,196,63,6891],\n[M,198,12,6920,198,64,6972],\n[M,190,10,6390,199,13,6986],\n[M,189,8,6340,199,13,6986],\n[M,162,12,5268,162,21,5277],\n[M,156,24,5100,156,30,5106],\n[M,156,41,5117,156,51,5127],\n[M,203,13,7024,203,81,7092],\n[M,203,14,7025,203,18,7029],\n[M,203,46,7057,203,60,7071],\n[M,203,62,7073,203,78,7089],\n[M,204,2,7096,204,14,7108],\n[M,203,2,7013,203,82,7093],\n[M,134,25,4538,134,34,4547],\n[M,209,15,7198,209,65,7248],\n[M,209,32,7215,209,44,7227],\n[M,209,46,7229,209,60,7243],\n[M,210,15,7264,210,65,7314],\n[M,210,32,7281,210,44,7293],\n[M,210,46,7295,210,60,7309],\n[M,211,17,7332,211,93,7408],\n[M,211,54,7369,211,69,7384],\n[M,211,71,7386,211,88,7403],\n[M,212,14,7423,212,69,7478],\n[M,212,36,7445,212,48,7457],\n[M,212,50,7459,212,64,7473],\n[M,213,16,7495,213,44,7523],\n[M,213,31,7510,213,40,7519],\n[M,214,15,7539,214,45,7569],\n[M,215,13,7583,215,56,7626],\n[M,217,0,7628,217,45,7673],\n[M,217,29,7657,217,40,7668],\n[M,217,16,7644,217,22,7650],\n[M,229,0,7852,229,46,7898],\n[M,233,0,7960,239,3,8127],\n[M,234,2,7991,238,5,8123],\n[M,235,23,8065,235,30,8072],\n[M,236,10,8083,236,36,8109],\n[M,236,22,8095,236,35,8108],\n[M,236,28,8101,236,35,8108],\n[M,240,0,8128,240,62,8190],\n[M,240,37,8165,240,50,8178],\n[M,240,17,8145,240,58,8186],\n[M,241,0,8191,241,61,8252],\n[M,241,36,8227,241,49,8240],\n[M,241,17,8208,241,57,8248],\n[M,242,0,8253,242,45,8298],\n[M,242,21,8274,242,40,8293],\n[M,242,21,8274,242,31,8284],\n[M,243,0,8299,243,45,8344],\n[M,243,21,8320,243,40,8339],\n[M,243,21,8320,243,31,8330],\n[M,244,0,8345,244,47,8392],\n[M,244,23,8368,244,42,8387],\n[M,244,23,8368,244,33,8378],\n[M,247,0,8437,247,53,8490],\n[M,247,21,8458,247,48,8485],\n[M,247,21,8458,247,35,8472],\n[M,248,0,8491,248,53,8544],\n[M,248,21,8512,248,48,8539],\n[M,248,21,8512,248,35,8526],\n[M,250,0,8546,250,37,8583],\n[M,251,0,8584,251,61,8645],\n[M,251,30,8614,251,56,8640],\n[M,251,42,8626,251,55,8639],\n[M,252,0,8646,254,3,8774],\n[M,253,2,8734,253,38,8770],\n[M,253,16,8748,253,33,8765],\n[M,253,16,8748,253,28,8760],\n[M,252,15,8661,252,21,8667],\n[M,252,28,8674,252,34,8680],\n[M,252,42,8688,252,51,8697],\n[M,252,58,8704,252,67,8713],\n[M,252,74,8720,252,83,8729],\n[M,255,0,8775,257,3,8909],\n[M,256,2,8869,256,38,8905],\n[M,256,19,8886,256,36,8903],\n[M,256,19,8886,256,32,8899],\n[M,255,21,8796,255,27,8802],\n[M,255,34,8809,255,40,8815],\n[M,255,48,8823,255,57,8832],\n[M,255,64,8839,255,73,8848],\n[M,255,80,8855,255,89,8864],\n[M,258,0,8910,262,3,9160],\n[M,259,29,9041,259,65,9077],\n[M,259,44,9056,259,64,9076],\n[M,260,14,9093,260,70,9149],\n[M,260,14,9093,260,62,9141],\n[M,260,14,9093,260,50,9129],\n[M,260,29,9108,260,49,9128],\n[M,258,18,8928,258,24,8934],\n[M,258,31,8941,258,37,8947],\n[M,258,47,8957,258,56,8966],\n[M,258,70,8980,258,79,8989],\n[M,258,90,9000,258,99,9009],\n[M,263,0,9161,267,3,9437],\n[M,264,29,9297,264,72,9340],\n[M,264,50,9318,264,70,9338],\n[M,265,14,9356,265,84,9426],\n[M,265,66,9408,265,83,9425],\n[M,265,14,9356,265,57,9399],\n[M,265,35,9377,265,55,9397],\n[M,263,23,9184,263,29,9190],\n[M,263,36,9197,263,42,9203],\n[M,263,52,9213,263,61,9222],\n[M,263,75,9236,263,84,9245],\n[M,263,95,9256,263,104,9265],\n[M,269,0,9439,276,3,9623],\n[M,270,2,9487,275,5,9619],\n[M,273,10,9592,273,23,9605],\n[M,273,10,9592,273,19,9601],\n[M,269,20,9459,269,29,9468],\n[M,269,39,9478,269,43,9482],\n[M,277,0,9624,281,3,9855],\n[M,279,8,9797,279,56,9845],\n[M,279,29,9818,279,48,9837],\n[M,277,27,9651,277,33,9657],\n[M,277,40,9664,277,46,9670],\n[M,277,56,9680,277,65,9689],\n[M,277,75,9699,277,84,9708],\n[M,277,93,9717,277,102,9726],\n[M,277,113,9737,277,122,9746],\n[M,277,132,9756,277,136,9760],\n[M,283,0,9857,285,3,10010],\n[M,284,8,9926,284,87,10005],\n[M,284,22,9940,284,86,10004],\n[M,284,68,9986,284,85,10003],\n[M,284,22,9940,284,59,9977],\n[M,284,35,9953,284,58,9976],\n[\"dummy location\"],\n[M,231,12,7942,231,28,7958],\n[M,230,13,7912,230,30,7929],\n[M,3,0,13,342,3,11598]];\nvar $type$Nothing1 = R.getModuleField(\"builtin://global\",\"types\",\"Nothing\");\nvar string$length1 = R.getModuleField(\"builtin://global\",\"values\",\"string-length\");\nvar raise1 = R.getModuleField(\"builtin://global\",\"values\",\"raise\");\nvar tostring1 = R.getModuleField(\"builtin://global\",\"values\",\"tostring\");\nvar nothing2 = R.getModuleField(\"builtin://global\",\"values\",\"nothing\");\nvar builtins1 = R.getModuleField(\"builtin://global\",\"values\",\"builtins\");\nvar _minus9 = R.getModuleField(\"builtin://global\",\"values\",\"_minus\");\nvar $type$Number3 = R.getModuleField(\"builtin://global\",\"types\",\"Number\");\nvar string$repeat1 = R.getModuleField(\"builtin://global\",\"values\",\"string-repeat\");\nvar _greaterequal2 = R.getModuleField(\"builtin://global\",\"values\",\"_greaterequal\");\nvar _plus5 = R.getModuleField(\"builtin://global\",\"values\",\"_plus\");\nvar $type$Boolean6 = R.getModuleField(\"builtin://global\",\"types\",\"Boolean\");\nvar $type$String8 = R.getModuleField(\"builtin://global\",\"types\",\"String\");\nvar $underscore_import9 = $$underscore_import5;\nvar $underscore_import13 = $$underscore_import5;\nvar $included$110 = $$included$127;\nvar VS11 = $VS8;\nvar $cases_dispatch1451 = {\"mt-doc\":6,\n\"concat\":7,\n\"str\":9,\n\"blank\":11,\n\"align\":13,\n\"nest\":14,\n\"hardline\":16,\n\"if-flat\":19,\n\"align-spaces\":23,\n\"group\":27};\nvar $cases_dispatch342 = {\"mt-doc\":2,\n\"str\":3,\n\"hardline\":5,\n\"blank\":6,\n\"concat\":8,\n\"nest\":11,\n\"if-flat\":14,\n\"group\":17,\n\"align\":19,\n\"align-spaces\":21};\nvar empty2 = R.getModuleField(\"builtin://lists\",\"values\",\"empty\");\nvar is$empty3 = R.getModuleField(\"builtin://lists\",\"values\",\"is-empty\");\nvar fold4 = R.getModuleField(\"builtin://lists\",\"values\",\"fold\");\nvar List5 = R.getModuleField(\"builtin://lists\",\"types\",\"List\");\nvar link6 = R.getModuleField(\"builtin://lists\",\"values\",\"link\");\nvar list8 = R.getModuleField(\"builtin://lists\",\"values\",\"list\");\nvar $toplevel26 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__283($$resumer13) {\nvar $step25 = 0;\nvar $elidedFrames111 = 0;\nvar $ans108 = D;\nvar $al109 = L[283];\nif(R.isAR($$resumer13)) {\n$step25 = $$resumer13.step;\n$al109 = $$resumer13.from;\n$ans108 = $$resumer13.ans;\n$elidedFrames111 = $$resumer13.elidedFrames;\n$resumer13 = $$resumer13.args[0];\ndquote1745 = $$resumer13.vars[0];\nblank1594 = $$resumer13.vars[1];\nvert1694 = $$resumer13.vars[2];\nis$group492 = $$resumer13.vars[3];\nrparen1703 = $$resumer13.vars[4];\nsoft$surround1853 = $$resumer13.vars[5];\nis$PPrintDoc454 = $$resumer13.vars[6];\nstr1583 = $$resumer13.vars[7];\nprefix1786 = $$resumer13.vars[8];\nflow1673 = $$resumer13.vars[9];\nis$align$spaces487 = $$resumer13.vars[10];\nalign$spaces490 = $$resumer13.vars[11];\ncomma1601 = $$resumer13.vars[12];\ncollect$concats523 = $$resumer13.vars[13];\nis$concat472 = $$resumer13.vars[14];\nis$align483 = $$resumer13.vars[15];\nsbreak1600 = $$resumer13.vars[16];\nnumber1586 = $$resumer13.vars[17];\nsemi1602 = $$resumer13.vars[18];\nstr$dquote1742 = $$resumer13.vars[19];\nis$if$flat479 = $$resumer13.vars[20];\nsurround$separate1891 = $$resumer13.vars[21];\nis$item510 = $$resumer13.vars[22];\nbrackets1734 = $$resumer13.vars[23];\nItem1907 = $$resumer13.vars[24];\nrbrack1730 = $$resumer13.vars[25];\nconcat1908 = $$resumer13.vars[26];\nsemibreak1912 = $$resumer13.vars[27];\ninfix1802 = $$resumer13.vars[28];\ncommabreak1911 = $$resumer13.vars[29];\nflow$map1654 = $$resumer13.vars[30];\nis$nest475 = $$resumer13.vars[31];\nsquote1757 = $$resumer13.vars[32];\nlbrack1729 = $$resumer13.vars[33];\nlabel$align$surround1905 = $$resumer13.vars[34];\nseparate1874 = $$resumer13.vars[35];\nhardline1596 = $$resumer13.vars[36];\nlbrace1715 = $$resumer13.vars[37];\nis$Item507 = $$resumer13.vars[38];\nparens1706 = $$resumer13.vars[39];\nis$mt$doc125 = $$resumer13.vars[40];\nis$hardline463 = $$resumer13.vars[41];\nif$flat1595 = $$resumer13.vars[42];\nbraces1721 = $$resumer13.vars[43];\ninfix$break1816 = $$resumer13.vars[44];\nmt$doc1650 = $$resumer13.vars[45];\nalign1767 = $$resumer13.vars[46];\nrangle1910 = $$resumer13.vars[47];\nitem511 = $$resumer13.vars[48];\nPPrintDoc343 = $$resumer13.vars[49];\nformat354 = $$resumer13.vars[50];\nstr$squote1754 = $$resumer13.vars[51];\nsurround1833 = $$resumer13.vars[52];\nrbrace1716 = $$resumer13.vars[53];\nlangle1909 = $$resumer13.vars[54];\nlparen1702 = $$resumer13.vars[55];\ngroup1645 = $$resumer13.vars[56];\nanswer1913 = $$resumer13.vars[57];\nis$str459 = $$resumer13.vars[58];\nhang1771 = $$resumer13.vars[59];\nis$blank468 = $$resumer13.vars[60];\nnest1766 = $$resumer13.vars[61];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans108 = R.mC();\n}\nwhile(!R.isContinuation($ans108)) {\nswitch($step25) {\ncase 0: var PPrintDoc112 = R.nB(\"PPrintDoc\",L[92]);\nvar PPrintDoc343 = R.mBA(PPrintDoc112,\"PPrintDoc\");\nvar Item113 = R.nB(\"Item\",L[97]);\nvar Item1907 = R.mBA(Item113,\"Item\");\nvar PPrintDoc452 = {\"$var\":D};\nvar is$PPrintDoc454 = {\"$var\":D};\nvar is$mt$doc125 = {\"$var\":D};\nvar mt$doc457 = {\"$var\":D};\nvar is$str459 = {\"$var\":D};\nvar str461 = {\"$var\":D};\nvar is$hardline463 = {\"$var\":D};\nvar hardline465 = {\"$var\":D};\nvar is$blank468 = {\"$var\":D};\nvar blank470 = {\"$var\":D};\nvar is$concat472 = {\"$var\":D};\nvar concat128 = {\"$var\":D};\nvar is$nest475 = {\"$var\":D};\nvar nest477 = {\"$var\":D};\nvar is$if$flat479 = {\"$var\":D};\nvar if$flat481 = {\"$var\":D};\nvar is$align483 = {\"$var\":D};\nvar align485 = {\"$var\":D};\nvar is$align$spaces487 = {\"$var\":D};\nvar align$spaces490 = {\"$var\":D};\nvar is$group492 = {\"$var\":D};\nvar group494 = {\"$var\":D};\nvar Item505 = {\"$var\":D};\nvar is$Item507 = {\"$var\":D};\nvar is$item510 = {\"$var\":D};\nvar item511 = {\"$var\":D};\nvar collect$concats523 = {\"$var\":D};\nvar format354 = {\"$var\":D};\nvar $temp_full118 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__0($self169,$other119) {\nvar $step117 = 0;\nvar $elidedFrames124 = 0;\nvar $ans121 = D;\nvar $al122 = L[0];\nif(R.isAR($self169)) {\n$step117 = $self169.step;\n$al122 = $self169.from;\n$ans121 = $self169.ans;\n$elidedFrames124 = $self169.elidedFrames;\nself169 = $self169.args[0];\nother119 = $self169.args[1];\nanf_fun131 = $self169.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[0],2,$t,true);\n}\nvar self169 = $self169;\nvar other119 = $other119;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans121 = R.mC();\n}\nwhile(!R.isContinuation($ans121)) {\nswitch($step117) {\ncase 0: var anf_fun126 = is$mt$doc125.$var === D?U(L[1],\"is-mt-doc\"):is$mt$doc125.$var;\n$step117 = 1;\n$al122 = L[13];\nif(typeof(anf_fun126.app) !== \"function\") {\nR.ffi.throwNonFunApp($al122,anf_fun126);\n}\n$ans121 = anf_fun126.app(self169);\nbreak;\ncase 1: var anf_if146 = $ans121;\n$step117 = R.checkPyretTrue(anf_if146)?2:3;\nbreak;\ncase 2: $step117 = 13;\n$ans121 = other119;\nbreak;\ncase 3: var anf_fun127 = is$mt$doc125.$var === D?U(L[2],\"is-mt-doc\"):is$mt$doc125.$var;\n$step117 = 4;\n$al122 = L[12];\nif(typeof(anf_fun127.app) !== \"function\") {\nR.ffi.throwNonFunApp($al122,anf_fun127);\n}\n$ans121 = anf_fun127.app(other119);\nbreak;\ncase 4: var anf_if145 = $ans121;\n$step117 = R.checkPyretTrue(anf_if145)?5:6;\nbreak;\ncase 5: $step117 = 13;\n$ans121 = self169;\nbreak;\ncase 6: $al122 = L[3];\nvar anf_if144 = G(self169,\"has-hardline\",L[3]);\n$step117 = R.checkPyretTrue(anf_if144)?7:8;\nbreak;\ncase 7: $step117 = 9;\n$ans121 = (true);\nbreak;\ncase 8: $al122 = L[11];\nvar anf_arg143 = G(other119,\"has-hardline\",L[11]);\n$ans121 = R.checkWrapBoolean(anf_arg143);\n$step117 = 9;\nbreak;\ncase 9: var anf_if132 = $ans121;\n$step117 = R.checkPyretTrue(anf_if132)?10:11;\nbreak;\ncase 10: var anf_fun129 = concat128.$var === D?U(L[4],\"concat\"):concat128.$var;\n$step117 = 13;\n$al122 = L[5];\nif(typeof(anf_fun129.app) !== \"function\") {\nR.ffi.throwNonFunApp($al122,anf_fun129);\n}\n$ans121 = anf_fun129.app(self169,other119,(0),(true));\nbreak;\ncase 11: var anf_fun131 = concat128.$var === D?U(L[6],\"concat\"):concat128.$var;\n$al122 = L[7];\nvar anf_arg185 = G(self169,\"flat-width\",L[7]);\n$al122 = L[8];\nvar anf_arg676 = G(other119,\"flat-width\",L[8]);\n$step117 = 12;\n$al122 = L[10];\n// omitting isFunction check;\n$ans121 = _plus5.app(anf_arg185,anf_arg676);\nbreak;\ncase 12: var anf_arg677 = $ans121;\n$step117 = 13;\n$al122 = L[9];\nif(typeof(anf_fun131.app) !== \"function\") {\nR.ffi.throwNonFunApp($al122,anf_fun131);\n}\n$ans121 = anf_fun131.app(self169,other119,anf_arg677,(false));\nbreak;\ncase 13: ++R.GAS;\nreturn $ans121;\ndefault: R.ffi.throwSpinnakerError(L[0],$step117);\n}\n}\nif($step117 !== 13) {\n$ans121.stack[R.EXN_STACKHEIGHT++] = R.mAR($al122,$temp_full118,$step117,[self169,other119],[anf_fun131],$elidedFrames124);\n}\nreturn $ans121;\n};\nvar anf_shared358 = R.makeMethod1($temp_full118,\"_plus\");\nvar $temp_full153 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__14($self189) {\nvar $step152 = 0;\nvar $elidedFrames159 = 0;\nvar $ans156 = D;\nvar $al157 = L[14];\nif(R.isAR($self189)) {\n$step152 = $self189.step;\n$al157 = $self189.from;\n$ans156 = $self189.ans;\n$elidedFrames159 = $self189.elidedFrames;\nself189 = $self189.args[0];\nsnd188 = $self189.vars[0];\nanf_arg201 = $self189.vars[1];\nanf_arg202 = $self189.vars[2];\nanf_arg735 = $self189.vars[3];\nvert213 = $self189.vars[4];\ncases160 = $self189.vars[5];\nd194 = $self189.vars[6];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[14],1,$t,true);\n}\nvar self189 = $self189;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans156 = R.mC();\n}\nwhile(!R.isContinuation($ans156)) {\nswitch($step152) {\ncase 0: var cases160 = self189;\n$step152 = 1;\n$al157 = L[47];\nvar $ann$check344 = R._cA(L[47],PPrintDoc343,cases160);\nif(R.isContinuation($ann$check344)) {\n$ans156 = $ann$check344;\n}\nbreak;\ncase 1: $al157 = L[17];\n$step152 = $cases_dispatch342[cases160.$name] || 23;\nbreak;\ncase 2: if(cases160.$arity !== 2) {\nif(cases160.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[16],2,cases160.$arity,L[17],cases160.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[16],true,L[17],cases160.$loc);\n}\n}\nvar $fn162 = cases160.$constructor.$fieldNames;\nR.dF(cases160.dict[$fn162[0]],cases160.$mut_fields_mask[0],false);\nR.dF(cases160.dict[$fn162[1]],cases160.$mut_fields_mask[1],false);\n$step152 = 24;\n$al157 = L[15];\nif(typeof(VS11.dict.values.dict[\"vs-str\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-str\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-str\"].app((\"EmptyDoc\"));\nbreak;\ncase 3: if(cases160.$arity !== 3) {\nif(cases160.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[20],3,cases160.$arity,L[17],cases160.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[20],true,L[17],cases160.$loc);\n}\n}\nvar $fn173 = cases160.$constructor.$fieldNames;\nvar s165 = R.dF(cases160.dict[$fn173[0]],cases160.$mut_fields_mask[0],false);\nR.dF(cases160.dict[$fn173[1]],cases160.$mut_fields_mask[1],false);\nR.dF(cases160.dict[$fn173[2]],cases160.$mut_fields_mask[2],false);\n$step152 = 4;\n$al157 = L[19];\nif(typeof(VS11.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-value\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-value\"].app(s165);\nbreak;\ncase 4: var anf_arg169 = $ans156;\n// caller optimization;\n$ans156 = link6.app(anf_arg169,empty2);\nvar anf_arg689 = $ans156;\n$step152 = 24;\n$al157 = L[18];\nif(typeof(VS11.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-constr\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-constr\"].app((\"Str\"),anf_arg689);\nbreak;\ncase 5: if(cases160.$arity !== 2) {\nif(cases160.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[22],2,cases160.$arity,L[17],cases160.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[22],true,L[17],cases160.$loc);\n}\n}\nvar $fn179 = cases160.$constructor.$fieldNames;\nR.dF(cases160.dict[$fn179[0]],cases160.$mut_fields_mask[0],false);\nR.dF(cases160.dict[$fn179[1]],cases160.$mut_fields_mask[1],false);\n$step152 = 24;\n$al157 = L[21];\nif(typeof(VS11.dict.values.dict[\"vs-str\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-str\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-str\"].app((\"CRLF\"));\nbreak;\ncase 6: if(cases160.$arity !== 3) {\nif(cases160.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[25],3,cases160.$arity,L[17],cases160.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[25],true,L[17],cases160.$loc);\n}\n}\nvar $fn184 = cases160.$constructor.$fieldNames;\nvar n182 = R.dF(cases160.dict[$fn184[0]],cases160.$mut_fields_mask[0],false);\nR.dF(cases160.dict[$fn184[1]],cases160.$mut_fields_mask[1],false);\nR.dF(cases160.dict[$fn184[2]],cases160.$mut_fields_mask[2],false);\n$step152 = 7;\n$al157 = L[24];\nif(typeof(VS11.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-value\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-value\"].app(n182);\nbreak;\ncase 7: var anf_arg690 = $ans156;\n// caller optimization;\n$ans156 = link6.app(anf_arg690,empty2);\nvar anf_arg204 = $ans156;\n$step152 = 24;\n$al157 = L[23];\nif(typeof(VS11.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-constr\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-constr\"].app((\"Blank\"),anf_arg204);\nbreak;\ncase 8: if(cases160.$arity !== 4) {\nif(cases160.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[29],4,cases160.$arity,L[17],cases160.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[29],true,L[17],cases160.$loc);\n}\n}\nvar $fn190 = cases160.$constructor.$fieldNames;\nvar fst187 = R.dF(cases160.dict[$fn190[0]],cases160.$mut_fields_mask[0],false);\nvar snd188 = R.dF(cases160.dict[$fn190[1]],cases160.$mut_fields_mask[1],false);\nR.dF(cases160.dict[$fn190[2]],cases160.$mut_fields_mask[2],false);\nR.dF(cases160.dict[$fn190[3]],cases160.$mut_fields_mask[3],false);\n$step152 = 9;\n$al157 = L[28];\nif(typeof(VS11.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-value\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-value\"].app(fst187);\nbreak;\ncase 9: var anf_arg201 = $ans156;\n$step152 = 10;\n$al157 = L[27];\nif(typeof(VS11.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-value\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-value\"].app(snd188);\nbreak;\ncase 10: var anf_arg703 = $ans156;\n// caller optimization;\n$ans156 = link6.app(anf_arg703,empty2);\nvar anf_arg704 = $ans156;\n// caller optimization;\n$ans156 = link6.app(anf_arg201,anf_arg704);\nvar anf_arg205 = $ans156;\n$step152 = 24;\n$al157 = L[26];\nif(typeof(VS11.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-constr\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-constr\"].app((\"Concat\"),anf_arg205);\nbreak;\ncase 11: if(cases160.$arity !== 4) {\nif(cases160.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[33],4,cases160.$arity,L[17],cases160.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[33],true,L[17],cases160.$loc);\n}\n}\nvar $fn209 = cases160.$constructor.$fieldNames;\nvar indent193 = R.dF(cases160.dict[$fn209[0]],cases160.$mut_fields_mask[0],false);\nvar d194 = R.dF(cases160.dict[$fn209[1]],cases160.$mut_fields_mask[1],false);\nR.dF(cases160.dict[$fn209[2]],cases160.$mut_fields_mask[2],false);\nR.dF(cases160.dict[$fn209[3]],cases160.$mut_fields_mask[3],false);\n$step152 = 12;\n$al157 = L[32];\nif(typeof(VS11.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-value\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-value\"].app(indent193);\nbreak;\ncase 12: var anf_arg202 = $ans156;\n$step152 = 13;\n$al157 = L[31];\nif(typeof(VS11.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-value\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-value\"].app(d194);\nbreak;\ncase 13: var anf_arg718 = $ans156;\n// caller optimization;\n$ans156 = link6.app(anf_arg718,empty2);\nvar anf_arg719 = $ans156;\n// caller optimization;\n$ans156 = link6.app(anf_arg202,anf_arg719);\nvar anf_arg207 = $ans156;\n$step152 = 24;\n$al157 = L[30];\nif(typeof(VS11.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-constr\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-constr\"].app((\"Nest\"),anf_arg207);\nbreak;\ncase 14: if(cases160.$arity !== 4) {\nif(cases160.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[37],4,cases160.$arity,L[17],cases160.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[37],true,L[17],cases160.$loc);\n}\n}\nvar $fn227 = cases160.$constructor.$fieldNames;\nvar flat212 = R.dF(cases160.dict[$fn227[0]],cases160.$mut_fields_mask[0],false);\nvar vert213 = R.dF(cases160.dict[$fn227[1]],cases160.$mut_fields_mask[1],false);\nR.dF(cases160.dict[$fn227[2]],cases160.$mut_fields_mask[2],false);\nR.dF(cases160.dict[$fn227[3]],cases160.$mut_fields_mask[3],false);\n$step152 = 15;\n$al157 = L[36];\nif(typeof(VS11.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-value\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-value\"].app(flat212);\nbreak;\ncase 15: var anf_arg735 = $ans156;\n$step152 = 16;\n$al157 = L[35];\nif(typeof(VS11.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-value\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-value\"].app(vert213);\nbreak;\ncase 16: var anf_arg736 = $ans156;\n// caller optimization;\n$ans156 = link6.app(anf_arg736,empty2);\nvar anf_arg219 = $ans156;\n// caller optimization;\n$ans156 = link6.app(anf_arg735,anf_arg219);\nvar anf_arg220 = $ans156;\n$step152 = 24;\n$al157 = L[34];\nif(typeof(VS11.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-constr\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-constr\"].app((\"IfFlat\"),anf_arg220);\nbreak;\ncase 17: if(cases160.$arity !== 3) {\nif(cases160.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[40],3,cases160.$arity,L[17],cases160.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[40],true,L[17],cases160.$loc);\n}\n}\nvar $fn232 = cases160.$constructor.$fieldNames;\nvar d230 = R.dF(cases160.dict[$fn232[0]],cases160.$mut_fields_mask[0],false);\nR.dF(cases160.dict[$fn232[1]],cases160.$mut_fields_mask[1],false);\nR.dF(cases160.dict[$fn232[2]],cases160.$mut_fields_mask[2],false);\n$step152 = 18;\n$al157 = L[39];\nif(typeof(VS11.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-value\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-value\"].app(d230);\nbreak;\ncase 18: var anf_arg745 = $ans156;\n// caller optimization;\n$ans156 = link6.app(anf_arg745,empty2);\nvar anf_arg746 = $ans156;\n$step152 = 24;\n$al157 = L[38];\nif(typeof(VS11.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-constr\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-constr\"].app((\"Group\"),anf_arg746);\nbreak;\ncase 19: if(cases160.$arity !== 3) {\nif(cases160.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[43],3,cases160.$arity,L[17],cases160.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[43],true,L[17],cases160.$loc);\n}\n}\nvar $fn259 = cases160.$constructor.$fieldNames;\nvar d235 = R.dF(cases160.dict[$fn259[0]],cases160.$mut_fields_mask[0],false);\nR.dF(cases160.dict[$fn259[1]],cases160.$mut_fields_mask[1],false);\nR.dF(cases160.dict[$fn259[2]],cases160.$mut_fields_mask[2],false);\n$step152 = 20;\n$al157 = L[42];\nif(typeof(VS11.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-value\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-value\"].app(d235);\nbreak;\ncase 20: var anf_arg747 = $ans156;\n// caller optimization;\n$ans156 = link6.app(anf_arg747,empty2);\nvar anf_arg257 = $ans156;\n$step152 = 24;\n$al157 = L[41];\nif(typeof(VS11.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-constr\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-constr\"].app((\"Align\"),anf_arg257);\nbreak;\ncase 21: if(cases160.$arity !== 3) {\nif(cases160.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[46],3,cases160.$arity,L[17],cases160.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[46],true,L[17],cases160.$loc);\n}\n}\nvar $fn339 = cases160.$constructor.$fieldNames;\nvar n262 = R.dF(cases160.dict[$fn339[0]],cases160.$mut_fields_mask[0],false);\nR.dF(cases160.dict[$fn339[1]],cases160.$mut_fields_mask[1],false);\nR.dF(cases160.dict[$fn339[2]],cases160.$mut_fields_mask[2],false);\n$step152 = 22;\n$al157 = L[45];\nif(typeof(VS11.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-value\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-value\"].app(n262);\nbreak;\ncase 22: var anf_arg337 = $ans156;\n// caller optimization;\n$ans156 = link6.app(anf_arg337,empty2);\nvar anf_arg757 = $ans156;\n$step152 = 24;\n$al157 = L[44];\nif(typeof(VS11.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al157,VS11.dict.values.dict[\"vs-constr\"]);\n}\n$ans156 = VS11.dict.values.dict[\"vs-constr\"].app((\"AlignSpaces\"),anf_arg757);\nbreak;\ncase 23: $ans156 = R.throwNoCasesMatched(L[17],cases160);\n$step152 = 24;\nbreak;\ncase 24: ++R.GAS;\nreturn $ans156;\ndefault: R.ffi.throwSpinnakerError(L[14],$step152);\n}\n}\nif($step152 !== 24) {\n$ans156.stack[R.EXN_STACKHEIGHT++] = R.mAR($al157,$temp_full153,$step152,[self189],[snd188,anf_arg201,anf_arg202,anf_arg735,vert213,cases160,d194],$elidedFrames159);\n}\nreturn $ans156;\n};\nvar anf_shared359 = R.makeMethod0($temp_full153,\"_output\");\nvar $temp_full348 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__48($self351,$width349) {\nvar $step347 = 0;\nvar $elidedFrames353 = 0;\nvar $ans350 = D;\nvar $al351 = L[48];\nif(R.isAR($self351)) {\n$step347 = $self351.step;\n$al351 = $self351.from;\n$ans350 = $self351.ans;\n$elidedFrames353 = $self351.elidedFrames;\nself351 = $self351.args[0];\nwidth349 = $self351.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[48],2,$t,true);\n}\nvar self351 = $self351;\nvar width349 = $width349;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans350 = R.mC();\n}\nwhile(!R.isContinuation($ans350)) {\nswitch($step347) {\ncase 0: var anf_fun356 = format354.$var === D?U(L[49],\"format\"):format354.$var;\n$step347 = 1;\n$al351 = L[50];\nif(typeof(anf_fun356.app) !== \"function\") {\nR.ffi.throwNonFunApp($al351,anf_fun356);\n}\n$ans350 = anf_fun356.app(width349,self351);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans350;\ndefault: R.ffi.throwSpinnakerError(L[48],$step347);\n}\n}\nif($step347 !== 1) {\n$ans350.stack[R.EXN_STACKHEIGHT++] = R.mAR($al351,$temp_full348,$step347,[self351,width349],[],$elidedFrames353);\n}\nreturn $ans350;\n};\nvar anf_shared360 = R.makeMethod1($temp_full348,\"pretty\");\nvar $mt$doc_getfields365 = function singleton_variant(f) {\nreturn f(this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $mt$doc_mutablemask364 = [false,false];\nvar $mt$doc$base361 = {\"$fieldNames\":[\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared358,\n\"_output\":anf_shared359,\n\"pretty\":anf_shared360,\n\"_match\":R.mM(\"mt-doc\",2)};\nvar $mt$doc$brander362 = R.nB(\"mt-doc\",L[51]);\nvar $mt$doc$brands363 = {};\n$mt$doc$brands363[PPrintDoc112._brand] = true;\n$mt$doc$brands363[$mt$doc$brander362._brand] = true;\nvar mt$doc366 = R.mVC(L[51],function $synthesizedConstructor_$mt$doc$base() {\nreturn [$type$Number3,$type$Boolean6];\n},[\"flat$width367\",\"has$hardline368\"],[L[52],L[53]],[false,false],[\"flat$width367\",\"has$hardline368\"],$mt$doc_mutablemask364,$mt$doc$base361,$mt$doc$brands363,\"mt-doc\",$mt$doc_getfields365,$mt$doc$base361);\nvar $str_getfields373 = function singleton_variant(f) {\nreturn f(this.dict[\"s\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $str_mutablemask372 = [false,false,false];\nvar $str$base369 = {\"$fieldNames\":[\"s\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared358,\n\"_output\":anf_shared359,\n\"pretty\":anf_shared360,\n\"_match\":R.mM(\"str\",3)};\nvar $str$brander370 = R.nB(\"str\",L[54]);\nvar $str$brands371 = {};\n$str$brands371[PPrintDoc112._brand] = true;\n$str$brands371[$str$brander370._brand] = true;\nvar str374 = R.mVC(L[54],function $synthesizedConstructor_$str$base() {\nreturn [$type$String8,$type$Number3,$type$Boolean6];\n},[\"s375\",\"flat$width376\",\"has$hardline377\"],[L[55],L[56],L[57]],[false,false,false],[\"s375\",\"flat$width376\",\"has$hardline377\"],$str_mutablemask372,$str$base369,$str$brands371,\"str\",$str_getfields373,$str$base369);\nvar $hardline_getfields382 = function singleton_variant(f) {\nreturn f(this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $hardline_mutablemask381 = [false,false];\nvar $hardline$base378 = {\"$fieldNames\":[\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared358,\n\"_output\":anf_shared359,\n\"pretty\":anf_shared360,\n\"_match\":R.mM(\"hardline\",2)};\nvar $hardline$brander379 = R.nB(\"hardline\",L[58]);\nvar $hardline$brands380 = {};\n$hardline$brands380[PPrintDoc112._brand] = true;\n$hardline$brands380[$hardline$brander379._brand] = true;\nvar hardline383 = R.mVC(L[58],function $synthesizedConstructor_$hardline$base() {\nreturn [$type$Number3,$type$Boolean6];\n},[\"flat$width384\",\"has$hardline385\"],[L[59],L[60]],[false,false],[\"flat$width384\",\"has$hardline385\"],$hardline_mutablemask381,$hardline$base378,$hardline$brands380,\"hardline\",$hardline_getfields382,$hardline$base378);\nvar $blank_getfields390 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $blank_mutablemask389 = [false,false,false];\nvar $blank$base386 = {\"$fieldNames\":[\"n\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared358,\n\"_output\":anf_shared359,\n\"pretty\":anf_shared360,\n\"_match\":R.mM(\"blank\",3)};\nvar $blank$brander387 = R.nB(\"blank\",L[61]);\nvar $blank$brands388 = {};\n$blank$brands388[PPrintDoc112._brand] = true;\n$blank$brands388[$blank$brander387._brand] = true;\nvar blank391 = R.mVC(L[61],function $synthesizedConstructor_$blank$base() {\nreturn [$type$Number3,$type$Number3,$type$Boolean6];\n},[\"n392\",\"flat$width393\",\"has$hardline394\"],[L[62],L[63],L[64]],[false,false,false],[\"n392\",\"flat$width393\",\"has$hardline394\"],$blank_mutablemask389,$blank$base386,$blank$brands388,\"blank\",$blank_getfields390,$blank$base386);\nvar $concat_getfields399 = function singleton_variant(f) {\nreturn f(this.dict[\"fst\"],this.dict[\"snd\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $concat_mutablemask398 = [false,false,false,false];\nvar $concat$base395 = {\"$fieldNames\":[\"fst\",\"snd\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared358,\n\"_output\":anf_shared359,\n\"pretty\":anf_shared360,\n\"_match\":R.mM(\"concat\",4)};\nvar $concat$brander396 = R.nB(\"concat\",L[65]);\nvar $concat$brands397 = {};\n$concat$brands397[PPrintDoc112._brand] = true;\n$concat$brands397[$concat$brander396._brand] = true;\nvar concat400 = R.mVC(L[65],function $synthesizedConstructor_$concat$base() {\nreturn [PPrintDoc343,PPrintDoc343,$type$Number3,$type$Boolean6];\n},[\"fst401\",\"snd402\",\"flat$width403\",\"has$hardline404\"],[L[66],L[67],L[68],L[69]],[false,false,false,false],[\"fst401\",\"snd402\",\"flat$width403\",\"has$hardline404\"],$concat_mutablemask398,$concat$base395,$concat$brands397,\"concat\",$concat_getfields399,$concat$base395);\nvar $nest_getfields409 = function singleton_variant(f) {\nreturn f(this.dict[\"indent\"],this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $nest_mutablemask408 = [false,false,false,false];\nvar $nest$base405 = {\"$fieldNames\":[\"indent\",\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared358,\n\"_output\":anf_shared359,\n\"pretty\":anf_shared360,\n\"_match\":R.mM(\"nest\",4)};\nvar $nest$brander406 = R.nB(\"nest\",L[70]);\nvar $nest$brands407 = {};\n$nest$brands407[PPrintDoc112._brand] = true;\n$nest$brands407[$nest$brander406._brand] = true;\nvar nest410 = R.mVC(L[70],function $synthesizedConstructor_$nest$base() {\nreturn [$type$Number3,PPrintDoc343,$type$Number3,$type$Boolean6];\n},[\"indent411\",\"d412\",\"flat$width413\",\"has$hardline414\"],[L[71],L[72],L[73],L[74]],[false,false,false,false],[\"indent411\",\"d412\",\"flat$width413\",\"has$hardline414\"],$nest_mutablemask408,$nest$base405,$nest$brands407,\"nest\",$nest_getfields409,$nest$base405);\nvar $if$flat_getfields419 = function singleton_variant(f) {\nreturn f(this.dict[\"flat\"],this.dict[\"vert\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $if$flat_mutablemask418 = [false,false,false,false];\nvar $if$flat$base415 = {\"$fieldNames\":[\"flat\",\"vert\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared358,\n\"_output\":anf_shared359,\n\"pretty\":anf_shared360,\n\"_match\":R.mM(\"if-flat\",4)};\nvar $if$flat$brander416 = R.nB(\"if-flat\",L[75]);\nvar $if$flat$brands417 = {};\n$if$flat$brands417[PPrintDoc112._brand] = true;\n$if$flat$brands417[$if$flat$brander416._brand] = true;\nvar if$flat420 = R.mVC(L[75],function $synthesizedConstructor_$if$flat$base() {\nreturn [PPrintDoc343,PPrintDoc343,$type$Number3,$type$Boolean6];\n},[\"flat421\",\"vert422\",\"flat$width423\",\"has$hardline424\"],[L[76],L[77],L[78],L[79]],[false,false,false,false],[\"flat421\",\"vert422\",\"flat$width423\",\"has$hardline424\"],$if$flat_mutablemask418,$if$flat$base415,$if$flat$brands417,\"if-flat\",$if$flat_getfields419,$if$flat$base415);\nvar $align_getfields429 = function singleton_variant(f) {\nreturn f(this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $align_mutablemask428 = [false,false,false];\nvar $align$base425 = {\"$fieldNames\":[\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared358,\n\"_output\":anf_shared359,\n\"pretty\":anf_shared360,\n\"_match\":R.mM(\"align\",3)};\nvar $align$brander426 = R.nB(\"align\",L[80]);\nvar $align$brands427 = {};\n$align$brands427[PPrintDoc112._brand] = true;\n$align$brands427[$align$brander426._brand] = true;\nvar align430 = R.mVC(L[80],function $synthesizedConstructor_$align$base() {\nreturn [PPrintDoc343,$type$Number3,$type$Boolean6];\n},[\"d431\",\"flat$width432\",\"has$hardline433\"],[L[81],L[82],L[83]],[false,false,false],[\"d431\",\"flat$width432\",\"has$hardline433\"],$align_mutablemask428,$align$base425,$align$brands427,\"align\",$align_getfields429,$align$base425);\nvar $align$spaces_getfields438 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $align$spaces_mutablemask437 = [false,false,false];\nvar $align$spaces$base434 = {\"$fieldNames\":[\"n\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared358,\n\"_output\":anf_shared359,\n\"pretty\":anf_shared360,\n\"_match\":R.mM(\"align-spaces\",3)};\nvar $align$spaces$brander435 = R.nB(\"align-spaces\",L[84]);\nvar $align$spaces$brands436 = {};\n$align$spaces$brands436[PPrintDoc112._brand] = true;\n$align$spaces$brands436[$align$spaces$brander435._brand] = true;\nvar align$spaces439 = R.mVC(L[84],function $synthesizedConstructor_$align$spaces$base() {\nreturn [$type$Number3,$type$Number3,$type$Boolean6];\n},[\"n440\",\"flat$width441\",\"has$hardline442\"],[L[85],L[86],L[87]],[false,false,false],[\"n440\",\"flat$width441\",\"has$hardline442\"],$align$spaces_mutablemask437,$align$spaces$base434,$align$spaces$brands436,\"align-spaces\",$align$spaces_getfields438,$align$spaces$base434);\nvar $group_getfields447 = function singleton_variant(f) {\nreturn f(this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $group_mutablemask446 = [false,false,false];\nvar $group$base443 = {\"$fieldNames\":[\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared358,\n\"_output\":anf_shared359,\n\"pretty\":anf_shared360,\n\"_match\":R.mM(\"group\",3)};\nvar $group$brander444 = R.nB(\"group\",L[88]);\nvar $group$brands445 = {};\n$group$brands445[PPrintDoc112._brand] = true;\n$group$brands445[$group$brander444._brand] = true;\nvar group448 = R.mVC(L[88],function $synthesizedConstructor_$group$base() {\nreturn [PPrintDoc343,$type$Number3,$type$Boolean6];\n},[\"d620\",\"flat$width449\",\"has$hardline450\"],[L[89],L[90],L[91]],[false,false,false],[\"d620\",\"flat$width449\",\"has$hardline450\"],$group_mutablemask446,$group$base443,$group$brands445,\"group\",$group_getfields447,$group$base443);\nvar anf_assign451 = R.mO({\"PPrintDoc\":G(PPrintDoc112,\"test\",L[92]),\n\"is-mt-doc\":G($mt$doc$brander362,\"test\",L[51]),\n\"mt-doc\":mt$doc366,\n\"is-str\":G($str$brander370,\"test\",L[54]),\n\"str\":str374,\n\"is-hardline\":G($hardline$brander379,\"test\",L[58]),\n\"hardline\":hardline383,\n\"is-blank\":G($blank$brander387,\"test\",L[61]),\n\"blank\":blank391,\n\"is-concat\":G($concat$brander396,\"test\",L[65]),\n\"concat\":concat400,\n\"is-nest\":G($nest$brander406,\"test\",L[70]),\n\"nest\":nest410,\n\"is-if-flat\":G($if$flat$brander416,\"test\",L[75]),\n\"if-flat\":if$flat420,\n\"is-align\":G($align$brander426,\"test\",L[80]),\n\"align\":align430,\n\"is-align-spaces\":G($align$spaces$brander435,\"test\",L[84]),\n\"align-spaces\":align$spaces439,\n\"is-group\":G($group$brander444,\"test\",L[88]),\n\"group\":group448});\nPPrintDoc452.$var = anf_assign451;\nR.nothing;\n$al109 = L[92];\nvar anf_assign453 = G(PPrintDoc452.$var,\"PPrintDoc\",L[92]);\nis$PPrintDoc454.$var = anf_assign453;\nR.nothing;\n$al109 = L[51];\nvar anf_assign455 = G(PPrintDoc452.$var,\"is-mt-doc\",L[51]);\nis$mt$doc125.$var = anf_assign455;\nR.nothing;\n$al109 = L[51];\nvar anf_assign456 = G(PPrintDoc452.$var,\"mt-doc\",L[51]);\nmt$doc457.$var = anf_assign456;\nR.nothing;\n$al109 = L[54];\nvar anf_assign458 = G(PPrintDoc452.$var,\"is-str\",L[54]);\nis$str459.$var = anf_assign458;\nR.nothing;\n$al109 = L[54];\nvar anf_assign460 = G(PPrintDoc452.$var,\"str\",L[54]);\nstr461.$var = anf_assign460;\nR.nothing;\n$al109 = L[58];\nvar anf_assign462 = G(PPrintDoc452.$var,\"is-hardline\",L[58]);\nis$hardline463.$var = anf_assign462;\nR.nothing;\n$al109 = L[58];\nvar anf_assign464 = G(PPrintDoc452.$var,\"hardline\",L[58]);\nhardline465.$var = anf_assign464;\nR.nothing;\n$al109 = L[61];\nvar anf_assign467 = G(PPrintDoc452.$var,\"is-blank\",L[61]);\nis$blank468.$var = anf_assign467;\nR.nothing;\n$al109 = L[61];\nvar anf_assign469 = G(PPrintDoc452.$var,\"blank\",L[61]);\nblank470.$var = anf_assign469;\nR.nothing;\n$al109 = L[65];\nvar anf_assign471 = G(PPrintDoc452.$var,\"is-concat\",L[65]);\nis$concat472.$var = anf_assign471;\nR.nothing;\n$al109 = L[65];\nvar anf_assign473 = G(PPrintDoc452.$var,\"concat\",L[65]);\nconcat128.$var = anf_assign473;\nR.nothing;\n$al109 = L[70];\nvar anf_assign474 = G(PPrintDoc452.$var,\"is-nest\",L[70]);\nis$nest475.$var = anf_assign474;\nR.nothing;\n$al109 = L[70];\nvar anf_assign476 = G(PPrintDoc452.$var,\"nest\",L[70]);\nnest477.$var = anf_assign476;\nR.nothing;\n$al109 = L[75];\nvar anf_assign478 = G(PPrintDoc452.$var,\"is-if-flat\",L[75]);\nis$if$flat479.$var = anf_assign478;\nR.nothing;\n$al109 = L[75];\nvar anf_assign480 = G(PPrintDoc452.$var,\"if-flat\",L[75]);\nif$flat481.$var = anf_assign480;\nR.nothing;\n$al109 = L[80];\nvar anf_assign482 = G(PPrintDoc452.$var,\"is-align\",L[80]);\nis$align483.$var = anf_assign482;\nR.nothing;\n$al109 = L[80];\nvar anf_assign484 = G(PPrintDoc452.$var,\"align\",L[80]);\nalign485.$var = anf_assign484;\nR.nothing;\n$al109 = L[84];\nvar anf_assign486 = G(PPrintDoc452.$var,\"is-align-spaces\",L[84]);\nis$align$spaces487.$var = anf_assign486;\nR.nothing;\n$al109 = L[84];\nvar anf_assign489 = G(PPrintDoc452.$var,\"align-spaces\",L[84]);\nalign$spaces490.$var = anf_assign489;\nR.nothing;\n$al109 = L[88];\nvar anf_assign491 = G(PPrintDoc452.$var,\"is-group\",L[88]);\nis$group492.$var = anf_assign491;\nR.nothing;\n$al109 = L[88];\nvar anf_assign493 = G(PPrintDoc452.$var,\"group\",L[88]);\ngroup494.$var = anf_assign493;\nR.nothing;\nvar $item_getfields499 = function singleton_variant(f) {\nreturn f(this.dict[\"indent\"],this.dict[\"is-flat\"],this.dict[\"d\"]);\n};\nvar $item_mutablemask498 = [false,false,false];\nvar $item$base495 = {\"$fieldNames\":[\"indent\",\"is-flat\",\"d\"],\n\"_match\":R.mM(\"item\",3)};\nvar $item$brander496 = R.nB(\"item\",L[93]);\nvar $item$brands497 = {};\n$item$brands497[Item113._brand] = true;\n$item$brands497[$item$brander496._brand] = true;\nvar item500 = R.mVC(L[93],function $synthesizedConstructor_$item$base() {\nreturn [$type$Number3,$type$Boolean6,PPrintDoc343];\n},[\"indent501\",\"is$flat502\",\"d503\"],[L[94],L[95],L[96]],[false,false,false],[\"indent501\",\"is$flat502\",\"d503\"],$item_mutablemask498,$item$base495,$item$brands497,\"item\",$item_getfields499,$item$base495);\nvar anf_assign504 = R.mO({\"Item\":G(Item113,\"test\",L[97]),\n\"is-item\":G($item$brander496,\"test\",L[93]),\n\"item\":item500});\nItem505.$var = anf_assign504;\nR.nothing;\n$al109 = L[97];\nvar anf_assign506 = G(Item505.$var,\"Item\",L[97]);\nis$Item507.$var = anf_assign506;\nR.nothing;\n$al109 = L[93];\nvar anf_assign509 = G(Item505.$var,\"is-item\",L[93]);\nis$item510.$var = anf_assign509;\nR.nothing;\n$al109 = L[93];\nvar anf_assign839 = G(Item505.$var,\"item\",L[93]);\nitem511.$var = anf_assign839;\nR.nothing;\nvar $temp_lam513 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__98($i514,$m515,$it516,$rest517) {\nvar $step512 = 0;\nvar $elidedFrames522 = 0;\nvar $ans519 = D;\nvar $al520 = L[98];\nif(R.isAR($i514)) {\n$step512 = $i514.step;\n$al520 = $i514.from;\n$ans519 = $i514.ans;\n$elidedFrames522 = $i514.elidedFrames;\ni514 = $i514.args[0];\nm515 = $i514.args[1];\nit516 = $i514.args[2];\nrest517 = $i514.args[3];\nanf_arg850 = $i514.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[98],4,$t,false);\n}\nvar i514 = $i514;\nvar m515 = $m515;\nvar it516 = $it516;\nvar rest517 = $rest517;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans519 = R.mC();\n}\nwhile(!R.isContinuation($ans519)) {\nswitch($step512) {\ncase 0: // caller optimization;\n$ans519 = is$concat472.$var.app(it516);\nvar anf_if525 = $ans519;\n$step512 = R.checkPyretTrue(anf_if525)?1:3;\nbreak;\ncase 1: $al520 = L[99];\nvar anf_arg850 = G(it516,\"fst\",L[99]);\n$al520 = L[100];\nvar anf_arg321 = G(it516,\"snd\",L[100]);\n$step512 = 2;\n$al520 = L[101];\n// omitting isFunction check;\n$ans519 = collect$concats523.$var.app(i514,m515,anf_arg321,rest517);\nbreak;\ncase 2: var anf_arg848 = $ans519;\n$step512 = 0;\n++$elidedFrames522;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans519 = R.mC();\n}\ni514 = i514;\nm515 = m515;\nit516 = anf_arg850;\nrest517 = anf_arg848;\ncontinue;\ncase 3: // caller optimization;\n$ans519 = item511.$var.app(i514,m515,it516);\nvar anf_arg851 = $ans519;\n// caller optimization;\n$ans519 = link6.app(anf_arg851,rest517);\n$step512 = 4;\nbreak;\ncase 4: ++R.GAS;\nreturn $ans519;\ndefault: R.ffi.throwSpinnakerError(L[98],$step512);\n}\n}\nif($step512 !== 4) {\n$ans519.stack[R.EXN_STACKHEIGHT++] = R.mAR($al520,$temp_lam513,$step512,[i514,m515,it516,rest517],[anf_arg850],$elidedFrames522);\n}\nreturn $ans519;\n};\nvar anf_assign854 = R.mF($temp_lam513,\"collect-concats\");\ncollect$concats523.$var = anf_assign854;\nR.nothing;\nvar $temp_lam529 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__102($width530,$doc531) {\nvar $step528 = 0;\nvar $elidedFrames535 = 0;\nvar $ans532 = D;\nvar $al533 = L[102];\nif(R.isAR($width530)) {\n$step528 = $width530.step;\n$al533 = $width530.from;\n$ans532 = $width530.ans;\n$elidedFrames535 = $width530.elidedFrames;\nwidth530 = $width530.args[0];\ndoc531 = $width530.args[1];\nprocess1278 = $width530.vars[0];\ngen$output1263 = $width530.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[102],2,$t,false);\n}\nvar width530 = $width530;\nvar doc531 = $doc531;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans532 = R.mC();\n}\nwhile(!R.isContinuation($ans532)) {\nswitch($step528) {\ncase 0: $step528 = 1;\n$al533 = L[164];\nR._cA(L[164],PPrintDoc343,doc531);\nbreak;\ncase 1: var cur$line543 = {\"$var\":empty2};\nvar output564 = {\"$var\":empty2};\nvar emit$text546 = {\"$var\":D};\nvar emit$spaces556 = {\"$var\":D};\nvar emit$newline1176 = {\"$var\":D};\nvar gen$output1263 = {\"$var\":D};\nvar process1278 = {\"$var\":D};\nvar $temp_lam537 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__103($s538) {\nvar $step536 = 0;\nvar $elidedFrames542 = 0;\nvar $ans539 = D;\nvar $al540 = L[103];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[103],1,$t,false);\n}\nvar s538 = $s538;\n// callee optimization;\nwhile(!R.isContinuation($ans539)) {\nswitch($step536) {\ncase 0: var anf_arg334 = cur$line543.$var;\n// caller optimization;\n$ans539 = link6.app(s538,anf_arg334);\nvar anf_assign249 = $ans539;\n$step536 = 1;\ncur$line543.$var = anf_assign249;\n$ans539 = R.nothing;\nbreak;\ncase 1: return $ans539;\ndefault: R.ffi.throwSpinnakerError(L[103],$step536);\n}\n}\nreturn $ans539;\n};\nvar anf_assign254 = R.mF($temp_lam537,\"emit-text\");\nemit$text546.$var = anf_assign254;\nR.nothing;\nvar $temp_lam548 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__104($n549) {\nvar $step547 = 0;\nvar $elidedFrames553 = 0;\nvar $ans550 = D;\nvar $al551 = L[104];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[104],1,$t,false);\n}\nvar n549 = $n549;\n// callee optimization;\nwhile(!R.isContinuation($ans550)) {\nswitch($step547) {\ncase 0: // caller optimization;\n$ans550 = string$repeat1.app((\" \"),n549);\nvar anf_arg863 = $ans550;\n// caller optimization;\n$ans550 = emit$text546.$var.app(anf_arg863);\n$step547 = 1;\nbreak;\ncase 1: return $ans550;\ndefault: R.ffi.throwSpinnakerError(L[104],$step547);\n}\n}\nreturn $ans550;\n};\nvar anf_assign258 = R.mF($temp_lam548,\"emit-spaces\");\nemit$spaces556.$var = anf_assign258;\nR.nothing;\nvar $temp_lam558 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__105($i559) {\nvar $step557 = 0;\nvar $elidedFrames563 = 0;\nvar $ans560 = D;\nvar $al561 = L[105];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[105],1,$t,false);\n}\nvar i559 = $i559;\n// callee optimization;\nwhile(!R.isContinuation($ans560)) {\nswitch($step557) {\ncase 0: var anf_arg1129 = cur$line543.$var;\nvar anf_arg1174 = output564.$var;\n// caller optimization;\n$ans560 = link6.app(anf_arg1129,anf_arg1174);\nvar anf_assign264 = $ans560;\noutput564.$var = anf_assign264;\nR.nothing;\n// caller optimization;\n$ans560 = string$repeat1.app((\" \"),i559);\nvar anf_arg384 = $ans560;\n// caller optimization;\n$ans560 = link6.app(anf_arg384,empty2);\nvar anf_assign279 = $ans560;\n$step557 = 1;\ncur$line543.$var = anf_assign279;\n$ans560 = R.nothing;\nbreak;\ncase 1: return $ans560;\ndefault: R.ffi.throwSpinnakerError(L[105],$step557);\n}\n}\nreturn $ans560;\n};\nvar anf_assign282 = R.mF($temp_lam558,\"emit-newline\");\nemit$newline1176.$var = anf_assign282;\nR.nothing;\nvar $temp_lam1178 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__106($$resumer13) {\nvar $step1177 = 0;\nvar $elidedFrames1183 = 0;\nvar $ans1180 = D;\nvar $al1181 = L[106];\nif(R.isAR($$resumer13)) {\n$step1177 = $$resumer13.step;\n$al1181 = $$resumer13.from;\n$ans1180 = $$resumer13.ans;\n$elidedFrames1183 = $$resumer13.elidedFrames;\n$resumer13 = $$resumer13.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[106],0,$t,false);\n}\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1180 = R.mC();\n}\nwhile(!R.isContinuation($ans1180)) {\nswitch($step1177) {\ncase 0: var anf_arg1214 = cur$line543.$var;\nvar anf_arg388 = output564.$var;\n// caller optimization;\n$ans1180 = link6.app(anf_arg1214,anf_arg388);\nvar anf_assign287 = $ans1180;\noutput564.$var = anf_assign287;\nR.nothing;\nvar $temp_lam1216 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__107($lines1217,$line1218) {\nvar $step1215 = 0;\nvar $elidedFrames1224 = 0;\nvar $ans1221 = D;\nvar $al1222 = L[107];\nif(R.isAR($lines1217)) {\n$step1215 = $lines1217.step;\n$al1222 = $lines1217.from;\n$ans1221 = $lines1217.ans;\n$elidedFrames1224 = $lines1217.elidedFrames;\nlines1217 = $lines1217.args[0];\nline1218 = $lines1217.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[107],2,$t,false);\n}\nvar lines1217 = $lines1217;\nvar line1218 = $line1218;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1221 = R.mC();\n}\nwhile(!R.isContinuation($ans1221)) {\nswitch($step1215) {\ncase 0: var $temp_lam1227 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__108($acc1228,$piece1229) {\nvar $step1226 = 0;\nvar $elidedFrames1234 = 0;\nvar $ans1231 = D;\nvar $al1232 = L[108];\nif(R.isAR($acc1228)) {\n$step1226 = $acc1228.step;\n$al1232 = $acc1228.from;\n$ans1231 = $acc1228.ans;\n$elidedFrames1234 = $acc1228.elidedFrames;\nacc1228 = $acc1228.args[0];\npiece1229 = $acc1228.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[108],2,$t,false);\n}\nvar acc1228 = $acc1228;\nvar piece1229 = $piece1229;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1231 = R.mC();\n}\nwhile(!R.isContinuation($ans1231)) {\nswitch($step1226) {\ncase 0: $step1226 = 1;\n$al1232 = L[109];\n// omitting isFunction check;\n$ans1231 = _plus5.app(piece1229,acc1228);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1231;\ndefault: R.ffi.throwSpinnakerError(L[108],$step1226);\n}\n}\nif($step1226 !== 1) {\n$ans1231.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1232,$temp_lam1227,$step1226,[acc1228,piece1229],[],$elidedFrames1234);\n}\nreturn $ans1231;\n};\nvar anf_arg1258 = R.mF($temp_lam1227,\"for-body<line 150, column 10>\");\n$step1215 = 1;\n$al1222 = L[108];\n// omitting isFunction check;\n$ans1221 = fold4.app(anf_arg1258,(\"\"),line1218);\nbreak;\ncase 1: var l1259 = $ans1221;\n// caller optimization;\n$ans1221 = link6.app(l1259,lines1217);\n$step1215 = 2;\nbreak;\ncase 2: ++R.GAS;\nreturn $ans1221;\ndefault: R.ffi.throwSpinnakerError(L[107],$step1215);\n}\n}\nif($step1215 !== 2) {\n$ans1221.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1222,$temp_lam1216,$step1215,[lines1217,line1218],[],$elidedFrames1224);\n}\nreturn $ans1221;\n};\nvar anf_arg893 = R.mF($temp_lam1216,\"for-body<line 149, column 4>\");\nvar anf_arg896 = output564.$var;\n$step1177 = 1;\n$al1181 = L[107];\n// omitting isFunction check;\n$ans1180 = fold4.app(anf_arg893,empty2,anf_arg896);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1180;\ndefault: R.ffi.throwSpinnakerError(L[106],$step1177);\n}\n}\nif($step1177 !== 1) {\n$ans1180.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1181,$temp_lam1178,$step1177,[],[],$elidedFrames1183);\n}\nreturn $ans1180;\n};\nvar anf_assign899 = R.mF($temp_lam1178,\"gen-output\");\ngen$output1263.$var = anf_assign899;\nR.nothing;\nvar $temp_lam1265 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__110($column1266,$items1267) {\nvar $step1264 = 0;\nvar $elidedFrames1271 = 0;\nvar $ans1268 = D;\nvar $al1269 = L[110];\nif(R.isAR($column1266)) {\n$step1264 = $column1266.step;\n$al1269 = $column1266.from;\n$ans1268 = $column1266.ans;\n$elidedFrames1271 = $column1266.elidedFrames;\ncolumn1266 = $column1266.args[0];\nitems1267 = $column1266.args[1];\nann_check_temp1272 = $column1266.vars[0];\nfirst1275 = $column1266.vars[1];\nm1284 = $column1266.vars[2];\nvert1347 = $column1266.vars[3];\ni1283 = $column1266.vars[4];\nn1354 = $column1266.vars[5];\ncases1277 = $column1266.vars[6];\nd1335 = $column1266.vars[7];\nflat1346 = $column1266.vars[8];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[110],2,$t,false);\n}\nvar column1266 = $column1266;\nvar items1267 = $items1267;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1268 = R.mC();\n}\nwhile(!R.isContinuation($ans1268)) {\nswitch($step1264) {\ncase 0: $step1264 = 1;\n$al1269 = L[156];\nR._cA(L[156],$type$Number3,column1266);\nbreak;\ncase 1: $step1264 = 2;\n$al1269 = L[157];\nR._cA(L[157],List5,items1267);\nbreak;\ncase 2: // caller optimization;\n$ans1268 = is$empty3.app(items1267);\nvar anf_if1453 = $ans1268;\n$step1264 = R.checkPyretTrue(anf_if1453)?3:4;\nbreak;\ncase 3: $step1264 = 29;\n$ans1268 = nothing2;\nbreak;\ncase 4: $al1269 = L[112];\nvar first1275 = G(items1267,\"first\",L[112]);\n$al1269 = L[113];\nvar i1283 = G(first1275,\"indent\",L[113]);\n$al1269 = L[114];\nvar m1284 = G(first1275,\"is-flat\",L[114]);\n$al1269 = L[115];\nvar cases1277 = G(first1275,\"d\",L[115]);\n$step1264 = 5;\n$al1269 = L[155];\nvar $ann$check1452 = R._cA(L[155],PPrintDoc343,cases1277);\nif(R.isContinuation($ann$check1452)) {\n$ans1268 = $ann$check1452;\n}\nbreak;\ncase 5: $al1269 = L[118];\n$step1264 = $cases_dispatch1451[cases1277.$name] || 28;\nbreak;\ncase 6: if(cases1277.$arity !== 2) {\nif(cases1277.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[117],2,cases1277.$arity,L[118],cases1277.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[117],true,L[118],cases1277.$loc);\n}\n}\nvar $fn1280 = cases1277.$constructor.$fieldNames;\nR.dF(cases1277.dict[$fn1280[0]],cases1277.$mut_fields_mask[0],false);\nR.dF(cases1277.dict[$fn1280[1]],cases1277.$mut_fields_mask[1],false);\n$al1269 = L[116];\nvar anf_arg360 = G(items1267,\"rest\",L[116]);\n$step1264 = 0;\n++$elidedFrames1271;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1268 = R.mC();\n}\ncolumn1266 = column1266;\nitems1267 = anf_arg360;\ncontinue;\ncase 7: if(cases1277.$arity !== 4) {\nif(cases1277.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[122],4,cases1277.$arity,L[118],cases1277.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[122],true,L[118],cases1277.$loc);\n}\n}\nvar $fn1313 = cases1277.$constructor.$fieldNames;\nR.dF(cases1277.dict[$fn1313[0]],cases1277.$mut_fields_mask[0],false);\nR.dF(cases1277.dict[$fn1313[1]],cases1277.$mut_fields_mask[1],false);\nR.dF(cases1277.dict[$fn1313[2]],cases1277.$mut_fields_mask[2],false);\nR.dF(cases1277.dict[$fn1313[3]],cases1277.$mut_fields_mask[3],false);\n$al1269 = L[119];\nvar anf_arg908 = G(first1275,\"d\",L[119]);\n$al1269 = L[120];\nvar anf_arg911 = G(items1267,\"rest\",L[120]);\n$step1264 = 8;\n$al1269 = L[121];\n// omitting isFunction check;\n$ans1268 = collect$concats523.$var.app(i1283,m1284,anf_arg908,anf_arg911);\nbreak;\ncase 8: var anf_arg1311 = $ans1268;\n$step1264 = 0;\n++$elidedFrames1271;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1268 = R.mC();\n}\ncolumn1266 = column1266;\nitems1267 = anf_arg1311;\ncontinue;\ncase 9: if(cases1277.$arity !== 3) {\nif(cases1277.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[125],3,cases1277.$arity,L[118],cases1277.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[125],true,L[118],cases1277.$loc);\n}\n}\nvar $fn1321 = cases1277.$constructor.$fieldNames;\nvar s1318 = R.dF(cases1277.dict[$fn1321[0]],cases1277.$mut_fields_mask[0],false);\nvar flat$width1319 = R.dF(cases1277.dict[$fn1321[1]],cases1277.$mut_fields_mask[1],false);\nR.dF(cases1277.dict[$fn1321[2]],cases1277.$mut_fields_mask[2],false);\n// caller optimization;\n$ans1268 = emit$text546.$var.app(s1318);\n$step1264 = 10;\n$al1269 = L[124];\n// omitting isFunction check;\n$ans1268 = _plus5.app(column1266,flat$width1319);\nbreak;\ncase 10: var anf_arg374 = $ans1268;\n$al1269 = L[123];\nvar anf_arg925 = G(items1267,\"rest\",L[123]);\n$step1264 = 0;\n++$elidedFrames1271;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1268 = R.mC();\n}\ncolumn1266 = anf_arg374;\nitems1267 = anf_arg925;\ncontinue;\ncase 11: if(cases1277.$arity !== 3) {\nif(cases1277.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[128],3,cases1277.$arity,L[118],cases1277.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[128],true,L[118],cases1277.$loc);\n}\n}\nvar $fn1327 = cases1277.$constructor.$fieldNames;\nvar n1323 = R.dF(cases1277.dict[$fn1327[0]],cases1277.$mut_fields_mask[0],false);\nR.dF(cases1277.dict[$fn1327[1]],cases1277.$mut_fields_mask[1],false);\nR.dF(cases1277.dict[$fn1327[2]],cases1277.$mut_fields_mask[2],false);\n// caller optimization;\n$ans1268 = emit$spaces556.$var.app(n1323);\n$step1264 = 12;\n$al1269 = L[127];\n// omitting isFunction check;\n$ans1268 = _plus5.app(column1266,n1323);\nbreak;\ncase 12: var anf_arg361 = $ans1268;\n$al1269 = L[126];\nvar anf_arg923 = G(items1267,\"rest\",L[126]);\n$step1264 = 0;\n++$elidedFrames1271;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1268 = R.mC();\n}\ncolumn1266 = anf_arg361;\nitems1267 = anf_arg923;\ncontinue;\ncase 13: if(cases1277.$arity !== 3) {\nif(cases1277.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[130],3,cases1277.$arity,L[118],cases1277.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[130],true,L[118],cases1277.$loc);\n}\n}\nvar $fn1332 = cases1277.$constructor.$fieldNames;\nvar d1328 = R.dF(cases1277.dict[$fn1332[0]],cases1277.$mut_fields_mask[0],false);\nR.dF(cases1277.dict[$fn1332[1]],cases1277.$mut_fields_mask[1],false);\nR.dF(cases1277.dict[$fn1332[2]],cases1277.$mut_fields_mask[2],false);\n// caller optimization;\n$ans1268 = item511.$var.app(column1266,m1284,d1328);\nvar anf_arg926 = $ans1268;\n$al1269 = L[129];\nvar anf_arg364 = G(items1267,\"rest\",L[129]);\n// caller optimization;\n$ans1268 = link6.app(anf_arg926,anf_arg364);\nvar anf_arg372 = $ans1268;\n$step1264 = 0;\n++$elidedFrames1271;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1268 = R.mC();\n}\ncolumn1266 = column1266;\nitems1267 = anf_arg372;\ncontinue;\ncase 14: if(cases1277.$arity !== 4) {\nif(cases1277.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[133],4,cases1277.$arity,L[118],cases1277.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[133],true,L[118],cases1277.$loc);\n}\n}\nvar $fn1339 = cases1277.$constructor.$fieldNames;\nvar n1334 = R.dF(cases1277.dict[$fn1339[0]],cases1277.$mut_fields_mask[0],false);\nvar d1335 = R.dF(cases1277.dict[$fn1339[1]],cases1277.$mut_fields_mask[1],false);\nR.dF(cases1277.dict[$fn1339[2]],cases1277.$mut_fields_mask[2],false);\nR.dF(cases1277.dict[$fn1339[3]],cases1277.$mut_fields_mask[3],false);\n$step1264 = 15;\n$al1269 = L[132];\n// omitting isFunction check;\n$ans1268 = _plus5.app(i1283,n1334);\nbreak;\ncase 15: var anf_arg940 = $ans1268;\n// caller optimization;\n$ans1268 = item511.$var.app(anf_arg940,m1284,d1335);\nvar anf_arg369 = $ans1268;\n$al1269 = L[131];\nvar anf_arg938 = G(items1267,\"rest\",L[131]);\n// caller optimization;\n$ans1268 = link6.app(anf_arg369,anf_arg938);\nvar anf_arg941 = $ans1268;\n$step1264 = 0;\n++$elidedFrames1271;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1268 = R.mC();\n}\ncolumn1266 = column1266;\nitems1267 = anf_arg941;\ncontinue;\ncase 16: if(cases1277.$arity !== 2) {\nif(cases1277.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[136],2,cases1277.$arity,L[118],cases1277.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[136],true,L[118],cases1277.$loc);\n}\n}\nvar $fn1343 = cases1277.$constructor.$fieldNames;\nR.dF(cases1277.dict[$fn1343[0]],cases1277.$mut_fields_mask[0],false);\nR.dF(cases1277.dict[$fn1343[1]],cases1277.$mut_fields_mask[1],false);\n$step1264 = R.checkPyretTrue(m1284)?17:18;\nbreak;\ncase 17: $step1264 = 29;\n$al1269 = L[134];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1269,raise1);\n}\n$ans1268 = raise1.app((\"Impossible for HardLine to be flat\"));\nbreak;\ncase 18: // caller optimization;\n$ans1268 = emit$newline1176.$var.app(i1283);\n$al1269 = L[135];\nvar anf_arg375 = G(items1267,\"rest\",L[135]);\n$step1264 = 0;\n++$elidedFrames1271;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1268 = R.mC();\n}\ncolumn1266 = i1283;\nitems1267 = anf_arg375;\ncontinue;\ncase 19: if(cases1277.$arity !== 4) {\nif(cases1277.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[138],4,cases1277.$arity,L[118],cases1277.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[138],true,L[118],cases1277.$loc);\n}\n}\nvar $fn1351 = cases1277.$constructor.$fieldNames;\nvar flat1346 = R.dF(cases1277.dict[$fn1351[0]],cases1277.$mut_fields_mask[0],false);\nvar vert1347 = R.dF(cases1277.dict[$fn1351[1]],cases1277.$mut_fields_mask[1],false);\nR.dF(cases1277.dict[$fn1351[2]],cases1277.$mut_fields_mask[2],false);\nR.dF(cases1277.dict[$fn1351[3]],cases1277.$mut_fields_mask[3],false);\n$step1264 = R.checkPyretTrue(m1284)?20:21;\nbreak;\ncase 20: $step1264 = 22;\n$ans1268 = flat1346;\nbreak;\ncase 21: $step1264 = 22;\n$ans1268 = vert1347;\nbreak;\ncase 22: var anf_arg382 = $ans1268;\n// caller optimization;\n$ans1268 = item511.$var.app(i1283,m1284,anf_arg382);\nvar anf_arg955 = $ans1268;\n$al1269 = L[137];\nvar anf_arg383 = G(items1267,\"rest\",L[137]);\n// caller optimization;\n$ans1268 = link6.app(anf_arg955,anf_arg383);\nvar anf_arg953 = $ans1268;\n$step1264 = 0;\n++$elidedFrames1271;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1268 = R.mC();\n}\ncolumn1266 = column1266;\nitems1267 = anf_arg953;\ncontinue;\ncase 23: if(cases1277.$arity !== 3) {\nif(cases1277.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[142],3,cases1277.$arity,L[118],cases1277.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[142],true,L[118],cases1277.$loc);\n}\n}\nvar $fn1356 = cases1277.$constructor.$fieldNames;\nvar n1354 = R.dF(cases1277.dict[$fn1356[0]],cases1277.$mut_fields_mask[0],false);\nR.dF(cases1277.dict[$fn1356[1]],cases1277.$mut_fields_mask[1],false);\nR.dF(cases1277.dict[$fn1356[2]],cases1277.$mut_fields_mask[2],false);\n$step1264 = R.checkPyretTrue(m1284)?24:25;\nbreak;\ncase 24: $al1269 = L[139];\nvar anf_arg956 = G(items1267,\"rest\",L[139]);\n$step1264 = 0;\n++$elidedFrames1271;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1268 = R.mC();\n}\ncolumn1266 = column1266;\nitems1267 = anf_arg956;\ncontinue;\ncase 25: // caller optimization;\n$ans1268 = emit$spaces556.$var.app(n1354);\n$step1264 = 26;\n$al1269 = L[141];\n// omitting isFunction check;\n$ans1268 = _plus5.app(column1266,n1354);\nbreak;\ncase 26: var anf_arg404 = $ans1268;\n$al1269 = L[140];\nvar anf_arg969 = G(items1267,\"rest\",L[140]);\n$step1264 = 0;\n++$elidedFrames1271;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1268 = R.mC();\n}\ncolumn1266 = anf_arg404;\nitems1267 = anf_arg969;\ncontinue;\ncase 27: if(cases1277.$arity !== 3) {\nif(cases1277.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[154],3,cases1277.$arity,L[118],cases1277.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[154],true,L[118],cases1277.$loc);\n}\n}\n$step1264 = 29;\n$al1269 = L[154];\nvar $temp_branch1443 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__118($d1359,$flat$width1361,$has$hardline1442) {\nvar $step1444 = 0;\nvar $elidedFrames1448 = 0;\nvar $ans1445 = D;\nvar $al1446 = L[153];\nif(R.isAR($d1359)) {\n$step1444 = $d1359.step;\n$al1446 = $d1359.from;\n$ans1445 = $d1359.ans;\n$elidedFrames1448 = $d1359.elidedFrames;\nd1359 = $d1359.args[0];\nflat$width1361 = $d1359.args[1];\nhas$hardline1442 = $d1359.args[2];\n} else {\nvar d1359 = $d1359;\nvar flat$width1361 = $flat$width1361;\nvar has$hardline1442 = $has$hardline1442;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1445 = R.mC();\n}\nwhile(!R.isContinuation($ans1445)) {\nswitch($step1444) {\ncase 0: $step1444 = R.checkPyretTrue(m1284)?1:2;\nbreak;\ncase 1: // caller optimization;\n$ans1445 = item511.$var.app(i1283,(true),d1359);\nvar anf_arg1360 = $ans1445;\n$al1446 = L[143];\nvar anf_arg401 = G(items1267,\"rest\",L[143]);\n// caller optimization;\n$ans1445 = link6.app(anf_arg1360,anf_arg401);\nvar anf_arg405 = $ans1445;\n$step1444 = 9;\n$al1446 = L[149];\n// omitting isFunction check;\n$ans1445 = process1278.$var.app(column1266,anf_arg405);\nbreak;\ncase 2: $step1444 = R.checkPyretTrue(has$hardline1442)?3:4;\nbreak;\ncase 3: // caller optimization;\n$ans1445 = item511.$var.app(i1283,(false),d1359);\nvar anf_arg970 = $ans1445;\n$al1446 = L[144];\nvar anf_arg971 = G(items1267,\"rest\",L[144]);\n// caller optimization;\n$ans1445 = link6.app(anf_arg970,anf_arg971);\nvar anf_arg781 = $ans1445;\n$step1444 = 9;\n$al1446 = L[150];\n// omitting isFunction check;\n$ans1445 = process1278.$var.app(column1266,anf_arg781);\nbreak;\ncase 4: $step1444 = 5;\n$al1446 = L[148];\n// omitting isFunction check;\n$ans1445 = _minus9.app(width530,column1266);\nbreak;\ncase 5: var anf_arg409 = $ans1445;\n$step1444 = 6;\n$al1446 = L[147];\n// omitting isFunction check;\n$ans1445 = _greaterequal2.app(anf_arg409,flat$width1361);\nbreak;\ncase 6: var anf_if1441 = $ans1445;\n$step1444 = R.checkPyretTrue(anf_if1441)?7:8;\nbreak;\ncase 7: // caller optimization;\n$ans1445 = item511.$var.app(i1283,(true),d1359);\nvar anf_arg406 = $ans1445;\n$al1446 = L[145];\nvar anf_arg62 = G(items1267,\"rest\",L[145]);\n// caller optimization;\n$ans1445 = link6.app(anf_arg406,anf_arg62);\nvar anf_arg63 = $ans1445;\n$step1444 = 9;\n$al1446 = L[151];\n// omitting isFunction check;\n$ans1445 = process1278.$var.app(column1266,anf_arg63);\nbreak;\ncase 8: // caller optimization;\n$ans1445 = item511.$var.app(i1283,(false),d1359);\nvar anf_arg412 = $ans1445;\n$al1446 = L[146];\nvar anf_arg1440 = G(items1267,\"rest\",L[146]);\n// caller optimization;\n$ans1445 = link6.app(anf_arg412,anf_arg1440);\nvar anf_arg413 = $ans1445;\n$step1444 = 9;\n$al1446 = L[152];\n// omitting isFunction check;\n$ans1445 = process1278.$var.app(column1266,anf_arg413);\nbreak;\ncase 9: ++R.GAS;\nreturn $ans1445;\ndefault: R.ffi.throwSpinnakerError(L[153],$step1444);\n}\n}\nif($step1444 !== 9) {\n$ans1445.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1446,$temp_branch1443,$step1444,[d1359,flat$width1361,has$hardline1442],[],$elidedFrames1448);\n}\nreturn $ans1445;\n};\n$ans1268 = cases1277.$app_fields($temp_branch1443,[false,false,false]);\nbreak;\ncase 28: $ans1268 = R.throwNoCasesMatched(L[118],cases1277);\n$step1264 = 29;\nbreak;\ncase 29: var ann_check_temp1272 = $ans1268;\n$step1264 = 30;\n$al1269 = L[111];\nvar $ann$check1274 = R._cA(L[111],$type$Nothing1,ann_check_temp1272);\nif(R.isContinuation($ann$check1274)) {\n$ans1268 = $ann$check1274;\n}\nbreak;\ncase 30: $step1264 = 31;\n$ans1268 = ann_check_temp1272;\nbreak;\ncase 31: ++R.GAS;\nreturn $ans1268;\ndefault: R.ffi.throwSpinnakerError(L[110],$step1264);\n}\n}\nif($step1264 !== 31) {\n$ans1268.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1269,$temp_lam1265,$step1264,[column1266,items1267],[ann_check_temp1272,first1275,m1284,vert1347,i1283,n1354,cases1277,d1335,flat1346],$elidedFrames1271);\n}\nreturn $ans1268;\n};\nvar anf_assign1455 = R.mF($temp_lam1265,\"process\");\nprocess1278.$var = anf_assign1455;\nR.nothing;\n$ans532 = R.getMaker1(list8,(\"make1\"),L[158],L[159]);\nvar anf_fun426 = $ans532;\n$al533 = L[160];\nvar anf_arg442 = G(doc531,\"flat-width\",L[160]);\n$al533 = L[161];\nvar anf_arg449 = G(doc531,\"has-hardline\",L[161]);\n// caller optimization;\n$ans532 = group494.$var.app(doc531,anf_arg442,anf_arg449);\nvar anf_arg102 = $ans532;\n// caller optimization;\n$ans532 = item511.$var.app((0),(false),anf_arg102);\nvar anf_arg103 = $ans532;\n$step528 = 2;\n$al533 = L[159];\nif(typeof(anf_fun426.app) !== \"function\") {\nR.ffi.throwNonFunApp($al533,anf_fun426);\n}\n$ans532 = anf_fun426.app(anf_arg103);\nbreak;\ncase 2: var anf_arg425 = $ans532;\n$step528 = 3;\n$al533 = L[163];\n// omitting isFunction check;\n$ans532 = process1278.$var.app((0),anf_arg425);\nbreak;\ncase 3: $step528 = 4;\n$al533 = L[162];\n// omitting isFunction check;\n$ans532 = gen$output1263.$var.app();\nbreak;\ncase 4: ++R.GAS;\nreturn $ans532;\ndefault: R.ffi.throwSpinnakerError(L[102],$step528);\n}\n}\nif($step528 !== 4) {\n$ans532.stack[R.EXN_STACKHEIGHT++] = R.mAR($al533,$temp_lam529,$step528,[width530,doc531],[process1278,gen$output1263],$elidedFrames535);\n}\nreturn $ans532;\n};\nvar anf_assign1457 = R.mF($temp_lam529,\"format\");\nformat354.$var = anf_assign1457;\nR.nothing;\n// caller optimization;\n$ans108 = mt$doc457.$var.app((0),(false));\nvar mt$doc1650 = $ans108;\n// caller optimization;\n$ans108 = hardline465.$var.app((0),(true));\nvar hardline1596 = $ans108;\nvar $temp_lam1459 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__165($d1460) {\nvar $step1458 = 0;\nvar $elidedFrames1464 = 0;\nvar $ans1461 = D;\nvar $al1462 = L[165];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[165],1,$t,false);\n}\nvar d1460 = $d1460;\n// callee optimization;\nwhile(!R.isContinuation($ans1461)) {\nswitch($step1458) {\ncase 0: $al1462 = L[166];\nvar anf_arg453 = G(d1460,\"flat-width\",L[166]);\n$al1462 = L[167];\nvar anf_arg456 = G(d1460,\"has-hardline\",L[167]);\n// caller optimization;\n$ans1461 = align485.$var.app(d1460,anf_arg453,anf_arg456);\n$step1458 = 1;\nbreak;\ncase 1: return $ans1461;\ndefault: R.ffi.throwSpinnakerError(L[165],$step1458);\n}\n}\nreturn $ans1461;\n};\nvar align1767 = R.mF($temp_lam1459,\"\");\nvar $temp_lam1467 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__168($d1468) {\nvar $step1466 = 0;\nvar $elidedFrames1472 = 0;\nvar $ans1469 = D;\nvar $al1470 = L[168];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[168],1,$t,false);\n}\nvar d1468 = $d1468;\n// callee optimization;\nwhile(!R.isContinuation($ans1469)) {\nswitch($step1466) {\ncase 0: $al1470 = L[169];\nvar anf_arg1212 = G(d1468,\"flat-width\",L[169]);\n$al1470 = L[170];\nvar anf_arg457 = G(d1468,\"has-hardline\",L[170]);\n// caller optimization;\n$ans1469 = group494.$var.app(d1468,anf_arg1212,anf_arg457);\n$step1466 = 1;\nbreak;\ncase 1: return $ans1469;\ndefault: R.ffi.throwSpinnakerError(L[168],$step1466);\n}\n}\nreturn $ans1469;\n};\nvar group1645 = R.mF($temp_lam1467,\"\");\nvar $temp_lam1476 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__171($flat1477,$vert1478) {\nvar $step1475 = 0;\nvar $elidedFrames1482 = 0;\nvar $ans1479 = D;\nvar $al1480 = L[171];\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[171],2,$t,false);\n}\nvar flat1477 = $flat1477;\nvar vert1478 = $vert1478;\n// callee optimization;\nwhile(!R.isContinuation($ans1479)) {\nswitch($step1475) {\ncase 0: $al1480 = L[172];\nvar anf_arg1218 = G(flat1477,\"flat-width\",L[172]);\n$al1480 = L[173];\nvar anf_arg1529 = G(flat1477,\"has-hardline\",L[173]);\n// caller optimization;\n$ans1479 = if$flat481.$var.app(flat1477,vert1478,anf_arg1218,anf_arg1529);\n$step1475 = 1;\nbreak;\ncase 1: return $ans1479;\ndefault: R.ffi.throwSpinnakerError(L[171],$step1475);\n}\n}\nreturn $ans1479;\n};\nvar if$flat1595 = R.mF($temp_lam1476,\"\");\nvar $temp_lam1533 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__174($n1177,$d1534) {\nvar $step1532 = 0;\nvar $elidedFrames1539 = 0;\nvar $ans1536 = D;\nvar $al1537 = L[174];\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[174],2,$t,false);\n}\nvar n1177 = $n1177;\nvar d1534 = $d1534;\n// callee optimization;\nwhile(!R.isContinuation($ans1536)) {\nswitch($step1532) {\ncase 0: $al1537 = L[175];\nvar anf_arg542 = G(d1534,\"flat-width\",L[175]);\n$al1537 = L[176];\nvar anf_arg487 = G(d1534,\"has-hardline\",L[176]);\n// caller optimization;\n$ans1536 = nest477.$var.app(n1177,d1534,anf_arg542,anf_arg487);\n$step1532 = 1;\nbreak;\ncase 1: return $ans1536;\ndefault: R.ffi.throwSpinnakerError(L[174],$step1532);\n}\n}\nreturn $ans1536;\n};\nvar nest1766 = R.mF($temp_lam1533,\"\");\nvar $temp_lam1542 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__177($fst1543,$snd1544) {\nvar $step1541 = 0;\nvar $elidedFrames1548 = 0;\nvar $ans1545 = D;\nvar $al1546 = L[177];\nif(R.isAR($fst1543)) {\n$step1541 = $fst1543.step;\n$al1546 = $fst1543.from;\n$ans1545 = $fst1543.ans;\n$elidedFrames1548 = $fst1543.elidedFrames;\nfst1543 = $fst1543.args[0];\nsnd1544 = $fst1543.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[177],2,$t,false);\n}\nvar fst1543 = $fst1543;\nvar snd1544 = $snd1544;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1545 = R.mC();\n}\nwhile(!R.isContinuation($ans1545)) {\nswitch($step1541) {\ncase 0: $step1541 = 1;\n$al1546 = L[178];\n// omitting isFunction check;\n$ans1545 = _plus5.app(fst1543,snd1544);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1545;\ndefault: R.ffi.throwSpinnakerError(L[177],$step1541);\n}\n}\nif($step1541 !== 1) {\n$ans1545.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1546,$temp_lam1542,$step1541,[fst1543,snd1544],[],$elidedFrames1548);\n}\nreturn $ans1545;\n};\nvar concat1908 = R.mF($temp_lam1542,\"\");\nvar $temp_lam1551 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__179($n1103) {\nvar $step1550 = 0;\nvar $elidedFrames1555 = 0;\nvar $ans1552 = D;\nvar $al1553 = L[179];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[179],1,$t,false);\n}\nvar n1103 = $n1103;\n// callee optimization;\nwhile(!R.isContinuation($ans1552)) {\nswitch($step1550) {\ncase 0: // caller optimization;\n$ans1552 = blank470.$var.app(n1103,n1103,(false));\n$step1550 = 1;\nbreak;\ncase 1: return $ans1552;\ndefault: R.ffi.throwSpinnakerError(L[179],$step1550);\n}\n}\nreturn $ans1552;\n};\nvar blank1594 = R.mF($temp_lam1551,\"\");\nvar $temp_lam1564 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__180($s1565) {\nvar $step1563 = 0;\nvar $elidedFrames1572 = 0;\nvar $ans1569 = D;\nvar $al1570 = L[180];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[180],1,$t,false);\n}\nvar s1565 = $s1565;\n// callee optimization;\nwhile(!R.isContinuation($ans1569)) {\nswitch($step1563) {\ncase 0: // caller optimization;\n$ans1569 = string$length1.app(s1565);\nvar anf_arg502 = $ans1569;\n// caller optimization;\n$ans1569 = str461.$var.app(s1565,anf_arg502,(false));\n$step1563 = 1;\nbreak;\ncase 1: return $ans1569;\ndefault: R.ffi.throwSpinnakerError(L[180],$step1563);\n}\n}\nreturn $ans1569;\n};\nvar str1583 = R.mF($temp_lam1564,\"\");\nvar number1586 = {\"$var\":D};\nvar $temp_lam1576 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__181($n1577) {\nvar $step1575 = 0;\nvar $elidedFrames1582 = 0;\nvar $ans1579 = D;\nvar $al1580 = L[181];\nif(R.isAR($n1577)) {\n$step1575 = $n1577.step;\n$al1580 = $n1577.from;\n$ans1579 = $n1577.ans;\n$elidedFrames1582 = $n1577.elidedFrames;\nn1577 = $n1577.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[181],1,$t,false);\n}\nvar n1577 = $n1577;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1579 = R.mC();\n}\nwhile(!R.isContinuation($ans1579)) {\nswitch($step1575) {\ncase 0: $step1575 = 1;\n$al1580 = L[183];\nR._cA(L[183],$type$Number3,n1577);\nbreak;\ncase 1: $step1575 = 2;\n$al1580 = L[182];\nif(typeof(tostring1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1580,tostring1);\n}\n$ans1579 = tostring1.app(n1577);\nbreak;\ncase 2: var anf_arg543 = $ans1579;\n// caller optimization;\n$ans1579 = str1583.app(anf_arg543);\n$step1575 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1579;\ndefault: R.ffi.throwSpinnakerError(L[181],$step1575);\n}\n}\nif($step1575 !== 3) {\n$ans1579.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1580,$temp_lam1576,$step1575,[n1577],[],$elidedFrames1582);\n}\nreturn $ans1579;\n};\nvar anf_assign1585 = R.mF($temp_lam1576,\"number\");\nnumber1586.$var = anf_assign1585;\nR.nothing;\n// caller optimization;\n$ans108 = str1583.app((\"(\"));\nvar lparen1702 = $ans108;\n// caller optimization;\n$ans108 = str1583.app((\")\"));\nvar rparen1703 = $ans108;\n// caller optimization;\n$ans108 = str1583.app((\"{\"));\nvar lbrace1715 = $ans108;\n// caller optimization;\n$ans108 = str1583.app((\"}\"));\nvar rbrace1716 = $ans108;\n// caller optimization;\n$ans108 = str1583.app((\"[\"));\nvar lbrack1729 = $ans108;\n// caller optimization;\n$ans108 = str1583.app((\"]\"));\nvar rbrack1730 = $ans108;\n// caller optimization;\n$ans108 = str1583.app((\"<\"));\nvar langle1909 = $ans108;\n// caller optimization;\n$ans108 = str1583.app((\">\"));\nvar rangle1910 = $ans108;\n// caller optimization;\n$ans108 = str1583.app((\",\"));\nvar comma1601 = $ans108;\n// caller optimization;\n$ans108 = str1583.app((\";\"));\nvar semi1602 = $ans108;\nvar sbreak1600 = {\"$var\":D};\nvar $temp_lam1588 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__184($n1589) {\nvar $step1587 = 0;\nvar $elidedFrames1593 = 0;\nvar $ans1590 = D;\nvar $al1591 = L[184];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[184],1,$t,false);\n}\nvar n1589 = $n1589;\n// callee optimization;\nwhile(!R.isContinuation($ans1590)) {\nswitch($step1587) {\ncase 0: // caller optimization;\n$ans1590 = blank1594.app(n1589);\nvar anf_arg539 = $ans1590;\n// caller optimization;\n$ans1590 = if$flat1595.app(anf_arg539,hardline1596);\n$step1587 = 1;\nbreak;\ncase 1: return $ans1590;\ndefault: R.ffi.throwSpinnakerError(L[184],$step1587);\n}\n}\nreturn $ans1590;\n};\nvar anf_assign1599 = R.mF($temp_lam1588,\"sbreak\");\nsbreak1600.$var = anf_assign1599;\nR.nothing;\n// caller optimization;\n$ans108 = sbreak1600.$var.app((1));\nvar anf_arg559 = $ans108;\n$step25 = 1;\n$al109 = L[282];\n// omitting isFunction check;\n$ans108 = _plus5.app(comma1601,anf_arg559);\nbreak;\ncase 1: var commabreak1911 = $ans108;\n// caller optimization;\n$ans108 = sbreak1600.$var.app((1));\nvar anf_arg561 = $ans108;\n$step25 = 2;\n$al109 = L[281];\n// omitting isFunction check;\n$ans108 = _plus5.app(semi1602,anf_arg561);\nbreak;\ncase 2: var semibreak1912 = $ans108;\nvar flow$map1654 = {\"$var\":D};\nvar flow1673 = {\"$var\":D};\nvar vert1694 = {\"$var\":D};\nvar parens1706 = {\"$var\":D};\nvar braces1721 = {\"$var\":D};\nvar brackets1734 = {\"$var\":D};\nvar $temp_lam1604 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__185($sep1605,$f1606,$items1607) {\nvar $step1603 = 0;\nvar $elidedFrames1611 = 0;\nvar $ans1608 = D;\nvar $al1609 = L[185];\nif(R.isAR($sep1605)) {\n$step1603 = $sep1605.step;\n$al1609 = $sep1605.from;\n$ans1608 = $sep1605.ans;\n$elidedFrames1611 = $sep1605.elidedFrames;\nsep1605 = $sep1605.args[0];\nf1606 = $sep1605.args[1];\nitems1607 = $sep1605.args[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[185],3,$t,false);\n}\nvar sep1605 = $sep1605;\nvar f1606 = $f1606;\nvar items1607 = $items1607;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1608 = R.mC();\n}\nwhile(!R.isContinuation($ans1608)) {\nswitch($step1603) {\ncase 0: var $temp_lam1613 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__186($acc1614,$item1615) {\nvar $step1612 = 0;\nvar $elidedFrames1619 = 0;\nvar $ans1616 = D;\nvar $al1617 = L[186];\nif(R.isAR($acc1614)) {\n$step1612 = $acc1614.step;\n$al1617 = $acc1614.from;\n$ans1616 = $acc1614.ans;\n$elidedFrames1619 = $acc1614.elidedFrames;\nacc1614 = $acc1614.args[0];\nitem1615 = $acc1614.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[186],2,$t,false);\n}\nvar acc1614 = $acc1614;\nvar item1615 = $item1615;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1616 = R.mC();\n}\nwhile(!R.isContinuation($ans1616)) {\nswitch($step1612) {\ncase 0: // caller optimization;\n$ans1616 = is$mt$doc125.$var.app(acc1614);\nvar anf_if1647 = $ans1616;\n$step1612 = R.checkPyretTrue(anf_if1647)?1:2;\nbreak;\ncase 1: $step1612 = 5;\n$al1617 = L[187];\nif(typeof(f1606.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1617,f1606);\n}\n$ans1616 = f1606.app(item1615);\nbreak;\ncase 2: $step1612 = 3;\n$al1617 = L[190];\nif(typeof(f1606.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1617,f1606);\n}\n$ans1616 = f1606.app(item1615);\nbreak;\ncase 3: var anf_arg1644 = $ans1616;\n$step1612 = 4;\n$al1617 = L[189];\n// omitting isFunction check;\n$ans1616 = _plus5.app(sep1605,anf_arg1644);\nbreak;\ncase 4: var anf_arg565 = $ans1616;\n// caller optimization;\n$ans1616 = group1645.app(anf_arg565);\nvar anf_arg1646 = $ans1616;\n$step1612 = 5;\n$al1617 = L[188];\n// omitting isFunction check;\n$ans1616 = _plus5.app(acc1614,anf_arg1646);\nbreak;\ncase 5: ++R.GAS;\nreturn $ans1616;\ndefault: R.ffi.throwSpinnakerError(L[186],$step1612);\n}\n}\nif($step1612 !== 5) {\n$ans1616.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1617,$temp_lam1613,$step1612,[acc1614,item1615],[],$elidedFrames1619);\n}\nreturn $ans1616;\n};\nvar anf_arg1649 = R.mF($temp_lam1613,\"for-body<line 234, column 2>\");\n$step1603 = 1;\n$al1609 = L[186];\n// omitting isFunction check;\n$ans1608 = fold4.app(anf_arg1649,mt$doc1650,items1607);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1608;\ndefault: R.ffi.throwSpinnakerError(L[185],$step1603);\n}\n}\nif($step1603 !== 1) {\n$ans1608.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1609,$temp_lam1604,$step1603,[sep1605,f1606,items1607],[],$elidedFrames1611);\n}\nreturn $ans1608;\n};\nvar anf_assign1653 = R.mF($temp_lam1604,\"flow-map\");\nflow$map1654.$var = anf_assign1653;\nR.nothing;\nvar $temp_lam1657 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__191($items1658) {\nvar $step1656 = 0;\nvar $elidedFrames1662 = 0;\nvar $ans1659 = D;\nvar $al1660 = L[191];\nif(R.isAR($items1658)) {\n$step1656 = $items1658.step;\n$al1660 = $items1658.from;\n$ans1659 = $items1658.ans;\n$elidedFrames1662 = $items1658.elidedFrames;\nitems1658 = $items1658.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[191],1,$t,false);\n}\nvar items1658 = $items1658;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1659 = R.mC();\n}\nwhile(!R.isContinuation($ans1659)) {\nswitch($step1656) {\ncase 0: // caller optimization;\n$ans1659 = sbreak1600.$var.app((1));\nvar anf_arg625 = $ans1659;\nvar $temp_lam1664 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__192($x1665) {\nvar $step1663 = 0;\nvar $elidedFrames1669 = 0;\nvar $ans1666 = D;\nvar $al1667 = L[192];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[192],1,$t,false);\n}\nvar x1665 = $x1665;\n// callee optimization;\nwhile(!R.isContinuation($ans1666)) {\nswitch($step1663) {\ncase 0: $step1663 = 1;\n$ans1666 = x1665;\nbreak;\ncase 1: return $ans1666;\ndefault: R.ffi.throwSpinnakerError(L[192],$step1663);\n}\n}\nreturn $ans1666;\n};\nvar anf_arg626 = R.mF($temp_lam1664,\"\");\n$step1656 = 1;\n$al1660 = L[193];\n// omitting isFunction check;\n$ans1659 = flow$map1654.$var.app(anf_arg625,anf_arg626,items1658);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1659;\ndefault: R.ffi.throwSpinnakerError(L[191],$step1656);\n}\n}\nif($step1656 !== 1) {\n$ans1659.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1660,$temp_lam1657,$step1656,[items1658],[],$elidedFrames1662);\n}\nreturn $ans1659;\n};\nvar anf_assign1672 = R.mF($temp_lam1657,\"flow\");\nflow1673.$var = anf_assign1672;\nR.nothing;\nvar $temp_lam1675 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__194($items1676) {\nvar $step1674 = 0;\nvar $elidedFrames1681 = 0;\nvar $ans1678 = D;\nvar $al1679 = L[194];\nif(R.isAR($items1676)) {\n$step1674 = $items1676.step;\n$al1679 = $items1676.from;\n$ans1678 = $items1676.ans;\n$elidedFrames1681 = $items1676.elidedFrames;\nitems1676 = $items1676.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[194],1,$t,false);\n}\nvar items1676 = $items1676;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1678 = R.mC();\n}\nwhile(!R.isContinuation($ans1678)) {\nswitch($step1674) {\ncase 0: var $temp_lam1684 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__195($x1685) {\nvar $step1683 = 0;\nvar $elidedFrames1689 = 0;\nvar $ans1686 = D;\nvar $al1687 = L[195];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[195],1,$t,false);\n}\nvar x1685 = $x1685;\n// callee optimization;\nwhile(!R.isContinuation($ans1686)) {\nswitch($step1683) {\ncase 0: $step1683 = 1;\n$ans1686 = x1685;\nbreak;\ncase 1: return $ans1686;\ndefault: R.ffi.throwSpinnakerError(L[195],$step1683);\n}\n}\nreturn $ans1686;\n};\nvar anf_arg629 = R.mF($temp_lam1684,\"\");\n$step1674 = 1;\n$al1679 = L[196];\n// omitting isFunction check;\n$ans1678 = flow$map1654.$var.app(hardline1596,anf_arg629,items1676);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1678;\ndefault: R.ffi.throwSpinnakerError(L[194],$step1674);\n}\n}\nif($step1674 !== 1) {\n$ans1678.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1679,$temp_lam1675,$step1674,[items1676],[],$elidedFrames1681);\n}\nreturn $ans1678;\n};\nvar anf_assign1693 = R.mF($temp_lam1675,\"vert\");\nvert1694.$var = anf_assign1693;\nR.nothing;\nvar $temp_lam1696 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__197($d1697) {\nvar $step1695 = 0;\nvar $elidedFrames1701 = 0;\nvar $ans1698 = D;\nvar $al1699 = L[197];\nif(R.isAR($d1697)) {\n$step1695 = $d1697.step;\n$al1699 = $d1697.from;\n$ans1698 = $d1697.ans;\n$elidedFrames1701 = $d1697.elidedFrames;\nd1697 = $d1697.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[197],1,$t,false);\n}\nvar d1697 = $d1697;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1698 = R.mC();\n}\nwhile(!R.isContinuation($ans1698)) {\nswitch($step1695) {\ncase 0: $step1695 = 1;\n$al1699 = L[199];\n// omitting isFunction check;\n$ans1698 = _plus5.app(lparen1702,d1697);\nbreak;\ncase 1: var anf_arg630 = $ans1698;\n$step1695 = 2;\n$al1699 = L[198];\n// omitting isFunction check;\n$ans1698 = _plus5.app(anf_arg630,rparen1703);\nbreak;\ncase 2: var anf_arg304 = $ans1698;\n// caller optimization;\n$ans1698 = group1645.app(anf_arg304);\n$step1695 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1698;\ndefault: R.ffi.throwSpinnakerError(L[197],$step1695);\n}\n}\nif($step1695 !== 3) {\n$ans1698.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1699,$temp_lam1696,$step1695,[d1697],[],$elidedFrames1701);\n}\nreturn $ans1698;\n};\nvar anf_assign1705 = R.mF($temp_lam1696,\"parens\");\nparens1706.$var = anf_assign1705;\nR.nothing;\nvar $temp_lam1709 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__200($d1710) {\nvar $step1708 = 0;\nvar $elidedFrames1714 = 0;\nvar $ans1711 = D;\nvar $al1712 = L[200];\nif(R.isAR($d1710)) {\n$step1708 = $d1710.step;\n$al1712 = $d1710.from;\n$ans1711 = $d1710.ans;\n$elidedFrames1714 = $d1710.elidedFrames;\nd1710 = $d1710.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[200],1,$t,false);\n}\nvar d1710 = $d1710;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1711 = R.mC();\n}\nwhile(!R.isContinuation($ans1711)) {\nswitch($step1708) {\ncase 0: $step1708 = 1;\n$al1712 = L[202];\n// omitting isFunction check;\n$ans1711 = _plus5.app(lbrace1715,d1710);\nbreak;\ncase 1: var anf_arg650 = $ans1711;\n$step1708 = 2;\n$al1712 = L[201];\n// omitting isFunction check;\n$ans1711 = _plus5.app(anf_arg650,rbrace1716);\nbreak;\ncase 2: var anf_arg668 = $ans1711;\n// caller optimization;\n$ans1711 = group1645.app(anf_arg668);\n$step1708 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1711;\ndefault: R.ffi.throwSpinnakerError(L[200],$step1708);\n}\n}\nif($step1708 !== 3) {\n$ans1711.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1712,$temp_lam1709,$step1708,[d1710],[],$elidedFrames1714);\n}\nreturn $ans1711;\n};\nvar anf_assign1720 = R.mF($temp_lam1709,\"braces\");\nbraces1721.$var = anf_assign1720;\nR.nothing;\nvar $temp_lam1723 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__203($d1724) {\nvar $step1722 = 0;\nvar $elidedFrames1728 = 0;\nvar $ans1725 = D;\nvar $al1726 = L[203];\nif(R.isAR($d1724)) {\n$step1722 = $d1724.step;\n$al1726 = $d1724.from;\n$ans1725 = $d1724.ans;\n$elidedFrames1728 = $d1724.elidedFrames;\nd1724 = $d1724.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[203],1,$t,false);\n}\nvar d1724 = $d1724;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1725 = R.mC();\n}\nwhile(!R.isContinuation($ans1725)) {\nswitch($step1722) {\ncase 0: $step1722 = 1;\n$al1726 = L[205];\n// omitting isFunction check;\n$ans1725 = _plus5.app(lbrack1729,d1724);\nbreak;\ncase 1: var anf_arg694 = $ans1725;\n$step1722 = 2;\n$al1726 = L[204];\n// omitting isFunction check;\n$ans1725 = _plus5.app(anf_arg694,rbrack1730);\nbreak;\ncase 2: var anf_arg319 = $ans1725;\n// caller optimization;\n$ans1725 = group1645.app(anf_arg319);\n$step1722 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1725;\ndefault: R.ffi.throwSpinnakerError(L[203],$step1722);\n}\n}\nif($step1722 !== 3) {\n$ans1725.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1726,$temp_lam1723,$step1722,[d1724],[],$elidedFrames1728);\n}\nreturn $ans1725;\n};\nvar anf_assign1733 = R.mF($temp_lam1723,\"brackets\");\nbrackets1734.$var = anf_assign1733;\nR.nothing;\n// caller optimization;\n$ans108 = str1583.app((\"'\"));\nvar str$squote1754 = $ans108;\n// caller optimization;\n$ans108 = str1583.app((\"\\\"\"));\nvar str$dquote1742 = $ans108;\nvar dquote1745 = {\"$var\":D};\nvar squote1757 = {\"$var\":D};\nvar hang1771 = {\"$var\":D};\nvar prefix1786 = {\"$var\":D};\nvar infix1802 = {\"$var\":D};\nvar infix$break1816 = {\"$var\":D};\nvar surround1833 = {\"$var\":D};\nvar soft$surround1853 = {\"$var\":D};\nvar separate1874 = {\"$var\":D};\nvar surround$separate1891 = {\"$var\":D};\nvar label$align$surround1905 = {\"$var\":D};\nvar $temp_lam1736 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__206($s1737) {\nvar $step1735 = 0;\nvar $elidedFrames1741 = 0;\nvar $ans1738 = D;\nvar $al1739 = L[206];\nif(R.isAR($s1737)) {\n$step1735 = $s1737.step;\n$al1739 = $s1737.from;\n$ans1738 = $s1737.ans;\n$elidedFrames1741 = $s1737.elidedFrames;\ns1737 = $s1737.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[206],1,$t,false);\n}\nvar s1737 = $s1737;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1738 = R.mC();\n}\nwhile(!R.isContinuation($ans1738)) {\nswitch($step1735) {\ncase 0: $step1735 = 1;\n$al1739 = L[208];\n// omitting isFunction check;\n$ans1738 = _plus5.app(str$dquote1742,s1737);\nbreak;\ncase 1: var anf_arg712 = $ans1738;\n$step1735 = 2;\n$al1739 = L[207];\n// omitting isFunction check;\n$ans1738 = _plus5.app(anf_arg712,str$dquote1742);\nbreak;\ncase 2: var anf_arg323 = $ans1738;\n// caller optimization;\n$ans1738 = group1645.app(anf_arg323);\n$step1735 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1738;\ndefault: R.ffi.throwSpinnakerError(L[206],$step1735);\n}\n}\nif($step1735 !== 3) {\n$ans1738.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1739,$temp_lam1736,$step1735,[s1737],[],$elidedFrames1741);\n}\nreturn $ans1738;\n};\nvar anf_assign1744 = R.mF($temp_lam1736,\"dquote\");\ndquote1745.$var = anf_assign1744;\nR.nothing;\nvar $temp_lam1748 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__209($s1749) {\nvar $step1747 = 0;\nvar $elidedFrames1753 = 0;\nvar $ans1750 = D;\nvar $al1751 = L[209];\nif(R.isAR($s1749)) {\n$step1747 = $s1749.step;\n$al1751 = $s1749.from;\n$ans1750 = $s1749.ans;\n$elidedFrames1753 = $s1749.elidedFrames;\ns1749 = $s1749.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[209],1,$t,false);\n}\nvar s1749 = $s1749;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1750 = R.mC();\n}\nwhile(!R.isContinuation($ans1750)) {\nswitch($step1747) {\ncase 0: $step1747 = 1;\n$al1751 = L[211];\n// omitting isFunction check;\n$ans1750 = _plus5.app(str$squote1754,s1749);\nbreak;\ncase 1: var anf_arg327 = $ans1750;\n$step1747 = 2;\n$al1751 = L[210];\n// omitting isFunction check;\n$ans1750 = _plus5.app(anf_arg327,str$squote1754);\nbreak;\ncase 2: var anf_arg661 = $ans1750;\n// caller optimization;\n$ans1750 = group1645.app(anf_arg661);\n$step1747 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1750;\ndefault: R.ffi.throwSpinnakerError(L[209],$step1747);\n}\n}\nif($step1747 !== 3) {\n$ans1750.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1751,$temp_lam1748,$step1747,[s1749],[],$elidedFrames1753);\n}\nreturn $ans1750;\n};\nvar anf_assign1756 = R.mF($temp_lam1748,\"squote\");\nsquote1757.$var = anf_assign1756;\nR.nothing;\nvar $temp_lam1759 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__212($i1760,$d1761) {\nvar $step1758 = 0;\nvar $elidedFrames1765 = 0;\nvar $ans1762 = D;\nvar $al1763 = L[212];\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[212],2,$t,false);\n}\nvar i1760 = $i1760;\nvar d1761 = $d1761;\n// callee optimization;\nwhile(!R.isContinuation($ans1762)) {\nswitch($step1758) {\ncase 0: // caller optimization;\n$ans1762 = nest1766.app(i1760,d1761);\nvar anf_arg1366 = $ans1762;\n// caller optimization;\n$ans1762 = align1767.app(anf_arg1366);\n$step1758 = 1;\nbreak;\ncase 1: return $ans1762;\ndefault: R.ffi.throwSpinnakerError(L[212],$step1758);\n}\n}\nreturn $ans1762;\n};\nvar anf_assign1770 = R.mF($temp_lam1759,\"hang\");\nhang1771.$var = anf_assign1770;\nR.nothing;\nvar $temp_lam1775 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__213($n1776,$b1777,$x1778,$y1779) {\nvar $step1774 = 0;\nvar $elidedFrames1783 = 0;\nvar $ans1780 = D;\nvar $al1781 = L[213];\nif(R.isAR($n1776)) {\n$step1774 = $n1776.step;\n$al1781 = $n1776.from;\n$ans1780 = $n1776.ans;\n$elidedFrames1783 = $n1776.elidedFrames;\nn1776 = $n1776.args[0];\nb1777 = $n1776.args[1];\nx1778 = $n1776.args[2];\ny1779 = $n1776.args[3];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[213],4,$t,false);\n}\nvar n1776 = $n1776;\nvar b1777 = $b1777;\nvar x1778 = $x1778;\nvar y1779 = $y1779;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1780 = R.mC();\n}\nwhile(!R.isContinuation($ans1780)) {\nswitch($step1774) {\ncase 0: // caller optimization;\n$ans1780 = sbreak1600.$var.app(b1777);\nvar anf_arg1370 = $ans1780;\n$step1774 = 1;\n$al1781 = L[215];\n// omitting isFunction check;\n$ans1780 = _plus5.app(anf_arg1370,y1779);\nbreak;\ncase 1: var anf_arg332 = $ans1780;\n// caller optimization;\n$ans1780 = nest1766.app(n1776,anf_arg332);\nvar anf_arg333 = $ans1780;\n$step1774 = 2;\n$al1781 = L[214];\n// omitting isFunction check;\n$ans1780 = _plus5.app(x1778,anf_arg333);\nbreak;\ncase 2: var anf_arg335 = $ans1780;\n// caller optimization;\n$ans1780 = group1645.app(anf_arg335);\n$step1774 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1780;\ndefault: R.ffi.throwSpinnakerError(L[213],$step1774);\n}\n}\nif($step1774 !== 3) {\n$ans1780.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1781,$temp_lam1775,$step1774,[n1776,b1777,x1778,y1779],[],$elidedFrames1783);\n}\nreturn $ans1780;\n};\nvar anf_assign1785 = R.mF($temp_lam1775,\"prefix\");\nprefix1786.$var = anf_assign1785;\nR.nothing;\nvar $temp_lam1788 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__216($n1789,$b1790,$op1791,$x1792,$y1793) {\nvar $step1787 = 0;\nvar $elidedFrames1799 = 0;\nvar $ans1796 = D;\nvar $al1797 = L[216];\nif(R.isAR($n1789)) {\n$step1787 = $n1789.step;\n$al1797 = $n1789.from;\n$ans1796 = $n1789.ans;\n$elidedFrames1799 = $n1789.elidedFrames;\nn1789 = $n1789.args[0];\nb1790 = $n1789.args[1];\nop1791 = $n1789.args[2];\nx1792 = $n1789.args[3];\ny1793 = $n1789.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[216],5,$t,false);\n}\nvar n1789 = $n1789;\nvar b1790 = $b1790;\nvar op1791 = $op1791;\nvar x1792 = $x1792;\nvar y1793 = $y1793;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1796 = R.mC();\n}\nwhile(!R.isContinuation($ans1796)) {\nswitch($step1787) {\ncase 0: $step1787 = 1;\n$al1797 = L[220];\nR._cA(L[220],$type$Number3,n1789);\nbreak;\ncase 1: $step1787 = 2;\n$al1797 = L[221];\nR._cA(L[221],$type$Number3,b1790);\nbreak;\ncase 2: $step1787 = 3;\n$al1797 = L[222];\nR._cA(L[222],PPrintDoc343,op1791);\nbreak;\ncase 3: $step1787 = 4;\n$al1797 = L[223];\nR._cA(L[223],PPrintDoc343,x1792);\nbreak;\ncase 4: $step1787 = 5;\n$al1797 = L[224];\nR._cA(L[224],PPrintDoc343,y1793);\nbreak;\ncase 5: // caller optimization;\n$ans1796 = blank1594.app(b1790);\nvar anf_arg732 = $ans1796;\n$step1787 = 6;\n$al1797 = L[219];\n// omitting isFunction check;\n$ans1796 = _plus5.app(x1792,anf_arg732);\nbreak;\ncase 6: var anf_arg341 = $ans1796;\n$step1787 = 7;\n$al1797 = L[218];\n// omitting isFunction check;\n$ans1796 = _plus5.app(anf_arg341,op1791);\nbreak;\ncase 7: var anf_arg342 = $ans1796;\n$step1787 = 8;\n$al1797 = L[217];\n// omitting isFunction check;\n$ans1796 = prefix1786.$var.app(n1789,b1790,anf_arg342,y1793);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1796;\ndefault: R.ffi.throwSpinnakerError(L[216],$step1787);\n}\n}\nif($step1787 !== 8) {\n$ans1796.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1797,$temp_lam1788,$step1787,[n1789,b1790,op1791,x1792,y1793],[],$elidedFrames1799);\n}\nreturn $ans1796;\n};\nvar anf_assign1801 = R.mF($temp_lam1788,\"infix\");\ninfix1802.$var = anf_assign1801;\nR.nothing;\nvar $temp_lam1804 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__225($n1805,$b1806,$op1807,$x1808,$y1809) {\nvar $step1803 = 0;\nvar $elidedFrames1813 = 0;\nvar $ans1810 = D;\nvar $al1811 = L[225];\nif(R.isAR($n1805)) {\n$step1803 = $n1805.step;\n$al1811 = $n1805.from;\n$ans1810 = $n1805.ans;\n$elidedFrames1813 = $n1805.elidedFrames;\nn1805 = $n1805.args[0];\nb1806 = $n1805.args[1];\nop1807 = $n1805.args[2];\nx1808 = $n1805.args[3];\ny1809 = $n1805.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[225],5,$t,false);\n}\nvar n1805 = $n1805;\nvar b1806 = $b1806;\nvar op1807 = $op1807;\nvar x1808 = $x1808;\nvar y1809 = $y1809;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1810 = R.mC();\n}\nwhile(!R.isContinuation($ans1810)) {\nswitch($step1803) {\ncase 0: $step1803 = 1;\n$al1811 = L[229];\nR._cA(L[229],$type$Number3,n1805);\nbreak;\ncase 1: $step1803 = 2;\n$al1811 = L[230];\nR._cA(L[230],$type$Number3,b1806);\nbreak;\ncase 2: $step1803 = 3;\n$al1811 = L[231];\nR._cA(L[231],PPrintDoc343,op1807);\nbreak;\ncase 3: $step1803 = 4;\n$al1811 = L[232];\nR._cA(L[232],PPrintDoc343,x1808);\nbreak;\ncase 4: $step1803 = 5;\n$al1811 = L[233];\nR._cA(L[233],PPrintDoc343,y1809);\nbreak;\ncase 5: // caller optimization;\n$ans1810 = blank1594.app(b1806);\nvar anf_arg343 = $ans1810;\n$step1803 = 6;\n$al1811 = L[228];\n// omitting isFunction check;\n$ans1810 = _plus5.app(op1807,anf_arg343);\nbreak;\ncase 6: var anf_arg345 = $ans1810;\n$step1803 = 7;\n$al1811 = L[227];\n// omitting isFunction check;\n$ans1810 = _plus5.app(anf_arg345,y1809);\nbreak;\ncase 7: var anf_arg756 = $ans1810;\n$step1803 = 8;\n$al1811 = L[226];\n// omitting isFunction check;\n$ans1810 = prefix1786.$var.app(n1805,b1806,x1808,anf_arg756);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1810;\ndefault: R.ffi.throwSpinnakerError(L[225],$step1803);\n}\n}\nif($step1803 !== 8) {\n$ans1810.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1811,$temp_lam1804,$step1803,[n1805,b1806,op1807,x1808,y1809],[],$elidedFrames1813);\n}\nreturn $ans1810;\n};\nvar anf_assign1815 = R.mF($temp_lam1804,\"infix-break\");\ninfix$break1816.$var = anf_assign1815;\nR.nothing;\nvar $temp_lam1818 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__234($n1819,$b1820,$open1821,$contents1822,$close1823) {\nvar $step1817 = 0;\nvar $elidedFrames1827 = 0;\nvar $ans1824 = D;\nvar $al1825 = L[234];\nif(R.isAR($n1819)) {\n$step1817 = $n1819.step;\n$al1825 = $n1819.from;\n$ans1824 = $n1819.ans;\n$elidedFrames1827 = $n1819.elidedFrames;\nn1819 = $n1819.args[0];\nb1820 = $n1819.args[1];\nopen1821 = $n1819.args[2];\ncontents1822 = $n1819.args[3];\nclose1823 = $n1819.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[234],5,$t,false);\n}\nvar n1819 = $n1819;\nvar b1820 = $b1820;\nvar open1821 = $open1821;\nvar contents1822 = $contents1822;\nvar close1823 = $close1823;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1824 = R.mC();\n}\nwhile(!R.isContinuation($ans1824)) {\nswitch($step1817) {\ncase 0: $step1817 = 1;\n$al1825 = L[241];\nR._cA(L[241],$type$Number3,n1819);\nbreak;\ncase 1: $step1817 = 2;\n$al1825 = L[242];\nR._cA(L[242],$type$Number3,b1820);\nbreak;\ncase 2: $step1817 = 3;\n$al1825 = L[243];\nR._cA(L[243],PPrintDoc343,open1821);\nbreak;\ncase 3: $step1817 = 4;\n$al1825 = L[244];\nR._cA(L[244],PPrintDoc343,contents1822);\nbreak;\ncase 4: $step1817 = 5;\n$al1825 = L[245];\nR._cA(L[245],PPrintDoc343,close1823);\nbreak;\ncase 5: // caller optimization;\n$ans1824 = is$mt$doc125.$var.app(close1823);\nvar anf_if1478 = $ans1824;\n$step1817 = R.checkPyretTrue(anf_if1478)?6:9;\nbreak;\ncase 6: // caller optimization;\n$ans1824 = sbreak1600.$var.app(b1820);\nvar anf_arg1830 = $ans1824;\n$step1817 = 7;\n$al1825 = L[236];\n// omitting isFunction check;\n$ans1824 = _plus5.app(anf_arg1830,contents1822);\nbreak;\ncase 7: var anf_arg765 = $ans1824;\n// caller optimization;\n$ans1824 = nest1766.app(n1819,anf_arg765);\nvar anf_arg363 = $ans1824;\n$step1817 = 8;\n$al1825 = L[235];\n// omitting isFunction check;\n$ans1824 = _plus5.app(open1821,anf_arg363);\nbreak;\ncase 8: var anf_arg1468 = $ans1824;\n// caller optimization;\n$ans1824 = group1645.app(anf_arg1468);\n$step1817 = 14;\nbreak;\ncase 9: // caller optimization;\n$ans1824 = sbreak1600.$var.app(b1820);\nvar anf_arg1469 = $ans1824;\n$step1817 = 10;\n$al1825 = L[240];\n// omitting isFunction check;\n$ans1824 = _plus5.app(anf_arg1469,contents1822);\nbreak;\ncase 10: var anf_arg767 = $ans1824;\n// caller optimization;\n$ans1824 = nest1766.app(n1819,anf_arg767);\nvar anf_arg366 = $ans1824;\n$step1817 = 11;\n$al1825 = L[239];\n// omitting isFunction check;\n$ans1824 = _plus5.app(open1821,anf_arg366);\nbreak;\ncase 11: var anf_arg1477 = $ans1824;\n// caller optimization;\n$ans1824 = sbreak1600.$var.app(b1820);\nvar anf_arg367 = $ans1824;\n$step1817 = 12;\n$al1825 = L[238];\n// omitting isFunction check;\n$ans1824 = _plus5.app(anf_arg1477,anf_arg367);\nbreak;\ncase 12: var anf_arg368 = $ans1824;\n$step1817 = 13;\n$al1825 = L[237];\n// omitting isFunction check;\n$ans1824 = _plus5.app(anf_arg368,close1823);\nbreak;\ncase 13: var anf_arg371 = $ans1824;\n// caller optimization;\n$ans1824 = group1645.app(anf_arg371);\n$step1817 = 14;\nbreak;\ncase 14: ++R.GAS;\nreturn $ans1824;\ndefault: R.ffi.throwSpinnakerError(L[234],$step1817);\n}\n}\nif($step1817 !== 14) {\n$ans1824.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1825,$temp_lam1818,$step1817,[n1819,b1820,open1821,contents1822,close1823],[],$elidedFrames1827);\n}\nreturn $ans1824;\n};\nvar anf_assign1832 = R.mF($temp_lam1818,\"surround\");\nsurround1833.$var = anf_assign1832;\nR.nothing;\nvar $temp_lam1835 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__246($n1836,$b1837,$open1838,$contents1839,$close1840) {\nvar $step1834 = 0;\nvar $elidedFrames1844 = 0;\nvar $ans1841 = D;\nvar $al1842 = L[246];\nif(R.isAR($n1836)) {\n$step1834 = $n1836.step;\n$al1842 = $n1836.from;\n$ans1841 = $n1836.ans;\n$elidedFrames1844 = $n1836.elidedFrames;\nn1836 = $n1836.args[0];\nb1837 = $n1836.args[1];\nopen1838 = $n1836.args[2];\ncontents1839 = $n1836.args[3];\nclose1840 = $n1836.args[4];\nanf_arg1850 = $n1836.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[246],5,$t,false);\n}\nvar n1836 = $n1836;\nvar b1837 = $b1837;\nvar open1838 = $open1838;\nvar contents1839 = $contents1839;\nvar close1840 = $close1840;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1841 = R.mC();\n}\nwhile(!R.isContinuation($ans1841)) {\nswitch($step1834) {\ncase 0: $step1834 = 1;\n$al1842 = L[253];\nR._cA(L[253],$type$Number3,n1836);\nbreak;\ncase 1: $step1834 = 2;\n$al1842 = L[254];\nR._cA(L[254],$type$Number3,b1837);\nbreak;\ncase 2: $step1834 = 3;\n$al1842 = L[255];\nR._cA(L[255],PPrintDoc343,open1838);\nbreak;\ncase 3: $step1834 = 4;\n$al1842 = L[256];\nR._cA(L[256],PPrintDoc343,contents1839);\nbreak;\ncase 4: $step1834 = 5;\n$al1842 = L[257];\nR._cA(L[257],PPrintDoc343,close1840);\nbreak;\ncase 5: // caller optimization;\n$ans1841 = is$mt$doc125.$var.app(close1840);\nvar anf_if921 = $ans1841;\n$step1834 = R.checkPyretTrue(anf_if921)?6:9;\nbreak;\ncase 6: // caller optimization;\n$ans1841 = sbreak1600.$var.app(b1837);\nvar anf_arg376 = $ans1841;\n$step1834 = 7;\n$al1842 = L[248];\n// omitting isFunction check;\n$ans1841 = _plus5.app(anf_arg376,contents1839);\nbreak;\ncase 7: var anf_arg377 = $ans1841;\n// caller optimization;\n$ans1841 = group1645.app(anf_arg377);\nvar anf_arg827 = $ans1841;\n// caller optimization;\n$ans1841 = nest1766.app(n1836,anf_arg827);\nvar anf_arg378 = $ans1841;\n$step1834 = 8;\n$al1842 = L[247];\n// omitting isFunction check;\n$ans1841 = _plus5.app(open1838,anf_arg378);\nbreak;\ncase 8: var anf_arg381 = $ans1841;\n// caller optimization;\n$ans1841 = group1645.app(anf_arg381);\n$step1834 = 14;\nbreak;\ncase 9: // caller optimization;\n$ans1841 = sbreak1600.$var.app(b1837);\nvar anf_arg829 = $ans1841;\n$step1834 = 10;\n$al1842 = L[252];\n// omitting isFunction check;\n$ans1841 = _plus5.app(anf_arg829,contents1839);\nbreak;\ncase 10: var anf_arg830 = $ans1841;\n// caller optimization;\n$ans1841 = group1645.app(anf_arg830);\nvar anf_arg1642 = $ans1841;\n// caller optimization;\n$ans1841 = nest1766.app(n1836,anf_arg1642);\nvar anf_arg1643 = $ans1841;\n$step1834 = 11;\n$al1842 = L[251];\n// omitting isFunction check;\n$ans1841 = _plus5.app(open1838,anf_arg1643);\nbreak;\ncase 11: var anf_arg1850 = $ans1841;\n// caller optimization;\n$ans1841 = sbreak1600.$var.app(b1837);\nvar anf_arg842 = $ans1841;\n$step1834 = 12;\n$al1842 = L[250];\n// omitting isFunction check;\n$ans1841 = _plus5.app(anf_arg842,close1840);\nbreak;\ncase 12: var anf_arg831 = $ans1841;\n// caller optimization;\n$ans1841 = group1645.app(anf_arg831);\nvar anf_arg832 = $ans1841;\n$step1834 = 13;\n$al1842 = L[249];\n// omitting isFunction check;\n$ans1841 = _plus5.app(anf_arg1850,anf_arg832);\nbreak;\ncase 13: var anf_arg839 = $ans1841;\n// caller optimization;\n$ans1841 = group1645.app(anf_arg839);\n$step1834 = 14;\nbreak;\ncase 14: ++R.GAS;\nreturn $ans1841;\ndefault: R.ffi.throwSpinnakerError(L[246],$step1834);\n}\n}\nif($step1834 !== 14) {\n$ans1841.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1842,$temp_lam1835,$step1834,[n1836,b1837,open1838,contents1839,close1840],[anf_arg1850],$elidedFrames1844);\n}\nreturn $ans1841;\n};\nvar anf_assign1852 = R.mF($temp_lam1835,\"soft-surround\");\nsoft$surround1853.$var = anf_assign1852;\nR.nothing;\nvar $temp_lam1855 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__258($sep1856,$docs1857) {\nvar $step1854 = 0;\nvar $elidedFrames1861 = 0;\nvar $ans1858 = D;\nvar $al1859 = L[258];\nif(R.isAR($sep1856)) {\n$step1854 = $sep1856.step;\n$al1859 = $sep1856.from;\n$ans1858 = $sep1856.ans;\n$elidedFrames1861 = $sep1856.elidedFrames;\nsep1856 = $sep1856.args[0];\ndocs1857 = $sep1856.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[258],2,$t,false);\n}\nvar sep1856 = $sep1856;\nvar docs1857 = $docs1857;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1858 = R.mC();\n}\nwhile(!R.isContinuation($ans1858)) {\nswitch($step1854) {\ncase 0: $step1854 = 1;\n$al1859 = L[262];\nR._cA(L[262],PPrintDoc343,sep1856);\nbreak;\ncase 1: $step1854 = 2;\n$al1859 = L[263];\nR._cA(L[263],List5,docs1857);\nbreak;\ncase 2: var $temp_lam1863 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__259($acc1864,$d1865) {\nvar $step1862 = 0;\nvar $elidedFrames1869 = 0;\nvar $ans1866 = D;\nvar $al1867 = L[259];\nif(R.isAR($acc1864)) {\n$step1862 = $acc1864.step;\n$al1867 = $acc1864.from;\n$ans1866 = $acc1864.ans;\n$elidedFrames1869 = $acc1864.elidedFrames;\nacc1864 = $acc1864.args[0];\nd1865 = $acc1864.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[259],2,$t,false);\n}\nvar acc1864 = $acc1864;\nvar d1865 = $d1865;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1866 = R.mC();\n}\nwhile(!R.isContinuation($ans1866)) {\nswitch($step1862) {\ncase 0: // caller optimization;\n$ans1866 = is$mt$doc125.$var.app(d1865);\nvar anf_if1871 = $ans1866;\n$step1862 = R.checkPyretTrue(anf_if1871)?1:2;\nbreak;\ncase 1: $step1862 = 6;\n$ans1866 = acc1864;\nbreak;\ncase 2: // caller optimization;\n$ans1866 = is$mt$doc125.$var.app(acc1864);\nvar anf_if1870 = $ans1866;\n$step1862 = R.checkPyretTrue(anf_if1870)?3:4;\nbreak;\ncase 3: $step1862 = 6;\n$ans1866 = d1865;\nbreak;\ncase 4: $step1862 = 5;\n$al1867 = L[261];\n// omitting isFunction check;\n$ans1866 = _plus5.app(acc1864,sep1856);\nbreak;\ncase 5: var anf_arg845 = $ans1866;\n$step1862 = 6;\n$al1867 = L[260];\n// omitting isFunction check;\n$ans1866 = _plus5.app(anf_arg845,d1865);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1866;\ndefault: R.ffi.throwSpinnakerError(L[259],$step1862);\n}\n}\nif($step1862 !== 6) {\n$ans1866.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1867,$temp_lam1863,$step1862,[acc1864,d1865],[],$elidedFrames1869);\n}\nreturn $ans1866;\n};\nvar anf_arg846 = R.mF($temp_lam1863,\"for-body<line 270, column 2>\");\n$step1854 = 3;\n$al1859 = L[259];\n// omitting isFunction check;\n$ans1858 = fold4.app(anf_arg846,mt$doc1650,docs1857);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1858;\ndefault: R.ffi.throwSpinnakerError(L[258],$step1854);\n}\n}\nif($step1854 !== 3) {\n$ans1858.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1859,$temp_lam1855,$step1854,[sep1856,docs1857],[],$elidedFrames1861);\n}\nreturn $ans1858;\n};\nvar anf_assign488 = R.mF($temp_lam1855,\"separate\");\nseparate1874.$var = anf_assign488;\nR.nothing;\nvar $temp_lam1876 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__264($n1877,$b1878,$void1879,$open1880,$sep1881,$close1882,$docs1883) {\nvar $step1875 = 0;\nvar $elidedFrames1888 = 0;\nvar $ans1885 = D;\nvar $al1886 = L[264];\nif(R.isAR($n1877)) {\n$step1875 = $n1877.step;\n$al1886 = $n1877.from;\n$ans1885 = $n1877.ans;\n$elidedFrames1888 = $n1877.elidedFrames;\nn1877 = $n1877.args[0];\nb1878 = $n1877.args[1];\nvoid1879 = $n1877.args[2];\nopen1880 = $n1877.args[3];\nsep1881 = $n1877.args[4];\nclose1882 = $n1877.args[5];\ndocs1883 = $n1877.args[6];\n} else {\nvar $l = arguments.length;\nif($l !== 7) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[264],7,$t,false);\n}\nvar n1877 = $n1877;\nvar b1878 = $b1878;\nvar void1879 = $void1879;\nvar open1880 = $open1880;\nvar sep1881 = $sep1881;\nvar close1882 = $close1882;\nvar docs1883 = $docs1883;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1885 = R.mC();\n}\nwhile(!R.isContinuation($ans1885)) {\nswitch($step1875) {\ncase 0: $step1875 = 1;\n$al1886 = L[267];\nR._cA(L[267],$type$Number3,n1877);\nbreak;\ncase 1: $step1875 = 2;\n$al1886 = L[268];\nR._cA(L[268],$type$Number3,b1878);\nbreak;\ncase 2: $step1875 = 3;\n$al1886 = L[269];\nR._cA(L[269],PPrintDoc343,void1879);\nbreak;\ncase 3: $step1875 = 4;\n$al1886 = L[270];\nR._cA(L[270],PPrintDoc343,open1880);\nbreak;\ncase 4: $step1875 = 5;\n$al1886 = L[271];\nR._cA(L[271],PPrintDoc343,sep1881);\nbreak;\ncase 5: $step1875 = 6;\n$al1886 = L[272];\nR._cA(L[272],PPrintDoc343,close1882);\nbreak;\ncase 6: $step1875 = 7;\n$al1886 = L[273];\nR._cA(L[273],List5,docs1883);\nbreak;\ncase 7: // caller optimization;\n$ans1885 = is$empty3.app(docs1883);\nvar anf_if1889 = $ans1885;\n$step1875 = R.checkPyretTrue(anf_if1889)?8:9;\nbreak;\ncase 8: $step1875 = 11;\n$ans1885 = void1879;\nbreak;\ncase 9: $step1875 = 10;\n$al1886 = L[266];\n// omitting isFunction check;\n$ans1885 = separate1874.$var.app(sep1881,docs1883);\nbreak;\ncase 10: var anf_arg847 = $ans1885;\n$step1875 = 11;\n$al1886 = L[265];\n// omitting isFunction check;\n$ans1885 = surround1833.$var.app(n1877,b1878,open1880,anf_arg847,close1882);\nbreak;\ncase 11: ++R.GAS;\nreturn $ans1885;\ndefault: R.ffi.throwSpinnakerError(L[264],$step1875);\n}\n}\nif($step1875 !== 11) {\n$ans1885.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1886,$temp_lam1876,$step1875,[n1877,b1878,void1879,open1880,sep1881,close1882,docs1883],[],$elidedFrames1888);\n}\nreturn $ans1885;\n};\nvar anf_assign508 = R.mF($temp_lam1876,\"surround-separate\");\nsurround$separate1891.$var = anf_assign508;\nR.nothing;\nvar $temp_lam1893 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__274($label1894,$open1895,$sep1896,$contents1897,$close1898) {\nvar $step1892 = 0;\nvar $elidedFrames1902 = 0;\nvar $ans1899 = D;\nvar $al1900 = L[274];\nif(R.isAR($label1894)) {\n$step1892 = $label1894.step;\n$al1900 = $label1894.from;\n$ans1899 = $label1894.ans;\n$elidedFrames1902 = $label1894.elidedFrames;\nlabel1894 = $label1894.args[0];\nopen1895 = $label1894.args[1];\nsep1896 = $label1894.args[2];\ncontents1897 = $label1894.args[3];\nclose1898 = $label1894.args[4];\nanf_arg919 = $label1894.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[274],5,$t,false);\n}\nvar label1894 = $label1894;\nvar open1895 = $open1895;\nvar sep1896 = $sep1896;\nvar contents1897 = $contents1897;\nvar close1898 = $close1898;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1899 = R.mC();\n}\nwhile(!R.isContinuation($ans1899)) {\nswitch($step1892) {\ncase 0: $step1892 = 1;\n$al1900 = L[279];\n// omitting isFunction check;\n$ans1899 = separate1874.$var.app(sep1896,contents1897);\nbreak;\ncase 1: var anf_arg869 = $ans1899;\n// caller optimization;\n$ans1899 = align1767.app(anf_arg869);\nvar anf_arg887 = $ans1899;\n$step1892 = 2;\n$al1900 = L[278];\n// omitting isFunction check;\n$ans1899 = _plus5.app(open1895,anf_arg887);\nbreak;\ncase 2: var anf_arg919 = $ans1899;\n// caller optimization;\n$ans1899 = sbreak1600.$var.app((0));\nvar anf_arg528 = $ans1899;\n$step1892 = 3;\n$al1900 = L[277];\n// omitting isFunction check;\n$ans1899 = _plus5.app(anf_arg528,close1898);\nbreak;\ncase 3: var anf_arg532 = $ans1899;\n// caller optimization;\n$ans1899 = group1645.app(anf_arg532);\nvar anf_arg537 = $ans1899;\n$step1892 = 4;\n$al1900 = L[276];\n// omitting isFunction check;\n$ans1899 = _plus5.app(anf_arg919,anf_arg537);\nbreak;\ncase 4: var anf_arg798 = $ans1899;\n// caller optimization;\n$ans1899 = align1767.app(anf_arg798);\nvar anf_arg797 = $ans1899;\n$step1892 = 5;\n$al1900 = L[275];\n// omitting isFunction check;\n$ans1899 = _plus5.app(label1894,anf_arg797);\nbreak;\ncase 5: var anf_arg802 = $ans1899;\n// caller optimization;\n$ans1899 = group1645.app(anf_arg802);\n$step1892 = 6;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1899;\ndefault: R.ffi.throwSpinnakerError(L[274],$step1892);\n}\n}\nif($step1892 !== 6) {\n$ans1899.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1900,$temp_lam1893,$step1892,[label1894,open1895,sep1896,contents1897,close1898],[anf_arg919],$elidedFrames1902);\n}\nreturn $ans1899;\n};\nvar anf_assign1904 = R.mF($temp_lam1893,\"label-align-surround\");\nlabel$align$surround1905.$var = anf_assign1904;\nR.nothing;\n$step25 = 3;\n$ans108 = R.maybeMethodCall2(builtins1,\"trace-value\",L[280],L[280],nothing2);\nbreak;\ncase 3: var answer1913 = $ans108;\n$step25 = 4;\n$ans108 = R.maybeMethodCall0(builtins1,\"current-checker\",L[92]);\nbreak;\ncase 4: var anf_method_obj1906 = $ans108;\n$step25 = 5;\n$ans108 = R.maybeMethodCall0(anf_method_obj1906,\"results\",L[92]);\nbreak;\ncase 5: var checks1914 = $ans108;\n$step25 = 6;\n$ans108 = R.mO({\"answer\":answer1913,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-modules\":{\"VS\":VS11},\n\"defined-values\":{\"braces\":braces1721.$var,\n\"rbrace\":rbrace1716,\n\"soft-surround\":soft$surround1853.$var,\n\"rangle\":rangle1910,\n\"is-hardline\":is$hardline463.$var,\n\"is-align\":is$align483.$var,\n\"infix-break\":infix$break1816.$var,\n\"separate\":separate1874.$var,\n\"str-squote\":str$squote1754,\n\"align\":align1767,\n\"is-if-flat\":is$if$flat479.$var,\n\"rbrack\":rbrack1730,\n\"lbrace\":lbrace1715,\n\"langle\":langle1909,\n\"parens\":parens1706.$var,\n\"squote\":squote1757.$var,\n\"if-flat\":if$flat1595,\n\"number\":number1586.$var,\n\"commabreak\":commabreak1911,\n\"brackets\":brackets1734.$var,\n\"sbreak\":sbreak1600.$var,\n\"lbrack\":lbrack1729,\n\"flow\":flow1673.$var,\n\"is-str\":is$str459.$var,\n\"semi\":semi1602,\n\"infix\":infix1802.$var,\n\"vert\":vert1694.$var,\n\"str\":str1583,\n\"semibreak\":semibreak1912,\n\"is-blank\":is$blank468.$var,\n\"mt-doc\":mt$doc1650,\n\"hang\":hang1771.$var,\n\"prefix\":prefix1786.$var,\n\"surround-separate\":surround$separate1891.$var,\n\"item\":item511.$var,\n\"blank\":blank1594,\n\"concat\":concat1908,\n\"str-dquote\":str$dquote1742,\n\"is-mt-doc\":is$mt$doc125.$var,\n\"comma\":comma1601,\n\"align-spaces\":align$spaces490.$var,\n\"is-item\":is$item510.$var,\n\"is-Item\":is$Item507.$var,\n\"is-concat\":is$concat472.$var,\n\"format\":format354.$var,\n\"dquote\":dquote1745.$var,\n\"nest\":nest1766,\n\"is-PPrintDoc\":is$PPrintDoc454.$var,\n\"is-align-spaces\":is$align$spaces487.$var,\n\"rparen\":rparen1703,\n\"is-nest\":is$nest475.$var,\n\"is-group\":is$group492.$var,\n\"collect-concats\":collect$concats523.$var,\n\"flow-map\":flow$map1654.$var,\n\"lparen\":lparen1702,\n\"surround\":surround1833.$var,\n\"group\":group1645,\n\"label-align-surround\":label$align$surround1905.$var,\n\"hardline\":hardline1596},\n\"defined-types\":{\"Item\":Item1907,\n\"PPrintDoc\":PPrintDoc343},\n\"provide-plus-types\":R.mO({\"values\":R.mO({\"mt-doc\":mt$doc1650,\n\"is-mt-doc\":is$mt$doc125.$var,\n\"str\":str1583,\n\"number\":number1586.$var,\n\"hardline\":hardline1596,\n\"blank\":blank1594,\n\"sbreak\":sbreak1600.$var,\n\"concat\":concat1908,\n\"nest\":nest1766,\n\"if-flat\":if$flat1595,\n\"group\":group1645,\n\"flow\":flow1673.$var,\n\"flow-map\":flow$map1654.$var,\n\"vert\":vert1694.$var,\n\"parens\":parens1706.$var,\n\"braces\":braces1721.$var,\n\"brackets\":brackets1734.$var,\n\"dquote\":dquote1745.$var,\n\"squote\":squote1757.$var,\n\"align\":align1767,\n\"hang\":hang1771.$var,\n\"prefix\":prefix1786.$var,\n\"infix\":infix1802.$var,\n\"infix-break\":infix$break1816.$var,\n\"separate\":separate1874.$var,\n\"surround\":surround1833.$var,\n\"soft-surround\":soft$surround1853.$var,\n\"surround-separate\":surround$separate1891.$var,\n\"label-align-surround\":label$align$surround1905.$var,\n\"lparen\":lparen1702,\n\"rparen\":rparen1703,\n\"lbrace\":lbrace1715,\n\"rbrace\":rbrace1716,\n\"lbrack\":lbrack1729,\n\"rbrack\":rbrack1730,\n\"langle\":langle1909,\n\"rangle\":rangle1910,\n\"comma\":comma1601,\n\"commabreak\":commabreak1911,\n\"semi\":semi1602,\n\"semibreak\":semibreak1912,\n\"is-PPrintDoc\":is$PPrintDoc454.$var,\n\"is-str\":is$str459.$var,\n\"is-hardline\":is$hardline463.$var,\n\"is-blank\":is$blank468.$var,\n\"is-concat\":is$concat472.$var,\n\"is-nest\":is$nest475.$var,\n\"is-if-flat\":is$if$flat479.$var,\n\"is-align\":is$align483.$var,\n\"align-spaces\":align$spaces490.$var,\n\"is-align-spaces\":is$align$spaces487.$var,\n\"is-group\":is$group492.$var,\n\"is-Item\":is$Item507.$var,\n\"item\":item511.$var,\n\"is-item\":is$item510.$var}),\n\"types\":{\"PPrintDoc\":PPrintDoc343,\n\"Item\":Item1907},\n\"modules\":{}}),\n\"checks\":checks1914});\nbreak;\ncase 6: ++R.GAS;\nreturn $ans108;\ndefault: R.ffi.throwSpinnakerError(L[283],$step25);\n}\n}\nif($step25 !== 6) {\n$ans108.stack[R.EXN_STACKHEIGHT++] = R.mAR($al109,$toplevel26,$step25,[],[dquote1745,blank1594,vert1694,is$group492,rparen1703,soft$surround1853,is$PPrintDoc454,str1583,prefix1786,flow1673,is$align$spaces487,align$spaces490,comma1601,collect$concats523,is$concat472,is$align483,sbreak1600,number1586,semi1602,str$dquote1742,is$if$flat479,surround$separate1891,is$item510,brackets1734,Item1907,rbrack1730,concat1908,semibreak1912,infix1802,commabreak1911,flow$map1654,is$nest475,squote1757,lbrack1729,label$align$surround1905,separate1874,hardline1596,lbrace1715,is$Item507,parens1706,is$mt$doc125,is$hardline463,if$flat1595,braces1721,infix$break1816,mt$doc1650,align1767,rangle1910,item511,PPrintDoc343,format354,str$squote1754,surround1833,rbrace1716,langle1909,lparen1702,group1645,answer1913,is$str459,hang1771,is$blank468,nest1766],$elidedFrames111);\n}\nreturn $ans108;\n};\nreturn R.safeCall($toplevel26,function module_load(moduleVal) {\nR.modules[\"$builtin://pprint12\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"modules":{},
"values":{"hardline":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
208,
0,
7147,
208,
35,
7182],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"label-align-surround":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
33,
2,
598,
33,
44,
640],
"definition-bind-site":["builtin://pprint",
283,
0,
9857,
285,
3,
10010],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"label-align-surround",
"typ":"tany"},
"group":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
210,
0,
7249,
210,
65,
7314],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"group",
"typ":"tany"},
"surround":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
30,
2,
504,
30,
20,
522],
"definition-bind-site":["builtin://pprint",
258,
0,
8910,
262,
3,
9160],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"surround",
"typ":"tany"},
"lparen":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
34,
2,
644,
34,
16,
658],
"definition-bind-site":["builtin://pprint",
218,
0,
7674,
218,
17,
7691],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"flow-map":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
17,
2,
260,
17,
20,
278],
"definition-bind-site":["builtin://pprint",
233,
0,
7960,
239,
3,
8127],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"flow-map",
"typ":"tany"},
"is-group":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
64,
2,
1671,
64,
72,
1741],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-group",
"typ":"tany"},
"is-nest":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
60,
2,
1334,
60,
89,
1421],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-nest",
"typ":"tany"},
"rparen":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
35,
2,
662,
35,
16,
676],
"definition-bind-site":["builtin://pprint",
219,
0,
7692,
219,
17,
7709],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-align-spaces":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
63,
2,
1594,
63,
76,
1668],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-align-spaces",
"typ":"tany"},
"is-PPrintDoc":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
54,
0,
966,
92,
3,
2986],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"nest":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
212,
0,
7409,
212,
69,
7478],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"nest",
"typ":"tany"},
"dquote":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
22,
2,
354,
22,
16,
368],
"definition-bind-site":["builtin://pprint",
247,
0,
8437,
247,
53,
8490],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"dquote",
"typ":"tany"},
"is-concat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
59,
2,
1240,
59,
93,
1331],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-concat",
"typ":"tany"},
"is-Item":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
93,
0,
2987,
95,
3,
3064],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-item":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
94,
2,
3000,
94,
62,
3060],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-item",
"typ":"tany"},
"align-spaces":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
63,
2,
1594,
63,
76,
1668],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"align-spaces",
"typ":"tany"},
"comma":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
42,
2,
788,
42,
14,
800],
"definition-bind-site":["builtin://pprint",
226,
0,
7818,
226,
16,
7834],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-mt-doc":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
55,
2,
984,
55,
57,
1039],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-mt-doc",
"typ":"tany"},
"concat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
213,
0,
7479,
213,
44,
7523],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"concat",
"typ":"tany"},
"blank":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
214,
0,
7524,
214,
45,
7569],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"blank",
"typ":"tany"},
"item":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
94,
2,
3000,
94,
62,
3060],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"item",
"typ":"tany"},
"surround-separate":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
32,
2,
558,
32,
38,
594],
"definition-bind-site":["builtin://pprint",
277,
0,
9624,
281,
3,
9855],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"surround-separate",
"typ":"tany"},
"prefix":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
26,
2,
420,
26,
16,
434],
"definition-bind-site":["builtin://pprint",
251,
0,
8584,
251,
61,
8645],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"prefix",
"typ":"tany"},
"hang":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
25,
2,
406,
25,
12,
416],
"definition-bind-site":["builtin://pprint",
250,
0,
8546,
250,
37,
8583],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":2,
"name":"hang",
"typ":"tany"},
"mt-doc":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
207,
0,
7114,
207,
32,
7146],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-blank":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
58,
2,
1170,
58,
69,
1237],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-blank",
"typ":"tany"},
"semibreak":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
45,
2,
844,
45,
22,
864],
"definition-bind-site":["builtin://pprint",
231,
0,
7930,
231,
28,
7958],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
215,
0,
7570,
215,
56,
7626],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"str",
"typ":"tany"},
"vert":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
18,
2,
282,
18,
12,
292],
"definition-bind-site":["builtin://pprint",
241,
0,
8191,
241,
61,
8252],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"vert",
"typ":"tany"},
"infix":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
27,
2,
438,
27,
14,
450],
"definition-bind-site":["builtin://pprint",
252,
0,
8646,
254,
3,
8774],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"infix",
"typ":"tany"},
"semi":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
44,
2,
830,
44,
12,
840],
"definition-bind-site":["builtin://pprint",
227,
0,
7835,
227,
15,
7850],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
56,
2,
1042,
56,
67,
1107],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-str",
"typ":"tany"},
"flow":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
16,
2,
246,
16,
12,
256],
"definition-bind-site":["builtin://pprint",
240,
0,
8128,
240,
62,
8190],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"flow",
"typ":"tany"},
"lbrack":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
38,
2,
716,
38,
16,
730],
"definition-bind-site":["builtin://pprint",
222,
0,
7746,
222,
17,
7763],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"sbreak":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
11,
2,
160,
11,
16,
174],
"definition-bind-site":["builtin://pprint",
229,
0,
7852,
229,
46,
7898],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":2,
"name":"sbreak",
"typ":"tany"},
"brackets":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
21,
2,
332,
21,
20,
350],
"definition-bind-site":["builtin://pprint",
244,
0,
8345,
244,
47,
8392],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"brackets",
"typ":"tany"},
"commabreak":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
43,
2,
804,
43,
24,
826],
"definition-bind-site":["builtin://pprint",
230,
0,
7899,
230,
30,
7929],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"number":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
8,
2,
104,
8,
16,
118],
"definition-bind-site":["builtin://pprint",
217,
0,
7628,
217,
45,
7673],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"number",
"typ":"tany"},
"if-flat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
211,
0,
7315,
211,
93,
7408],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"if-flat",
"typ":"tany"},
"squote":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
23,
2,
372,
23,
16,
386],
"definition-bind-site":["builtin://pprint",
248,
0,
8491,
248,
53,
8544],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"squote",
"typ":"tany"},
"parens":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
19,
2,
296,
19,
16,
310],
"definition-bind-site":["builtin://pprint",
242,
0,
8253,
242,
45,
8298],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"parens",
"typ":"tany"},
"langle":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
40,
2,
752,
40,
16,
766],
"definition-bind-site":["builtin://pprint",
224,
0,
7782,
224,
17,
7799],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"lbrace":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
36,
2,
680,
36,
16,
694],
"definition-bind-site":["builtin://pprint",
220,
0,
7710,
220,
17,
7727],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"rbrack":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
39,
2,
734,
39,
16,
748],
"definition-bind-site":["builtin://pprint",
223,
0,
7764,
223,
17,
7781],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-if-flat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
61,
2,
1424,
61,
96,
1518],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-if-flat",
"typ":"tany"},
"align":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
209,
0,
7183,
209,
65,
7248],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"align",
"typ":"tany"},
"separate":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
29,
2,
482,
29,
20,
500],
"definition-bind-site":["builtin://pprint",
269,
0,
9439,
276,
3,
9623],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"separate",
"typ":"tany"},
"infix-break":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
28,
2,
454,
28,
26,
478],
"definition-bind-site":["builtin://pprint",
255,
0,
8775,
257,
3,
8909],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"infix-break",
"typ":"tany"},
"is-align":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
62,
2,
1521,
62,
72,
1591],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-align",
"typ":"tany"},
"is-hardline":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
57,
2,
1110,
57,
59,
1167],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-hardline",
"typ":"tany"},
"rangle":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
41,
2,
770,
41,
16,
784],
"definition-bind-site":["builtin://pprint",
225,
0,
7800,
225,
17,
7817],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"soft-surround":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
31,
2,
526,
31,
30,
554],
"definition-bind-site":["builtin://pprint",
263,
0,
9161,
267,
3,
9437],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"soft-surround",
"typ":"tany"},
"rbrace":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
37,
2,
698,
37,
16,
712],
"definition-bind-site":["builtin://pprint",
221,
0,
7728,
221,
17,
7745],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"braces":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
20,
2,
314,
20,
16,
328],
"definition-bind-site":["builtin://pprint",
243,
0,
8299,
243,
45,
8344],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"braces",
"typ":"tany"}},
"datatypes":{"Item":["data",{"local-bind-site":["builtin://pprint",
93,
0,
2987,
95,
3,
3064],
"definition-bind-site":["builtin://pprint",
93,
0,
2987,
95,
3,
3064],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},"Item",[],[["item",
[["indent",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["is-flat",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}],["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}]],
{}]],{}],
"PPrintDoc":["data",{"local-bind-site":["builtin://pprint",
54,
0,
966,
92,
3,
2986],
"definition-bind-site":["builtin://pprint",
54,
0,
966,
92,
3,
2986],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},"PPrintDoc",[],[["mt-doc",
[["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["str",
[["s",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["hardline",
[["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["blank",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["concat",
[["fst",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["snd",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["nest",
[["indent",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["if-flat",
[["flat",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["vert",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["align",
[["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["align-spaces",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["group",
[["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}]],{"pretty":["arrow",
["tany",
"tany"],
"tany"],
"_output":["arrow",
["tany"],
"tany"],
"_plus":["arrow",
["tany",
"tany"],
"tany"]}]},
"aliases":{"Item":"tany",
"PPrintDoc":"tany"}},
"requires":[{"import-type":"builtin",
"name":"base"},
{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"lists"},
{"import-type":"builtin",
"name":"valueskeleton"}]})