({"theMap":"{\"version\":3,\"sources\":[\"builtin://s-exp-structs\"],\"names\":[\"builtin://s-exp-structs\",\",9,0,74,14,3,190\",\",10,2,88,10,31,117\",\",11,2,120,11,22,140\",\",12,2,143,12,22,163\",\",13,2,166,13,22,186\"],\"mappingsoBAQDC,6BARCD;AAAAA;AAAAA;AAAAA;AAAAA,oBASCE,iCATDF;AAAAA;AAAAA;AAAAA;AAAAA,oBASCE,8BATDF;AAAAA;AAAAA;AAAAA;AAAAA,oBAUCG,gCAVDH;AAAAA;AAAAA;AAAAA;AAAAA,oBAUCG,6BAVDH;AAAAA;AAAAA;AAAAA;AAAAA,oBAWCI,gCAXDJ;AAAAA;AAAAA;AAAAA;AAAAA,oBAWCI,6BAXDJ;AAAAA;AAAAA;AAAAA;AAAAA,oBAYCK,gCAZDL;AAAAA;AAAAA;AAAAA;AAAAA,oBAYCK,6BAZDL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,SAQDC,oDARCD;AAAAA;AAAAA;AAAAA;AAAAA,SAQDC,oDARCD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA\",\"file\":\"builtin://s-exp-structs\"}",
"theModule":"function _03a21b609295fa8706921499591c6de05a05276e378ee63ecd3a023126689be0__10(R,NAMESPACE,M,$$underscore_import5,$$included$127) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"builtin://s-exp-structs\";\nvar D = R.undefined;\nvar L = [[M,10,2,88,10,31,117],\n[M,10,19,105,10,30,116],\n[M,11,2,120,11,22,140],\n[M,11,15,133,11,21,139],\n[M,12,2,143,12,22,163],\n[M,12,15,156,12,21,162],\n[M,13,2,166,13,22,186],\n[M,13,15,179,13,21,185],\n[M,9,0,74,14,3,190],\n[\"dummy location\"],\n[M,3,0,13,14,3,190]];\nvar builtins1 = R.getModuleField(\"builtin://global\",\"values\",\"builtins\");\nvar nothing2 = R.getModuleField(\"builtin://global\",\"values\",\"nothing\");\nvar $type$Number3 = R.getModuleField(\"builtin://global\",\"types\",\"Number\");\nvar $type$String8 = R.getModuleField(\"builtin://global\",\"types\",\"String\");\nvar $underscore_import3 = $$underscore_import5;\nvar $included$123 = $$included$127;\nvar List1 = R.getModuleField(\"builtin://lists\",\"types\",\"List\");\nvar $toplevel21 = function _03a21b609295fa8706921499591c6de05a05276e378ee63ecd3a023126689be0__10($$resumer13) {\nvar $step20 = 0;\nvar $elidedFrames82 = 0;\nvar $ans79 = D;\nvar $al80 = L[10];\nif(R.isAR($$resumer13)) {\n$step20 = $$resumer13.step;\n$al80 = $$resumer13.from;\n$ans79 = $$resumer13.ans;\n$elidedFrames82 = $$resumer13.elidedFrames;\n$resumer13 = $$resumer13.args[0];\nanswer137 = $$resumer13.vars[0];\nis$s$list120 = $$resumer13.vars[1];\nS$Exp136 = $$resumer13.vars[2];\nis$s$str128 = $$resumer13.vars[3];\ns$list122 = $$resumer13.vars[4];\ns$sym134 = $$resumer13.vars[5];\ns$num126 = $$resumer13.vars[6];\nis$S$Exp116 = $$resumer13.vars[7];\ns$str130 = $$resumer13.vars[8];\nis$s$sym132 = $$resumer13.vars[9];\nis$s$num124 = $$resumer13.vars[10];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans79 = R.mC();\n}\nwhile(!R.isContinuation($ans79)) {\nswitch($step20) {\ncase 0: var S$Exp83 = R.nB(\"S-Exp\",L[8]);\nvar S$Exp136 = R.mBA(S$Exp83,\"S-Exp\");\nvar S$Exp114 = {\"$var\":D};\nvar is$S$Exp116 = {\"$var\":D};\nvar is$s$list120 = {\"$var\":D};\nvar s$list122 = {\"$var\":D};\nvar is$s$num124 = {\"$var\":D};\nvar s$num126 = {\"$var\":D};\nvar is$s$str128 = {\"$var\":D};\nvar s$str130 = {\"$var\":D};\nvar is$s$sym132 = {\"$var\":D};\nvar s$sym134 = {\"$var\":D};\nvar $s$list_getfields88 = function singleton_variant(f) {\nreturn f(this.dict[\"exps\"]);\n};\nvar $s$list_mutablemask87 = [false];\nvar $s$list$base84 = {\"$fieldNames\":[\"exps\"],\n\"_match\":R.mM(\"s-list\",1)};\nvar $s$list$brander85 = R.nB(\"s-list\",L[0]);\nvar $s$list$brands86 = {};\n$s$list$brands86[S$Exp83._brand] = true;\n$s$list$brands86[$s$list$brander85._brand] = true;\nvar s$list89 = R.mVC(L[0],function $synthesizedConstructor_$s$list$base() {\nreturn [List1];\n},[\"exps90\"],[L[1]],[false],[\"exps90\"],$s$list_mutablemask87,$s$list$base84,$s$list$brands86,\"s-list\",$s$list_getfields88,$s$list$base84);\nvar $s$num_getfields95 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"]);\n};\nvar $s$num_mutablemask94 = [false];\nvar $s$num$base91 = {\"$fieldNames\":[\"n\"],\n\"_match\":R.mM(\"s-num\",1)};\nvar $s$num$brander92 = R.nB(\"s-num\",L[2]);\nvar $s$num$brands93 = {};\n$s$num$brands93[S$Exp83._brand] = true;\n$s$num$brands93[$s$num$brander92._brand] = true;\nvar s$num96 = R.mVC(L[2],function $synthesizedConstructor_$s$num$base() {\nreturn [$type$Number3];\n},[\"n97\"],[L[3]],[false],[\"n97\"],$s$num_mutablemask94,$s$num$base91,$s$num$brands93,\"s-num\",$s$num_getfields95,$s$num$base91);\nvar $s$str_getfields102 = function singleton_variant(f) {\nreturn f(this.dict[\"s\"]);\n};\nvar $s$str_mutablemask101 = [false];\nvar $s$str$base98 = {\"$fieldNames\":[\"s\"],\n\"_match\":R.mM(\"s-str\",1)};\nvar $s$str$brander99 = R.nB(\"s-str\",L[4]);\nvar $s$str$brands100 = {};\n$s$str$brands100[S$Exp83._brand] = true;\n$s$str$brands100[$s$str$brander99._brand] = true;\nvar s$str103 = R.mVC(L[4],function $synthesizedConstructor_$s$str$base() {\nreturn [$type$String8];\n},[\"s104\"],[L[5]],[false],[\"s104\"],$s$str_mutablemask101,$s$str$base98,$s$str$brands100,\"s-str\",$s$str_getfields102,$s$str$base98);\nvar $s$sym_getfields109 = function singleton_variant(f) {\nreturn f(this.dict[\"s\"]);\n};\nvar $s$sym_mutablemask108 = [false];\nvar $s$sym$base105 = {\"$fieldNames\":[\"s\"],\n\"_match\":R.mM(\"s-sym\",1)};\nvar $s$sym$brander106 = R.nB(\"s-sym\",L[6]);\nvar $s$sym$brands107 = {};\n$s$sym$brands107[S$Exp83._brand] = true;\n$s$sym$brands107[$s$sym$brander106._brand] = true;\nvar s$sym110 = R.mVC(L[6],function $synthesizedConstructor_$s$sym$base() {\nreturn [$type$String8];\n},[\"s111\"],[L[7]],[false],[\"s111\"],$s$sym_mutablemask108,$s$sym$base105,$s$sym$brands107,\"s-sym\",$s$sym_getfields109,$s$sym$base105);\nvar anf_assign113 = R.mO({\"S-Exp\":G(S$Exp83,\"test\",L[8]),\n\"is-s-list\":G($s$list$brander85,\"test\",L[0]),\n\"s-list\":s$list89,\n\"is-s-num\":G($s$num$brander92,\"test\",L[2]),\n\"s-num\":s$num96,\n\"is-s-str\":G($s$str$brander99,\"test\",L[4]),\n\"s-str\":s$str103,\n\"is-s-sym\":G($s$sym$brander106,\"test\",L[6]),\n\"s-sym\":s$sym110});\nS$Exp114.$var = anf_assign113;\nR.nothing;\n$al80 = L[8];\nvar anf_assign115 = G(S$Exp114.$var,\"S-Exp\",L[8]);\nis$S$Exp116.$var = anf_assign115;\nR.nothing;\n$al80 = L[0];\nvar anf_assign119 = G(S$Exp114.$var,\"is-s-list\",L[0]);\nis$s$list120.$var = anf_assign119;\nR.nothing;\n$al80 = L[0];\nvar anf_assign121 = G(S$Exp114.$var,\"s-list\",L[0]);\ns$list122.$var = anf_assign121;\nR.nothing;\n$al80 = L[2];\nvar anf_assign123 = G(S$Exp114.$var,\"is-s-num\",L[2]);\nis$s$num124.$var = anf_assign123;\nR.nothing;\n$al80 = L[2];\nvar anf_assign125 = G(S$Exp114.$var,\"s-num\",L[2]);\ns$num126.$var = anf_assign125;\nR.nothing;\n$al80 = L[4];\nvar anf_assign127 = G(S$Exp114.$var,\"is-s-str\",L[4]);\nis$s$str128.$var = anf_assign127;\nR.nothing;\n$al80 = L[4];\nvar anf_assign129 = G(S$Exp114.$var,\"s-str\",L[4]);\ns$str130.$var = anf_assign129;\nR.nothing;\n$al80 = L[6];\nvar anf_assign131 = G(S$Exp114.$var,\"is-s-sym\",L[6]);\nis$s$sym132.$var = anf_assign131;\nR.nothing;\n$al80 = L[6];\nvar anf_assign133 = G(S$Exp114.$var,\"s-sym\",L[6]);\ns$sym134.$var = anf_assign133;\nR.nothing;\n$step20 = 1;\n$ans79 = R.maybeMethodCall2(builtins1,\"trace-value\",L[9],L[9],nothing2);\nbreak;\ncase 1: var answer137 = $ans79;\n$step20 = 2;\n$ans79 = R.maybeMethodCall0(builtins1,\"current-checker\",L[8]);\nbreak;\ncase 2: var anf_method_obj135 = $ans79;\n$step20 = 3;\n$ans79 = R.maybeMethodCall0(anf_method_obj135,\"results\",L[8]);\nbreak;\ncase 3: var checks138 = $ans79;\n$step20 = 4;\n$ans79 = R.mO({\"answer\":answer137,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-modules\":{},\n\"defined-values\":{\"is-S-Exp\":is$S$Exp116.$var,\n\"is-s-num\":is$s$num124.$var,\n\"is-s-sym\":is$s$sym132.$var,\n\"s-num\":s$num126.$var,\n\"s-sym\":s$sym134.$var,\n\"is-s-str\":is$s$str128.$var,\n\"s-str\":s$str130.$var,\n\"s-list\":s$list122.$var,\n\"is-s-list\":is$s$list120.$var},\n\"defined-types\":{\"S-Exp\":S$Exp136},\n\"provide-plus-types\":R.mO({\"values\":R.mO({\"is-S-Exp\":is$S$Exp116.$var,\n\"is-s-num\":is$s$num124.$var,\n\"is-s-sym\":is$s$sym132.$var,\n\"s-num\":s$num126.$var,\n\"s-sym\":s$sym134.$var,\n\"is-s-str\":is$s$str128.$var,\n\"s-str\":s$str130.$var,\n\"s-list\":s$list122.$var,\n\"is-s-list\":is$s$list120.$var}),\n\"types\":{\"S-Exp\":S$Exp136},\n\"modules\":{}}),\n\"checks\":checks138});\nbreak;\ncase 4: ++R.GAS;\nreturn $ans79;\ndefault: R.ffi.throwSpinnakerError(L[10],$step20);\n}\n}\nif($step20 !== 4) {\n$ans79.stack[R.EXN_STACKHEIGHT++] = R.mAR($al80,$toplevel21,$step20,[],[answer137,is$s$list120,S$Exp136,is$s$str128,s$list122,s$sym134,s$num126,is$S$Exp116,s$str130,is$s$sym132,is$s$num124],$elidedFrames82);\n}\nreturn $ans79;\n};\nreturn R.safeCall($toplevel21,function module_load(moduleVal) {\nR.modules[\"$builtin://s$exp$structs2\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"modules":{},
"values":{"is-s-list":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
10,
2,
88,
10,
31,
117],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"is-s-list",
"typ":"tany"},
"s-list":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
10,
2,
88,
10,
31,
117],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"s-list",
"typ":"tany"},
"s-str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
12,
2,
143,
12,
22,
163],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"s-str",
"typ":"tany"},
"is-s-str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
12,
2,
143,
12,
22,
163],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"is-s-str",
"typ":"tany"},
"s-sym":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
13,
2,
166,
13,
22,
186],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"s-sym",
"typ":"tany"},
"s-num":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
11,
2,
120,
11,
22,
140],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"s-num",
"typ":"tany"},
"is-s-sym":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
13,
2,
166,
13,
22,
186],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"is-s-sym",
"typ":"tany"},
"is-s-num":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
11,
2,
120,
11,
22,
140],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"is-s-num",
"typ":"tany"},
"is-S-Exp":{"bind":"let",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
9,
0,
74,
14,
3,
190],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"typ":"tany"}},
"datatypes":{"S-Exp":["data",{"local-bind-site":["builtin://s-exp-structs",
9,
0,
74,
14,
3,
190],
"definition-bind-site":["builtin://s-exp-structs",
9,
0,
74,
14,
3,
190],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},"S-Exp",[],[["s-list",
[["exps",
["tyapp",{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://s-exp-structs"},
"name":"List"},[{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://s-exp-structs"},
"name":"S-Exp"}]]]],
{}],["s-num",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}]],
{}],["s-str",
[["s",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}]],
{}],["s-sym",
[["s",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}]],
{}]],{}]},
"aliases":{"S-Exp":"tany"}},
"requires":[{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"lists"}]})